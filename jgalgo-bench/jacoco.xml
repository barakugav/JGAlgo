<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JGAlgo - Benchmarks"><sessioninfo id="fv-az1433-659-5b39868b" start="1703250561128" dump="1703250581038"/><package name="com/jgalgo/bench/impls"><class name="com/jgalgo/bench/impls/SSSPNegativeWeightsBench$GraphArgs" sourcefilename="SSSPNegativeWeightsBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunctionInt;I)V" line="199"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$MatrixDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1896"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1903"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1909"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1915"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPNegativeWeightsBench$RecursiveMatrix" sourcefilename="SSSPNegativeWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="152"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="160"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BellmanFord" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Goldberg" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MSTBench" sourcefilename="MSTBench.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchMST" desc="(Lcom/jgalgo/alg/MinimumSpanningTree;Lorg/openjdk/jmh/infra/Blackhole;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Boruvka" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FredmanTarjan" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Kruskal" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Prim" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Yao" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="KargerKleinTarjan" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/MinimumSpanningTree;" line="114"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchMST$0" desc="(I)I" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="144"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$LinkedDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1656"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1663"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1670"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1676"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ShortestPathSTBench$RecursiveMatrix" sourcefilename="ShortestPathSTBench.java"><method name="&lt;init&gt;" desc="()V" line="168"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="176"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BidirectionalDijkstra" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AStar" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="201"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$2" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/longs/LongIterable;)V" line="2368"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2373"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextLong" desc="()J" line="2378"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$1" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntIterable;)V" line="2349"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2354"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextInt" desc="()I" line="2359"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$Supply$RecursiveMatrix" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="205"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CycleCanceling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CostScaling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$ArrayUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="317"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="324"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="329"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="334"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="339"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="344"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="349"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="354"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="359"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="364"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="369"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="374"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="379"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="384"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="389"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$MurmurHash3$1" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$MurmurHash3;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximumFlowBench$BarabasiAlbert" sourcefilename="MaximumFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="143"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="154"><counter type="INSTRUCTION" missed="5" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EdmondsKarp" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dinic" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="178"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DinicDynamicTrees" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelFifo" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelToFront" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelHighestFirst" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="198"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelPartialAugment" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="203"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelLowestFirst" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="128"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$LinkedUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2073"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2080"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2087"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2094"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/RMQStaticBench$Query$LookupTable" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="215"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateArray" desc="()V" line="222"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="227"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchQuery" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="233"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ReferenceableHeapBench$GraphArgs" sourcefilename="ReferenceableHeapBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunctionInt;I)V" line="217"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/LCADynamicBench" sourcefilename="LCADynamicBench.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchLCA" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic;Lorg/openjdk/jmh/infra/Blackhole;)V" line="76"><counter type="INSTRUCTION" missed="4" covered="88"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GabowSimple" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GabowLinear" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="GabowLongs" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic;" line="118"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateRandOps" desc="(IIJ)Ljava/util/Collection;" line="124"><counter type="INSTRUCTION" missed="8" covered="120"/><counter type="BRANCH" missed="2" covered="5"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchLCA$0" desc="(I)I" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="300"/><counter type="BRANCH" missed="3" covered="14"/><counter type="LINE" missed="3" covered="67"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ReferenceableHeapBench" sourcefilename="ReferenceableHeapBench.java"><method name="&lt;init&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchHeap" desc="(Lcom/jgalgo/internal/ds/ReferenceableHeap$Builder;Lorg/openjdk/jmh/infra/Blackhole;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Pairings" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Fibonacci" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Binomial" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RedBlackTree" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="180"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SplayTree" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$SplayTree$5" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/ReferenceableHeap;" line="198"><counter type="INSTRUCTION" missed="54" covered="12"/><counter type="BRANCH" missed="18" covered="2"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$RedBlackTree$4" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/ReferenceableHeap;" line="181"><counter type="INSTRUCTION" missed="54" covered="12"/><counter type="BRANCH" missed="18" covered="2"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$Binomial$3" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/ReferenceableHeap;" line="164"><counter type="INSTRUCTION" missed="54" covered="12"/><counter type="BRANCH" missed="18" covered="2"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$Fibonacci$2" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/ReferenceableHeap;" line="147"><counter type="INSTRUCTION" missed="54" covered="12"/><counter type="BRANCH" missed="18" covered="2"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$Pairings$1" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/ReferenceableHeap;" line="130"><counter type="INSTRUCTION" missed="54" covered="12"/><counter type="BRANCH" missed="18" covered="2"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchHeap$0" desc="(I)I" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="270" covered="223"/><counter type="BRANCH" missed="90" covered="12"/><counter type="LINE" missed="45" covered="49"/><counter type="COMPLEXITY" missed="50" covered="15"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$MaxFlow$Task" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="235"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newRand" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)Lcom/jgalgo/bench/impls/MinCostFlowBench$MaxFlow$Task;" line="244"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$ArrayDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="235"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="242"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="247"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="252"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="257"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="262"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="267"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="272"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="277"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="282"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="287"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="292"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="297"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="302"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="307"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$MatrixDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1061"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1068"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1073"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1078"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1083"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1088"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1093"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1098"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1103"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1113"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1118"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1128"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1133"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Increment0x61c88647$1" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Increment0x61c88647;)V" line="171"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$MaxFlow" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="231"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchMinCostFlow" desc="(Lcom/jgalgo/alg/MinimumCostFlow;Lorg/openjdk/jmh/infra/Blackhole;)V" line="263"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchMinCostFlow$0" desc="(I)I" line="263"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$CsrDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1225"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1232"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1248"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1253"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1258"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1263"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1268"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1273"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1278"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1283"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1288"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1293"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1298"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1303"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1308"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setup$0" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraph;" line="1236"><counter type="INSTRUCTION" missed="16" covered="17"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1219"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="88"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$LinkedPtrDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1716"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1723"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1730"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1736"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximalCliquesEnumeratorBench" sourcefilename="MaximalCliquesEnumeratorBench.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchMaximalCliques" desc="(Lcom/jgalgo/alg/MaximalCliquesEnumerator;Lorg/openjdk/jmh/infra/Blackhole;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/MaximalCliquesEnumerator;" line="170"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseMultiSourceMultiSink" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)Lit/unimi/dsi/fastutil/Pair;" line="176"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$benchMaximalCliques$0" desc="(I)I" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="49"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="19" covered="10"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MatchingBench$MaximumWeighted" sourcefilename="MatchingBench.java"><method name="&lt;init&gt;" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="161"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAlgo" desc="(Lcom/jgalgo/alg/MatchingAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Gabow1990Simpler" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Gabow1990" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="189"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlossomV" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAlgo$0" desc="(I)I" line="175"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MatchingBench$MaximumCardinalityBipartite" sourcefilename="MatchingBench.java"><method name="&lt;init&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAlgo" desc="(Lcom/jgalgo/alg/MatchingAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CardinalityBipartiteHopcroftKarp" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CardinalityGabow1976" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAlgo$0" desc="(I)I" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/HeapBench$Op$FindMin" sourcefilename="HeapBench.java"/><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$HashtableMultiUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="813"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="820"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="826"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="831"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="836"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="841"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="846"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="851"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="856"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="861"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="866"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="871"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="876"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="881"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="886"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ShortestPathSTBench$Gnp" sourcefilename="ShortestPathSTBench.java"><method name="&lt;init&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BidirectionalDijkstra" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AStar" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$MatrixDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2290"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2297"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2303"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2310"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="circularIterator" desc="(Lit/unimi/dsi/fastutil/ints/IntIterable;)Lit/unimi/dsi/fastutil/ints/IntIterator;" line="2349"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="circularIterator" desc="(Lit/unimi/dsi/fastutil/longs/LongIterable;)Lit/unimi/dsi/fastutil/longs/LongIterator;" line="2368"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$MaxFlow$RecursiveMatrix" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="354"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="364"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CycleCanceling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="380"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CostScaling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="385"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$HashtableMultiDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="730"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="737"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="743"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="748"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="753"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="758"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="763"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="768"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="773"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="778"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="783"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="788"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="793"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="798"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="803"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$MatrixUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1150"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1155"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1165"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1170"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1175"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1180"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1185"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1195"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1200"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1205"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1210"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1215"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$Supply" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchMinCostFlow" desc="(Lcom/jgalgo/alg/MinimumCostFlow;Lorg/openjdk/jmh/infra/Blackhole;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchMinCostFlow$0" desc="(I)I" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$ArrayDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1982"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1989"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1995"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2001"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/LCADynamicBench$OpInitTree" sourcefilename="LCADynamicBench.java"/><class name="com/jgalgo/bench/impls/MinCostFlowBench$1EdgeIterator" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="430"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinimumMeanCycleBench" sourcefilename="MinimumMeanCycleBench.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchMinMeanCycle" desc="(Lcom/jgalgo/alg/MinimumMeanCycle;Lorg/openjdk/jmh/infra/Blackhole;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Howard" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DasdanGupta" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/MinimumMeanCycle;" line="95"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchMinMeanCycle$0" desc="(I)I" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Mult0x7ffb01f" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="()V" line="251"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateGraph" desc="()V" line="258"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="278"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="285"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$1" desc="()Lcom/jgalgo/graph/IdBuilderInt;" line="259"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$0" desc="(Lcom/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Mult0x7ffb01f$1;Lit/unimi/dsi/fastutil/ints/IntSet;)I" line="264"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPPositiveWeightsBench" sourcefilename="SSSPPositiveWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchSSSP" desc="(Lcom/jgalgo/alg/ShortestPathSingleSource;Lorg/openjdk/jmh/infra/Blackhole;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/ShortestPathSingleSource;" line="181"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchSSSP$0" desc="(I)I" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$MaxFlow$BarabasiAlbert" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="314"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="324"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CycleCanceling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="339"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CostScaling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="344"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximalCliquesEnumeratorBench$RecursiveMatrix" sourcefilename="MaximalCliquesEnumeratorBench.java"><method name="&lt;init&gt;" desc="()V" line="139"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="146"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BronKerbosch" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="160"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BronKerboschPivot" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$LinkedPtrDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2111"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2125"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/TreePathMaximaBench" sourcefilename="TreePathMaximaBench.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchTPM" desc="(Lcom/jgalgo/alg/TreePathMaxima;Lorg/openjdk/jmh/infra/Blackhole;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TPMHagerup" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="TPMHagerupWithBitsLookupTable" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateRandQueries" desc="(Lcom/jgalgo/graph/IntGraph;IJ)Lcom/jgalgo/alg/TreePathMaxima$IQueries;" line="113"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchTPM$0" desc="(I)I" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="161"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/LCADynamicBench$OpAddLeaf" sourcefilename="LCADynamicBench.java"><method name="&lt;init&gt;" desc="(I)V" line="175"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximumFlowBench" sourcefilename="MaximumFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchMaxFlow" desc="(Lcom/jgalgo/alg/MaximumFlow;Lorg/openjdk/jmh/infra/Blackhole;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/MaximumFlow;" line="301"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randNetworkInt" desc="(Lcom/jgalgo/graph/IntGraph;J)Lcom/jgalgo/graph/IWeightFunctionInt;" line="321"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="chooseSourceSink" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)Lit/unimi/dsi/fastutil/ints/IntIntPair;" line="330"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseMultiSourceMultiSink" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)Lit/unimi/dsi/fastutil/Pair;" line="338"><counter type="INSTRUCTION" missed="15" covered="79"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchMaxFlow$0" desc="(I)I" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="154"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="8" covered="32"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$LinkedUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="481"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="488"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="494"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="499"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="504"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="509"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="514"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="519"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="524"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="529"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="534"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="539"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="544"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="549"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="554"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$Supply$BarabasiAlbert" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="154"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="164"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CycleCanceling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CostScaling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/MinimumCostFlow;" line="391"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randNetwork" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)Lcom/jgalgo/graph/IWeightFunctionInt;" line="397"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randCost" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)Lcom/jgalgo/graph/IWeightFunctionInt;" line="404"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randLowerBound" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunctionInt;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;Ljava/util/Random;)Lcom/jgalgo/graph/IWeightFunctionInt;" line="412"><counter type="INSTRUCTION" missed="24" covered="301"/><counter type="BRANCH" missed="6" covered="24"/><counter type="LINE" missed="0" covered="63"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randSupply" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunctionInt;Ljava/util/Random;)Lcom/jgalgo/graph/IWeightFunctionInt;" line="507"><counter type="INSTRUCTION" missed="47" covered="295"/><counter type="BRANCH" missed="10" covered="24"/><counter type="LINE" missed="0" covered="65"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="71" covered="673"/><counter type="BRANCH" missed="16" covered="52"/><counter type="LINE" missed="0" covered="142"/><counter type="COMPLEXITY" missed="8" covered="33"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$HashtableDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="896"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="903"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="908"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="913"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="918"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="923"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="928"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="933"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="938"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="943"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="948"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="953"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="958"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="963"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="968"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximumFlowBench$Gnp" sourcefilename="MaximumFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="84"><counter type="INSTRUCTION" missed="5" covered="74"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EdmondsKarp" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dinic" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelFifo" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelToFront" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelHighestFirst" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelPartialAugment" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelLowestFirst" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="122"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/RMQStaticBench$PreProcessPlusMinusOne" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchPreProcess" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchPreProcess$0" desc="(I)I" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/HeapBench$HeapFromReferenceableHeap" sourcefilename="HeapBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/IntReferenceableHeap;)V" line="178"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="184"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(Ljava/lang/Integer;)V" line="189"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAll" desc="(Ljava/util/Collection;)V" line="194"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findMin" desc="()Ljava/lang/Integer;" line="200"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMin" desc="()Ljava/lang/Integer;" line="205"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Integer;)Z" line="210"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/Heap;)V" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="224"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isNotEmpty" desc="()Z" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="234"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="comparator" desc="()Ljava/util/Comparator;" line="239"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="29"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="8"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="7" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Rand" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="()V" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateGraph" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$1" desc="()Lcom/jgalgo/graph/IdBuilderInt;" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$0" desc="(Ljava/util/Random;Lit/unimi/dsi/fastutil/ints/IntSet;)I" line="133"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Mult0x7ffb01f$1" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Mult0x7ffb01f;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ShortestPathSTBench$BarabasiAlbert" sourcefilename="ShortestPathSTBench.java"><method name="&lt;init&gt;" desc="()V" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="134"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BidirectionalDijkstra" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="AStar" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="158"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Counter" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateGraph" desc="()V" line="99"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/LCADynamicBench$OpLCAQuery" sourcefilename="LCADynamicBench.java"><method name="&lt;init&gt;" desc="(II)V" line="183"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1500"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="(Ljava/lang/String;Ljava/util/function/Function;ZZZ)V" line="1508"><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="(Ljava/lang/String;Ljava/util/function/Supplier;ZZZ)V" line="1541"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1552"><counter type="INSTRUCTION" missed="39" covered="23"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="8" covered="5"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setup$0" desc="(ZLjava/util/function/Supplier;Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraph;" line="1542"><counter type="INSTRUCTION" missed="16" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1500"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="167"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="8" covered="41"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$HashtableUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1806"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1813"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1820"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1826"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Increment0x61c88647" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateGraph" desc="()V" line="170"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="190"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$1" desc="()Lcom/jgalgo/graph/IdBuilderInt;" line="171"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$0" desc="(Lcom/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$Increment0x61c88647$1;Lit/unimi/dsi/fastutil/ints/IntSet;)I" line="176"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$LinkedPtrUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2142"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2156"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$Supply$Task" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newRand" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)Lcom/jgalgo/bench/impls/MinCostFlowBench$Supply$Task;" line="77"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPPositiveWeightsBench$GraphArgs" sourcefilename="SSSPPositiveWeightsBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunctionInt;I)V" line="191"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$HashtableDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1776"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1783"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1790"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1796"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MatchingBench$MaximumCardinality" sourcefilename="MatchingBench.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAlgo" desc="(Lcom/jgalgo/alg/MatchingAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CardinalityGabow1976" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAlgo$0" desc="(I)I" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MatchingBench" sourcefilename="MatchingBench.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/MatchingAlgo;" line="399"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/RMQStaticBench$Query" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randArray" desc="(IJ)[I" line="153"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createArray" desc="(Lcom/jgalgo/internal/ds/RMQStatic;I)Lit/unimi/dsi/fastutil/Pair;" line="157"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateArray" desc="(Ljava/lang/String;Lcom/jgalgo/internal/ds/RMQStatic;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="193"><counter type="INSTRUCTION" missed="3" covered="28"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchQuery" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="201"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="212"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="38"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ShortestPathSTBench$GraphArgs" sourcefilename="ShortestPathSTBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunctionInt;IILjava/util/function/IntToDoubleFunction;)V" line="218"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$MatrixUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2320"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2327"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2334"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2341"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$Supply$Gnp" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="114"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CycleCanceling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CostScaling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/UnionFindBench" sourcefilename="UnionFindBench.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchUnionFindByRunningMSTKruskal" desc="(Lcom/jgalgo/internal/ds/UnionFind$Builder;Lorg/openjdk/jmh/infra/Blackhole;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcMSTKruskal" desc="(Lcom/jgalgo/graph/IndexGraph;[ILcom/jgalgo/internal/ds/UnionFind$Builder;)[I" line="102"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UnionFindArrayMSTKruskal" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="UnionFindPtrMSTKruskal" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/internal/ds/UnionFind$Builder;" line="136"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchUnionFindByRunningMSTKruskal$0" desc="(I)I" line="95"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="251"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/LCADynamicBench$Op" sourcefilename="LCADynamicBench.java"/><class name="com/jgalgo/bench/impls/MaximumFlowBench$MaxFlowTask" sourcefilename="MaximumFlowBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunctionInt;II)V" line="312"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MatchingBench$MaximumWeightedBipartite" sourcefilename="MatchingBench.java"><method name="&lt;init&gt;" desc="()V" line="205"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="216"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAlgo" desc="(Lcom/jgalgo/alg/MatchingAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="230"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BipartiteHungarianMethod" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="239"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BipartiteSSSP" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="244"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlossomV" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="249"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAlgo$0" desc="(I)I" line="230"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/RMQStaticBench$PreProcess" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="67"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchPreProcess" desc="(Lcom/jgalgo/internal/ds/RMQStatic;Lorg/openjdk/jmh/infra/Blackhole;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="LookupTable" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PowerOf2Table" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CartesianTrees" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchPreProcess$0" desc="(I)I" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximumFlowBench$RecursiveMatrix" sourcefilename="MaximumFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="224"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="235"><counter type="INSTRUCTION" missed="5" covered="81"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="EdmondsKarp" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="255"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dinic" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="260"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DinicDynamicTrees" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="265"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelFifo" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="270"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelToFront" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="275"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelHighestFirst" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="280"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelPartialAugment" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="285"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="PushRelabelLowestFirst" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="290"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="135"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPNegativeWeightsBench" sourcefilename="SSSPNegativeWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchSSSP" desc="(Lcom/jgalgo/alg/ShortestPathSingleSource;Lorg/openjdk/jmh/infra/Blackhole;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/ShortestPathSingleSource;" line="189"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchSSSP$0" desc="(I)I" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximalCliquesEnumeratorBench$BarabasiAlbert" sourcefilename="MaximalCliquesEnumeratorBench.java"><method name="&lt;init&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="111"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BronKerbosch" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BronKerboschPivot" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1951"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="(Ljava/lang/String;Ljava/util/function/Function;ZZZ)V" line="1960"><counter type="INSTRUCTION" missed="8" covered="28"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1968"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1951"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="55"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPPositiveWeightsBench$BarabasiAlbert" sourcefilename="SSSPPositiveWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dijkstra" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dial" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MinCostFlowBench$MaxFlow$Gnp" sourcefilename="MinCostFlowBench.java"><method name="&lt;init&gt;" desc="()V" line="274"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="284"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CycleCanceling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="CostScaling" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="304"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/HeapBench" sourcefilename="HeapBench.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchHeap" desc="(Lcom/jgalgo/internal/ds/Heap$Builder;Lorg/openjdk/jmh/infra/Blackhole;)V" line="109"><counter type="INSTRUCTION" missed="8" covered="63"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Binary" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Pairing" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Fibonacci" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Binomial" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="151"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RedBlackTree" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="SplayTree" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="161"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="heapBuilder" desc="(Ljava/util/function/Function;)Lcom/jgalgo/internal/ds/Heap$Builder;" line="166"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchHeap$0" desc="(I)I" line="111"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="227"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="3" covered="51"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/RMQStaticBench$Query$PlusMinusOne" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="271"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateArray" desc="()V" line="278"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randArray" desc="(IJ)[I" line="283"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="292"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchQuery" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="298"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MatchingBench$MinimumPerfectBipartite" sourcefilename="MatchingBench.java"><method name="&lt;init&gt;" desc="()V" line="331"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="342"><counter type="INSTRUCTION" missed="34" covered="131"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="3" covered="22"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAlgo" desc="(Lcom/jgalgo/alg/MatchingAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="374"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BipartiteHungarianMethod" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="383"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlossomV" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="393"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAlgo$0" desc="(I)I" line="374"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="325"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="189"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="3" covered="36"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="(Ljava/lang/String;Ljava/util/function/Function;ZZZ)V" line="67"><counter type="INSTRUCTION" missed="0" covered="196"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="(Ljava/lang/String;Ljava/util/function/Supplier;ZZZ)V" line="123"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="171"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="177"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="199"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="208"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setup$0" desc="(ZLjava/util/function/Supplier;Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraph;" line="124"><counter type="INSTRUCTION" missed="16" covered="16"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="480"/><counter type="BRANCH" missed="4" covered="38"/><counter type="LINE" missed="0" covered="118"/><counter type="COMPLEXITY" missed="2" covered="37"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$ArrayUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2011"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2018"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2025"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2032"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1566"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="(Ljava/lang/String;Ljava/util/function/Function;ZZZ)V" line="1575"><counter type="INSTRUCTION" missed="8" covered="28"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1583"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1566"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="55"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$ArrayUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1626"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1633"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1640"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1646"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ColoringBench" sourcefilename="ColoringBench.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchColoring" desc="(Lcom/jgalgo/alg/ColoringAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Greedy" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="DSatur" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="RecursiveLargestFirst" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/ColoringAlgo;" line="99"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchColoring$0" desc="(I)I" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$LinkedPtrDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="564"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="571"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="577"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="582"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="587"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="592"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="597"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="602"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="607"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="612"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="617"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="622"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="627"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="632"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="637"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$HashtableMultiUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2259"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2266"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2273"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2280"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$HashtableDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2166"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2173"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2180"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2187"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/CyclesEnumeratorBench" sourcefilename="CyclesEnumeratorBench.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchMST" desc="(Lcom/jgalgo/alg/CyclesEnumerator;Lorg/openjdk/jmh/infra/Blackhole;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Johnson" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Tarjan" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/CyclesEnumerator;" line="92"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchMST$0" desc="(I)I" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$MatrixUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1925"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1932"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1939"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1945"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/RMQStaticBench$Query$CartesianTrees" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="308"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateArray" desc="()V" line="315"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="320"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchQuery" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="326"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$HashtableMultiDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2228"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2235"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2242"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2249"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$HashtableMultiDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1836"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1843"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1850"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1856"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/RMQStaticBench$Query$PowerOf2Table" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="243"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateArray" desc="()V" line="250"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="255"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchQuery" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="261"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPNegativeWeightsBench$Gnp" sourcefilename="SSSPNegativeWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BellmanFord" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Goldberg" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="101"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$HashtableMultiUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1866"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1873"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1880"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1886"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/HeapBench$Op" sourcefilename="HeapBench.java"/><class name="com/jgalgo/bench/impls/RMQStaticBench" sourcefilename="RMQStaticBench.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/internal/ds/RMQStatic;" line="333"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="9"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$ArrayDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1597"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1604"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1610"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1616"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$HashtableUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2197"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2204"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2211"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2218"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$HashtableUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="978"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="985"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="991"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="996"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1001"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1006"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1011"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1016"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1021"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1026"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1031"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1036"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1041"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1046"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1051"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MaximalCliquesEnumeratorBench$Gnp" sourcefilename="MaximalCliquesEnumeratorBench.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BronKerbosch" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BronKerboschPivot" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$LinkedPtrUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="647"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="654"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="660"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="665"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="670"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="675"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="680"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="685"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="690"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="695"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="700"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="705"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="710"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="715"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="720"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPNegativeWeightsBench$BarabasiAlbert" sourcefilename="SSSPNegativeWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BellmanFord" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Goldberg" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/MatchingBench$MinimumPerfect" sourcefilename="MatchingBench.java"><method name="&lt;init&gt;" desc="()V" line="260"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="271"><counter type="INSTRUCTION" missed="47" covered="95"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAlgo" desc="(Lcom/jgalgo/alg/MatchingAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="BlossomV" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="320"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAlgo$0" desc="(I)I" line="301"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="254"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="147"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="4" covered="30"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$LinkedDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="399"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="406"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="411"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="416"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="421"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="426"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="431"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="436"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="441"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="446"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="451"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="456"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="461"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="466"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="471"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$MurmurHash3" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="()V" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateGraph" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="234"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$1" desc="()Lcom/jgalgo/graph/IdBuilderInt;" line="215"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setupCreateGraph$0" desc="(Lcom/jgalgo/bench/impls/IntGraphIdBuilderBench$Query$MurmurHash3$1;Lit/unimi/dsi/fastutil/ints/IntSet;)I" line="220"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/HeapBench$1" sourcefilename="HeapBench.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/Heap;" line="169"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Vertex$LinkedDirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="2042"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="2049"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="2056"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="2063"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$LinkedPtrUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1746"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1753"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1760"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1766"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$CsrUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1318"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1325"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1341"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1346"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1351"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1356"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1361"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1366"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1371"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1376"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1381"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1386"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1391"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1396"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1401"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setup$0" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraph;" line="1329"><counter type="INSTRUCTION" missed="14" covered="17"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1312"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="88"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/HeapBench$Op$Insert" sourcefilename="HeapBench.java"><method name="&lt;init&gt;" desc="(I)V" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/GraphBench$EdgesRead$CsrDirectedReindexed" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1411"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1418"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1434"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1439"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1444"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1449"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchOutEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1454"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1459"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSize" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1464"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1469"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesSource" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1474"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchInEdgesTarget" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1479"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdge" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1484"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdges" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1489"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchGetEdgesIteration" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1494"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setup$0" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraph;" line="1422"><counter type="INSTRUCTION" missed="16" covered="20"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1405"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="91"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/TreePathMaximaBench$TPMArgs" sourcefilename="TreePathMaximaBench.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/alg/TreePathMaxima$IQueries;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/StrongConnectedComponentsBench" sourcefilename="StrongConnectedComponentsBench.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="61"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAPSPPositiveWeights" desc="(Lcom/jgalgo/alg/StronglyConnectedComponentsAlgo;Lorg/openjdk/jmh/infra/Blackhole;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pathBasedDfs" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Tarjan" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/StronglyConnectedComponentsAlgo;" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAPSPPositiveWeights$0" desc="(I)I" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/APSPBench" sourcefilename="APSPBench.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchAPSPPositiveWeights" desc="(Lcom/jgalgo/alg/ShortestPathAllPairs;Lorg/openjdk/jmh/infra/Blackhole;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="FloydWarshall" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Johnson" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/ShortestPathAllPairs;" line="93"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchAPSPPositiveWeights$0" desc="(I)I" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/ShortestPathSTBench" sourcefilename="ShortestPathSTBench.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="benchStShortestPath" desc="(Ljava/lang/Object;Lorg/openjdk/jmh/infra/Blackhole;)V" line="59"><counter type="INSTRUCTION" missed="4" covered="56"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAlgo" desc="(Ljava/lang/String;)Lcom/jgalgo/alg/ShortestPathHeuristicST;" line="206"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randAdmissibleHeuristic" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunction;IJ)Ljava/util/function/IntToDoubleFunction;" line="228"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$benchStShortestPath$0" desc="(I)I" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="138"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/IntGraphIdBuilderBench$Query" sourcefilename="IntGraphIdBuilderBench.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateGraph" desc="(Ljava/lang/String;Ljava/util/function/Supplier;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupCreateQueries" desc="()V" line="74"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPPositiveWeightsBench$Gnp" sourcefilename="SSSPPositiveWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dijkstra" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dial" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/SSSPPositiveWeightsBench$RecursiveMatrix" sourcefilename="SSSPPositiveWeightsBench.java"><method name="&lt;init&gt;" desc="()V" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dijkstra" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="171"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="Dial" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/impls/HeapBench$Op$ExtractMin" sourcefilename="HeapBench.java"/><class name="com/jgalgo/bench/impls/GraphBench$Remove$Edge$LinkedUndirected" sourcefilename="GraphBench.java"><method name="&lt;init&gt;" desc="()V" line="1686"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setup" desc="()V" line="1693"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="restoreGraph" desc="()V" line="1700"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bench" desc="(Lorg/openjdk/jmh/infra/Blackhole;)V" line="1706"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="UnionFindBench.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="16" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="2"/><line nr="113" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="251"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="APSPBench.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatchingBench.java"><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="16" mb="0" cb="0"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="2"/><line nr="121" mi="0" ci="12" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="16" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="2"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="16" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="0" cb="2"/><line nr="223" mi="0" ci="12" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="16" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="2"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="280" mi="0" ci="6" mb="1" cb="1"/><line nr="281" mi="5" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="9" ci="1" mb="2" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="2" ci="8" mb="1" cb="1"/><line nr="289" mi="8" ci="0" mb="0" cb="0"/><line nr="290" mi="8" ci="0" mb="0" cb="0"/><line nr="291" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="10" ci="1" mb="2" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="16" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="6" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="343" mi="0" ci="6" mb="0" cb="0"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="348" mi="0" ci="7" mb="0" cb="2"/><line nr="349" mi="0" ci="12" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="0"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="354" mi="0" ci="6" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="9" mb="0" cb="0"/><line nr="357" mi="0" ci="9" mb="0" cb="0"/><line nr="358" mi="9" ci="1" mb="2" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="360" mi="0" ci="8" mb="0" cb="0"/><line nr="361" mi="2" ci="6" mb="1" cb="1"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="363" mi="4" ci="0" mb="0" cb="0"/><line nr="364" mi="5" ci="0" mb="0" cb="0"/><line nr="366" mi="10" ci="1" mb="2" cb="0"/><line nr="368" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="16" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="6" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="5" mb="0" cb="0"/><line nr="384" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="4" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="775"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="8" covered="157"/><counter type="COMPLEXITY" missed="8" covered="45"/><counter type="METHOD" missed="1" covered="39"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="MinCostFlowBench.java"><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="12" mb="0" cb="2"/><line nr="88" mi="0" ci="13" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="16" mb="0" cb="0"/><line nr="104" mi="0" ci="14" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="2"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="2"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="2"/><line nr="214" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="16" mb="0" cb="0"/><line nr="264" mi="0" ci="16" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="0"/><line nr="290" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="7" mb="0" cb="2"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="293" mi="0" ci="7" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="325" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="6" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="0" cb="2"/><line nr="332" mi="0" ci="6" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="5" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="6" mb="0" cb="0"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="5" mb="0" cb="0"/><line nr="370" mi="0" ci="6" mb="0" cb="0"/><line nr="371" mi="0" ci="6" mb="0" cb="0"/><line nr="372" mi="0" ci="7" mb="0" cb="2"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="381" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="5" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="5" mb="0" cb="0"/><line nr="398" mi="0" ci="12" mb="0" cb="2"/><line nr="399" mi="0" ci="9" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="12" mb="0" cb="2"/><line nr="406" mi="0" ci="9" mb="0" cb="0"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="414" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="12" mb="0" cb="2"/><line nr="416" mi="0" ci="8" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="421" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="10" mb="0" cb="4"/><line nr="428" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="438" mi="0" ci="12" mb="0" cb="2"/><line nr="439" mi="0" ci="5" mb="0" cb="0"/><line nr="440" mi="0" ci="4" mb="0" cb="0"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="5" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="18" mb="0" cb="2"/><line nr="454" mi="0" ci="6" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="2"/><line nr="456" mi="0" ci="1" mb="0" cb="0"/><line nr="457" mi="9" ci="1" mb="2" cb="0"/><line nr="458" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="4" mb="0" cb="2"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="2"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="3" mb="0" cb="2"/><line nr="476" mi="0" ci="10" mb="0" cb="0"/><line nr="477" mi="0" ci="7" mb="0" cb="0"/><line nr="478" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="9" ci="1" mb="2" cb="0"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="1" mb="0" cb="0"/><line nr="488" mi="0" ci="11" mb="0" cb="0"/><line nr="489" mi="6" ci="1" mb="2" cb="0"/><line nr="490" mi="0" ci="11" mb="0" cb="2"/><line nr="491" mi="0" ci="10" mb="0" cb="0"/><line nr="494" mi="0" ci="5" mb="0" cb="0"/><line nr="495" mi="0" ci="4" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="2"/><line nr="497" mi="0" ci="10" mb="0" cb="0"/><line nr="498" mi="0" ci="11" mb="0" cb="2"/><line nr="499" mi="0" ci="12" mb="0" cb="0"/><line nr="500" mi="0" ci="8" mb="0" cb="0"/><line nr="501" mi="0" ci="1" mb="0" cb="0"/><line nr="502" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="511" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="4" mb="0" cb="0"/><line nr="513" mi="8" ci="1" mb="2" cb="0"/><line nr="514" mi="0" ci="6" mb="0" cb="0"/><line nr="515" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="8" mb="0" cb="2"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="0" ci="2" mb="0" cb="2"/><line nr="519" mi="0" ci="7" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="2"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="527" mi="0" ci="4" mb="0" cb="0"/><line nr="528" mi="0" ci="12" mb="0" cb="2"/><line nr="529" mi="0" ci="8" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="5" mb="0" cb="0"/><line nr="534" mi="0" ci="5" mb="0" cb="0"/><line nr="535" mi="0" ci="4" mb="0" cb="0"/><line nr="536" mi="0" ci="4" mb="0" cb="0"/><line nr="538" mi="0" ci="3" mb="0" cb="2"/><line nr="539" mi="15" ci="1" mb="2" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="5" mb="0" cb="0"/><line nr="547" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="2" mb="0" cb="0"/><line nr="552" mi="0" ci="5" mb="0" cb="0"/><line nr="553" mi="0" ci="4" mb="0" cb="0"/><line nr="554" mi="0" ci="16" mb="0" cb="2"/><line nr="555" mi="0" ci="4" mb="0" cb="2"/><line nr="556" mi="0" ci="1" mb="0" cb="0"/><line nr="557" mi="9" ci="1" mb="2" cb="0"/><line nr="558" mi="0" ci="4" mb="0" cb="0"/><line nr="559" mi="0" ci="4" mb="0" cb="2"/><line nr="560" mi="0" ci="1" mb="0" cb="0"/><line nr="561" mi="0" ci="4" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="2"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="568" mi="0" ci="4" mb="0" cb="0"/><line nr="569" mi="0" ci="2" mb="0" cb="0"/><line nr="570" mi="0" ci="1" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="2"/><line nr="576" mi="0" ci="10" mb="0" cb="0"/><line nr="577" mi="0" ci="7" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="9" ci="1" mb="2" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="585" mi="0" ci="1" mb="0" cb="0"/><line nr="588" mi="0" ci="11" mb="0" cb="0"/><line nr="589" mi="6" ci="1" mb="2" cb="0"/><line nr="590" mi="0" ci="11" mb="0" cb="2"/><line nr="591" mi="0" ci="10" mb="0" cb="0"/><line nr="594" mi="0" ci="6" mb="0" cb="0"/><line nr="595" mi="0" ci="9" mb="0" cb="0"/><line nr="596" mi="0" ci="3" mb="0" cb="2"/><line nr="597" mi="0" ci="8" mb="0" cb="0"/><line nr="598" mi="0" ci="8" mb="0" cb="0"/><line nr="599" mi="0" ci="8" mb="0" cb="0"/><line nr="601" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="1325"/><counter type="BRANCH" missed="16" covered="66"/><counter type="LINE" missed="0" covered="282"/><counter type="COMPLEXITY" missed="8" covered="75"/><counter type="METHOD" missed="0" covered="42"/><counter type="CLASS" missed="0" covered="12"/></sourcefile><sourcefile name="MaximalCliquesEnumeratorBench.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="16" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="2" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="12" ci="0" mb="0" cb="0"/><line nr="187" mi="12" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="2" cb="0"/><line nr="193" mi="7" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="2" cb="0"/><line nr="195" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="2" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="221"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="19" covered="50"/><counter type="COMPLEXITY" missed="7" covered="20"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="CyclesEnumeratorBench.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="108"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SSSPPositiveWeightsBench.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="16" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="2"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="2"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="10" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="319"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="68"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="LCADynamicBench.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="1" cb="1"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="1" cb="1"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="11" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="16" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="1" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="315"/><counter type="BRANCH" missed="3" covered="14"/><counter type="LINE" missed="3" covered="74"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="TreePathMaximaBench.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="2"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="16" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="173"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ShortestPathSTBench.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="16" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="12" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="12" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="2"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="12" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="12" mb="0" cb="2"/><line nr="234" mi="0" ci="14" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="451"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="92"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="ReferenceableHeapBench.java"><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="16" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="2" cb="2"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="4" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="4" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="4" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="138" mi="6" ci="0" mb="4" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="2" cb="2"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="6" ci="0" mb="4" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="4" cb="0"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="4" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="6" ci="0" mb="4" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="2" cb="2"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="4" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="4" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="6" ci="0" mb="4" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="4" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="2" cb="2"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="6" ci="0" mb="4" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="4" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="4" cb="0"/><line nr="188" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="6" ci="0" mb="4" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="2" cb="2"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="4" cb="0"/><line nr="201" mi="6" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="4" cb="0"/><line nr="203" mi="6" ci="0" mb="0" cb="0"/><line nr="204" mi="6" ci="0" mb="4" cb="0"/><line nr="205" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="6" ci="0" mb="4" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="270" covered="235"/><counter type="BRANCH" missed="90" covered="12"/><counter type="LINE" missed="45" covered="54"/><counter type="COMPLEXITY" missed="50" covered="16"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="HeapBench.java"><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="16" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="3" mb="1" cb="1"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="1" cb="1"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="169" mi="0" ci="10" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="10" ci="0" mb="2" cb="0"/><line nr="195" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="2" cb="0"/><line nr="212" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="235" mi="1" ci="0" mb="0" cb="0"/><line nr="239" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="278"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="17" covered="63"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="7" covered="19"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ColoringBench.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StrongConnectedComponentsBench.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="2"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="16" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RMQStaticBench.java"><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="16" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="2"/><line nr="127" mi="0" ci="15" mb="0" cb="2"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="16" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="2"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="2"/><line nr="178" mi="0" ci="18" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="2"/><line nr="194" mi="0" ci="9" mb="0" cb="0"/><line nr="195" mi="0" ci="11" mb="1" cb="1"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="17" mb="0" cb="2"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="8" mb="0" cb="2"/><line nr="286" mi="0" ci="15" mb="0" cb="2"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="6" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="536"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="2" covered="113"/><counter type="COMPLEXITY" missed="2" covered="46"/><counter type="METHOD" missed="1" covered="35"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="MSTBench.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="16" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="144"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphBench.java"><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="8" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="2"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="4"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="4"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="4"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="8" ci="1" mb="2" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="8" ci="1" mb="2" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="2"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="2"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="2"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="7" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="10" mb="0" cb="2"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="15" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="15" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="335" mi="0" ci="1" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="1" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="1" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="15" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="1" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="1" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="461" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="0" ci="1" mb="0" cb="0"/><line nr="466" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="1" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="488" mi="0" ci="15" mb="0" cb="0"/><line nr="490" mi="0" ci="1" mb="0" cb="0"/><line nr="494" mi="0" ci="3" mb="0" cb="0"/><line nr="495" mi="0" ci="1" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="0" cb="0"/><line nr="500" mi="0" ci="1" mb="0" cb="0"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="3" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="1" mb="0" cb="0"/><line nr="529" mi="0" ci="3" mb="0" cb="0"/><line nr="530" mi="0" ci="1" mb="0" cb="0"/><line nr="534" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="539" mi="0" ci="3" mb="0" cb="0"/><line nr="540" mi="0" ci="1" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="545" mi="0" ci="1" mb="0" cb="0"/><line nr="549" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="554" mi="0" ci="3" mb="0" cb="0"/><line nr="555" mi="0" ci="1" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="15" mb="0" cb="0"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="577" mi="0" ci="3" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="1" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="1" mb="0" cb="0"/><line nr="592" mi="0" ci="3" mb="0" cb="0"/><line nr="593" mi="0" ci="1" mb="0" cb="0"/><line nr="597" mi="0" ci="3" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><line nr="603" mi="0" ci="1" mb="0" cb="0"/><line nr="607" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="1" mb="0" cb="0"/><line nr="612" mi="0" ci="3" mb="0" cb="0"/><line nr="613" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="0" ci="3" mb="0" cb="0"/><line nr="618" mi="0" ci="1" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="623" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="0" ci="3" mb="0" cb="0"/><line nr="628" mi="0" ci="1" mb="0" cb="0"/><line nr="632" mi="0" ci="3" mb="0" cb="0"/><line nr="633" mi="0" ci="1" mb="0" cb="0"/><line nr="637" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="0" ci="1" mb="0" cb="0"/><line nr="647" mi="0" ci="3" mb="0" cb="0"/><line nr="654" mi="0" ci="15" mb="0" cb="0"/><line nr="656" mi="0" ci="1" mb="0" cb="0"/><line nr="660" mi="0" ci="3" mb="0" cb="0"/><line nr="661" mi="0" ci="1" mb="0" cb="0"/><line nr="665" mi="0" ci="3" mb="0" cb="0"/><line nr="666" mi="0" ci="1" mb="0" cb="0"/><line nr="670" mi="0" ci="3" mb="0" cb="0"/><line nr="671" mi="0" ci="1" mb="0" cb="0"/><line nr="675" mi="0" ci="3" mb="0" cb="0"/><line nr="676" mi="0" ci="1" mb="0" cb="0"/><line nr="680" mi="0" ci="3" mb="0" cb="0"/><line nr="681" mi="0" ci="1" mb="0" cb="0"/><line nr="685" mi="0" ci="3" mb="0" cb="0"/><line nr="686" mi="0" ci="1" mb="0" cb="0"/><line nr="690" mi="0" ci="3" mb="0" cb="0"/><line nr="691" mi="0" ci="1" mb="0" cb="0"/><line nr="695" mi="0" ci="3" mb="0" cb="0"/><line nr="696" mi="0" ci="1" mb="0" cb="0"/><line nr="700" mi="0" ci="3" mb="0" cb="0"/><line nr="701" mi="0" ci="1" mb="0" cb="0"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="0" ci="1" mb="0" cb="0"/><line nr="710" mi="0" ci="3" mb="0" cb="0"/><line nr="711" mi="0" ci="1" mb="0" cb="0"/><line nr="715" mi="0" ci="3" mb="0" cb="0"/><line nr="716" mi="0" ci="1" mb="0" cb="0"/><line nr="720" mi="0" ci="3" mb="0" cb="0"/><line nr="721" mi="0" ci="1" mb="0" cb="0"/><line nr="730" mi="0" ci="3" mb="0" cb="0"/><line nr="737" mi="0" ci="15" mb="0" cb="0"/><line nr="739" mi="0" ci="1" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><line nr="744" mi="0" ci="1" mb="0" cb="0"/><line nr="748" mi="0" ci="3" mb="0" cb="0"/><line nr="749" mi="0" ci="1" mb="0" cb="0"/><line nr="753" mi="0" ci="3" mb="0" cb="0"/><line nr="754" mi="0" ci="1" mb="0" cb="0"/><line nr="758" mi="0" ci="3" mb="0" cb="0"/><line nr="759" mi="0" ci="1" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="764" mi="0" ci="1" mb="0" cb="0"/><line nr="768" mi="0" ci="3" mb="0" cb="0"/><line nr="769" mi="0" ci="1" mb="0" cb="0"/><line nr="773" mi="0" ci="3" mb="0" cb="0"/><line nr="774" mi="0" ci="1" mb="0" cb="0"/><line nr="778" mi="0" ci="3" mb="0" cb="0"/><line nr="779" mi="0" ci="1" mb="0" cb="0"/><line nr="783" mi="0" ci="3" mb="0" cb="0"/><line nr="784" mi="0" ci="1" mb="0" cb="0"/><line nr="788" mi="0" ci="3" mb="0" cb="0"/><line nr="789" mi="0" ci="1" mb="0" cb="0"/><line nr="793" mi="0" ci="3" mb="0" cb="0"/><line nr="794" mi="0" ci="1" mb="0" cb="0"/><line nr="798" mi="0" ci="3" mb="0" cb="0"/><line nr="799" mi="0" ci="1" mb="0" cb="0"/><line nr="803" mi="0" ci="3" mb="0" cb="0"/><line nr="804" mi="0" ci="1" mb="0" cb="0"/><line nr="813" mi="0" ci="3" mb="0" cb="0"/><line nr="820" mi="0" ci="15" mb="0" cb="0"/><line nr="822" mi="0" ci="1" mb="0" cb="0"/><line nr="826" mi="0" ci="3" mb="0" cb="0"/><line nr="827" mi="0" ci="1" mb="0" cb="0"/><line nr="831" mi="0" ci="3" mb="0" cb="0"/><line nr="832" mi="0" ci="1" mb="0" cb="0"/><line nr="836" mi="0" ci="3" mb="0" cb="0"/><line nr="837" mi="0" ci="1" mb="0" cb="0"/><line nr="841" mi="0" ci="3" mb="0" cb="0"/><line nr="842" mi="0" ci="1" mb="0" cb="0"/><line nr="846" mi="0" ci="3" mb="0" cb="0"/><line nr="847" mi="0" ci="1" mb="0" cb="0"/><line nr="851" mi="0" ci="3" mb="0" cb="0"/><line nr="852" mi="0" ci="1" mb="0" cb="0"/><line nr="856" mi="0" ci="3" mb="0" cb="0"/><line nr="857" mi="0" ci="1" mb="0" cb="0"/><line nr="861" mi="0" ci="3" mb="0" cb="0"/><line nr="862" mi="0" ci="1" mb="0" cb="0"/><line nr="866" mi="0" ci="3" mb="0" cb="0"/><line nr="867" mi="0" ci="1" mb="0" cb="0"/><line nr="871" mi="0" ci="3" mb="0" cb="0"/><line nr="872" mi="0" ci="1" mb="0" cb="0"/><line nr="876" mi="0" ci="3" mb="0" cb="0"/><line nr="877" mi="0" ci="1" mb="0" cb="0"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="882" mi="0" ci="1" mb="0" cb="0"/><line nr="886" mi="0" ci="3" mb="0" cb="0"/><line nr="887" mi="0" ci="1" mb="0" cb="0"/><line nr="896" mi="0" ci="3" mb="0" cb="0"/><line nr="903" mi="0" ci="15" mb="0" cb="0"/><line nr="904" mi="0" ci="1" mb="0" cb="0"/><line nr="908" mi="0" ci="3" mb="0" cb="0"/><line nr="909" mi="0" ci="1" mb="0" cb="0"/><line nr="913" mi="0" ci="3" mb="0" cb="0"/><line nr="914" mi="0" ci="1" mb="0" cb="0"/><line nr="918" mi="0" ci="3" mb="0" cb="0"/><line nr="919" mi="0" ci="1" mb="0" cb="0"/><line nr="923" mi="0" ci="3" mb="0" cb="0"/><line nr="924" mi="0" ci="1" mb="0" cb="0"/><line nr="928" mi="0" ci="3" mb="0" cb="0"/><line nr="929" mi="0" ci="1" mb="0" cb="0"/><line nr="933" mi="0" ci="3" mb="0" cb="0"/><line nr="934" mi="0" ci="1" mb="0" cb="0"/><line nr="938" mi="0" ci="3" mb="0" cb="0"/><line nr="939" mi="0" ci="1" mb="0" cb="0"/><line nr="943" mi="0" ci="3" mb="0" cb="0"/><line nr="944" mi="0" ci="1" mb="0" cb="0"/><line nr="948" mi="0" ci="3" mb="0" cb="0"/><line nr="949" mi="0" ci="1" mb="0" cb="0"/><line nr="953" mi="0" ci="3" mb="0" cb="0"/><line nr="954" mi="0" ci="1" mb="0" cb="0"/><line nr="958" mi="0" ci="3" mb="0" cb="0"/><line nr="959" mi="0" ci="1" mb="0" cb="0"/><line nr="963" mi="0" ci="3" mb="0" cb="0"/><line nr="964" mi="0" ci="1" mb="0" cb="0"/><line nr="968" mi="0" ci="3" mb="0" cb="0"/><line nr="969" mi="0" ci="1" mb="0" cb="0"/><line nr="978" mi="0" ci="3" mb="0" cb="0"/><line nr="985" mi="0" ci="15" mb="0" cb="0"/><line nr="987" mi="0" ci="1" mb="0" cb="0"/><line nr="991" mi="0" ci="3" mb="0" cb="0"/><line nr="992" mi="0" ci="1" mb="0" cb="0"/><line nr="996" mi="0" ci="3" mb="0" cb="0"/><line nr="997" mi="0" ci="1" mb="0" cb="0"/><line nr="1001" mi="0" ci="3" mb="0" cb="0"/><line nr="1002" mi="0" ci="1" mb="0" cb="0"/><line nr="1006" mi="0" ci="3" mb="0" cb="0"/><line nr="1007" mi="0" ci="1" mb="0" cb="0"/><line nr="1011" mi="0" ci="3" mb="0" cb="0"/><line nr="1012" mi="0" ci="1" mb="0" cb="0"/><line nr="1016" mi="0" ci="3" mb="0" cb="0"/><line nr="1017" mi="0" ci="1" mb="0" cb="0"/><line nr="1021" mi="0" ci="3" mb="0" cb="0"/><line nr="1022" mi="0" ci="1" mb="0" cb="0"/><line nr="1026" mi="0" ci="3" mb="0" cb="0"/><line nr="1027" mi="0" ci="1" mb="0" cb="0"/><line nr="1031" mi="0" ci="3" mb="0" cb="0"/><line nr="1032" mi="0" ci="1" mb="0" cb="0"/><line nr="1036" mi="0" ci="3" mb="0" cb="0"/><line nr="1037" mi="0" ci="1" mb="0" cb="0"/><line nr="1041" mi="0" ci="3" mb="0" cb="0"/><line nr="1042" mi="0" ci="1" mb="0" cb="0"/><line nr="1046" mi="0" ci="3" mb="0" cb="0"/><line nr="1047" mi="0" ci="1" mb="0" cb="0"/><line nr="1051" mi="0" ci="3" mb="0" cb="0"/><line nr="1052" mi="0" ci="1" mb="0" cb="0"/><line nr="1061" mi="0" ci="3" mb="0" cb="0"/><line nr="1068" mi="0" ci="15" mb="0" cb="0"/><line nr="1069" mi="0" ci="1" mb="0" cb="0"/><line nr="1073" mi="0" ci="3" mb="0" cb="0"/><line nr="1074" mi="0" ci="1" mb="0" cb="0"/><line nr="1078" mi="0" ci="3" mb="0" cb="0"/><line nr="1079" mi="0" ci="1" mb="0" cb="0"/><line nr="1083" mi="0" ci="3" mb="0" cb="0"/><line nr="1084" mi="0" ci="1" mb="0" cb="0"/><line nr="1088" mi="0" ci="3" mb="0" cb="0"/><line nr="1089" mi="0" ci="1" mb="0" cb="0"/><line nr="1093" mi="0" ci="3" mb="0" cb="0"/><line nr="1094" mi="0" ci="1" mb="0" cb="0"/><line nr="1098" mi="0" ci="3" mb="0" cb="0"/><line nr="1099" mi="0" ci="1" mb="0" cb="0"/><line nr="1103" mi="0" ci="3" mb="0" cb="0"/><line nr="1104" mi="0" ci="1" mb="0" cb="0"/><line nr="1108" mi="0" ci="3" mb="0" cb="0"/><line nr="1109" mi="0" ci="1" mb="0" cb="0"/><line nr="1113" mi="0" ci="3" mb="0" cb="0"/><line nr="1114" mi="0" ci="1" mb="0" cb="0"/><line nr="1118" mi="0" ci="3" mb="0" cb="0"/><line nr="1119" mi="0" ci="1" mb="0" cb="0"/><line nr="1123" mi="0" ci="3" mb="0" cb="0"/><line nr="1124" mi="0" ci="1" mb="0" cb="0"/><line nr="1128" mi="0" ci="3" mb="0" cb="0"/><line nr="1129" mi="0" ci="1" mb="0" cb="0"/><line nr="1133" mi="0" ci="3" mb="0" cb="0"/><line nr="1134" mi="0" ci="1" mb="0" cb="0"/><line nr="1143" mi="0" ci="3" mb="0" cb="0"/><line nr="1150" mi="0" ci="15" mb="0" cb="0"/><line nr="1151" mi="0" ci="1" mb="0" cb="0"/><line nr="1155" mi="0" ci="3" mb="0" cb="0"/><line nr="1156" mi="0" ci="1" mb="0" cb="0"/><line nr="1160" mi="0" ci="3" mb="0" cb="0"/><line nr="1161" mi="0" ci="1" mb="0" cb="0"/><line nr="1165" mi="0" ci="3" mb="0" cb="0"/><line nr="1166" mi="0" ci="1" mb="0" cb="0"/><line nr="1170" mi="0" ci="3" mb="0" cb="0"/><line nr="1171" mi="0" ci="1" mb="0" cb="0"/><line nr="1175" mi="0" ci="3" mb="0" cb="0"/><line nr="1176" mi="0" ci="1" mb="0" cb="0"/><line nr="1180" mi="0" ci="3" mb="0" cb="0"/><line nr="1181" mi="0" ci="1" mb="0" cb="0"/><line nr="1185" mi="0" ci="3" mb="0" cb="0"/><line nr="1186" mi="0" ci="1" mb="0" cb="0"/><line nr="1190" mi="0" ci="3" mb="0" cb="0"/><line nr="1191" mi="0" ci="1" mb="0" cb="0"/><line nr="1195" mi="0" ci="3" mb="0" cb="0"/><line nr="1196" mi="0" ci="1" mb="0" cb="0"/><line nr="1200" mi="0" ci="3" mb="0" cb="0"/><line nr="1201" mi="0" ci="1" mb="0" cb="0"/><line nr="1205" mi="0" ci="3" mb="0" cb="0"/><line nr="1206" mi="0" ci="1" mb="0" cb="0"/><line nr="1210" mi="0" ci="3" mb="0" cb="0"/><line nr="1211" mi="0" ci="1" mb="0" cb="0"/><line nr="1215" mi="0" ci="3" mb="0" cb="0"/><line nr="1216" mi="0" ci="1" mb="0" cb="0"/><line nr="1219" mi="0" ci="1" mb="0" cb="0"/><line nr="1225" mi="0" ci="3" mb="0" cb="0"/><line nr="1232" mi="0" ci="2" mb="0" cb="0"/><line nr="1233" mi="0" ci="2" mb="0" cb="0"/><line nr="1234" mi="0" ci="2" mb="0" cb="0"/><line nr="1235" mi="0" ci="8" mb="0" cb="0"/><line nr="1236" mi="8" ci="1" mb="2" cb="0"/><line nr="1237" mi="0" ci="2" mb="0" cb="0"/><line nr="1238" mi="0" ci="4" mb="0" cb="0"/><line nr="1239" mi="0" ci="4" mb="0" cb="0"/><line nr="1240" mi="0" ci="3" mb="0" cb="0"/><line nr="1241" mi="8" ci="1" mb="2" cb="0"/><line nr="1242" mi="0" ci="2" mb="0" cb="0"/><line nr="1244" mi="0" ci="1" mb="0" cb="0"/><line nr="1248" mi="0" ci="3" mb="0" cb="0"/><line nr="1249" mi="0" ci="1" mb="0" cb="0"/><line nr="1253" mi="0" ci="3" mb="0" cb="0"/><line nr="1254" mi="0" ci="1" mb="0" cb="0"/><line nr="1258" mi="0" ci="3" mb="0" cb="0"/><line nr="1259" mi="0" ci="1" mb="0" cb="0"/><line nr="1263" mi="0" ci="3" mb="0" cb="0"/><line nr="1264" mi="0" ci="1" mb="0" cb="0"/><line nr="1268" mi="0" ci="3" mb="0" cb="0"/><line nr="1269" mi="0" ci="1" mb="0" cb="0"/><line nr="1273" mi="0" ci="3" mb="0" cb="0"/><line nr="1274" mi="0" ci="1" mb="0" cb="0"/><line nr="1278" mi="0" ci="3" mb="0" cb="0"/><line nr="1279" mi="0" ci="1" mb="0" cb="0"/><line nr="1283" mi="0" ci="3" mb="0" cb="0"/><line nr="1284" mi="0" ci="1" mb="0" cb="0"/><line nr="1288" mi="0" ci="3" mb="0" cb="0"/><line nr="1289" mi="0" ci="1" mb="0" cb="0"/><line nr="1293" mi="0" ci="3" mb="0" cb="0"/><line nr="1294" mi="0" ci="1" mb="0" cb="0"/><line nr="1298" mi="0" ci="3" mb="0" cb="0"/><line nr="1299" mi="0" ci="1" mb="0" cb="0"/><line nr="1303" mi="0" ci="3" mb="0" cb="0"/><line nr="1304" mi="0" ci="1" mb="0" cb="0"/><line nr="1308" mi="0" ci="3" mb="0" cb="0"/><line nr="1309" mi="0" ci="1" mb="0" cb="0"/><line nr="1312" mi="0" ci="1" mb="0" cb="0"/><line nr="1318" mi="0" ci="3" mb="0" cb="0"/><line nr="1325" mi="0" ci="2" mb="0" cb="0"/><line nr="1326" mi="0" ci="2" mb="0" cb="0"/><line nr="1327" mi="0" ci="2" mb="0" cb="0"/><line nr="1328" mi="0" ci="8" mb="0" cb="0"/><line nr="1329" mi="7" ci="1" mb="2" cb="0"/><line nr="1330" mi="0" ci="2" mb="0" cb="0"/><line nr="1331" mi="0" ci="4" mb="0" cb="0"/><line nr="1332" mi="0" ci="4" mb="0" cb="0"/><line nr="1333" mi="0" ci="3" mb="0" cb="0"/><line nr="1334" mi="7" ci="1" mb="2" cb="0"/><line nr="1335" mi="0" ci="2" mb="0" cb="0"/><line nr="1337" mi="0" ci="1" mb="0" cb="0"/><line nr="1341" mi="0" ci="3" mb="0" cb="0"/><line nr="1342" mi="0" ci="1" mb="0" cb="0"/><line nr="1346" mi="0" ci="3" mb="0" cb="0"/><line nr="1347" mi="0" ci="1" mb="0" cb="0"/><line nr="1351" mi="0" ci="3" mb="0" cb="0"/><line nr="1352" mi="0" ci="1" mb="0" cb="0"/><line nr="1356" mi="0" ci="3" mb="0" cb="0"/><line nr="1357" mi="0" ci="1" mb="0" cb="0"/><line nr="1361" mi="0" ci="3" mb="0" cb="0"/><line nr="1362" mi="0" ci="1" mb="0" cb="0"/><line nr="1366" mi="0" ci="3" mb="0" cb="0"/><line nr="1367" mi="0" ci="1" mb="0" cb="0"/><line nr="1371" mi="0" ci="3" mb="0" cb="0"/><line nr="1372" mi="0" ci="1" mb="0" cb="0"/><line nr="1376" mi="0" ci="3" mb="0" cb="0"/><line nr="1377" mi="0" ci="1" mb="0" cb="0"/><line nr="1381" mi="0" ci="3" mb="0" cb="0"/><line nr="1382" mi="0" ci="1" mb="0" cb="0"/><line nr="1386" mi="0" ci="3" mb="0" cb="0"/><line nr="1387" mi="0" ci="1" mb="0" cb="0"/><line nr="1391" mi="0" ci="3" mb="0" cb="0"/><line nr="1392" mi="0" ci="1" mb="0" cb="0"/><line nr="1396" mi="0" ci="3" mb="0" cb="0"/><line nr="1397" mi="0" ci="1" mb="0" cb="0"/><line nr="1401" mi="0" ci="3" mb="0" cb="0"/><line nr="1402" mi="0" ci="1" mb="0" cb="0"/><line nr="1405" mi="0" ci="1" mb="0" cb="0"/><line nr="1411" mi="0" ci="3" mb="0" cb="0"/><line nr="1418" mi="0" ci="2" mb="0" cb="0"/><line nr="1419" mi="0" ci="2" mb="0" cb="0"/><line nr="1420" mi="0" ci="2" mb="0" cb="0"/><line nr="1421" mi="0" ci="8" mb="0" cb="0"/><line nr="1422" mi="8" ci="1" mb="2" cb="0"/><line nr="1423" mi="0" ci="2" mb="0" cb="0"/><line nr="1424" mi="0" ci="4" mb="0" cb="0"/><line nr="1425" mi="0" ci="4" mb="0" cb="0"/><line nr="1426" mi="0" ci="6" mb="0" cb="0"/><line nr="1427" mi="8" ci="1" mb="2" cb="0"/><line nr="1428" mi="0" ci="2" mb="0" cb="0"/><line nr="1430" mi="0" ci="1" mb="0" cb="0"/><line nr="1434" mi="0" ci="3" mb="0" cb="0"/><line nr="1435" mi="0" ci="1" mb="0" cb="0"/><line nr="1439" mi="0" ci="3" mb="0" cb="0"/><line nr="1440" mi="0" ci="1" mb="0" cb="0"/><line nr="1444" mi="0" ci="3" mb="0" cb="0"/><line nr="1445" mi="0" ci="1" mb="0" cb="0"/><line nr="1449" mi="0" ci="3" mb="0" cb="0"/><line nr="1450" mi="0" ci="1" mb="0" cb="0"/><line nr="1454" mi="0" ci="3" mb="0" cb="0"/><line nr="1455" mi="0" ci="1" mb="0" cb="0"/><line nr="1459" mi="0" ci="3" mb="0" cb="0"/><line nr="1460" mi="0" ci="1" mb="0" cb="0"/><line nr="1464" mi="0" ci="3" mb="0" cb="0"/><line nr="1465" mi="0" ci="1" mb="0" cb="0"/><line nr="1469" mi="0" ci="3" mb="0" cb="0"/><line nr="1470" mi="0" ci="1" mb="0" cb="0"/><line nr="1474" mi="0" ci="3" mb="0" cb="0"/><line nr="1475" mi="0" ci="1" mb="0" cb="0"/><line nr="1479" mi="0" ci="3" mb="0" cb="0"/><line nr="1480" mi="0" ci="1" mb="0" cb="0"/><line nr="1484" mi="0" ci="3" mb="0" cb="0"/><line nr="1485" mi="0" ci="1" mb="0" cb="0"/><line nr="1489" mi="0" ci="3" mb="0" cb="0"/><line nr="1490" mi="0" ci="1" mb="0" cb="0"/><line nr="1494" mi="0" ci="3" mb="0" cb="0"/><line nr="1495" mi="0" ci="1" mb="0" cb="0"/><line nr="1500" mi="0" ci="4" mb="0" cb="0"/><line nr="1508" mi="0" ci="2" mb="0" cb="0"/><line nr="1509" mi="0" ci="6" mb="0" cb="0"/><line nr="1510" mi="0" ci="3" mb="0" cb="0"/><line nr="1511" mi="0" ci="7" mb="0" cb="0"/><line nr="1512" mi="0" ci="7" mb="0" cb="0"/><line nr="1514" mi="0" ci="6" mb="0" cb="0"/><line nr="1515" mi="0" ci="3" mb="0" cb="0"/><line nr="1516" mi="0" ci="6" mb="0" cb="0"/><line nr="1517" mi="0" ci="8" mb="0" cb="2"/><line nr="1518" mi="0" ci="6" mb="0" cb="2"/><line nr="1519" mi="0" ci="12" mb="0" cb="0"/><line nr="1520" mi="0" ci="5" mb="1" cb="3"/><line nr="1521" mi="0" ci="1" mb="0" cb="0"/><line nr="1522" mi="0" ci="2" mb="0" cb="2"/><line nr="1523" mi="0" ci="4" mb="0" cb="0"/><line nr="1524" mi="0" ci="5" mb="0" cb="4"/><line nr="1525" mi="0" ci="2" mb="0" cb="0"/><line nr="1526" mi="0" ci="2" mb="0" cb="0"/><line nr="1527" mi="0" ci="2" mb="0" cb="0"/><line nr="1529" mi="0" ci="4" mb="0" cb="0"/><line nr="1530" mi="0" ci="4" mb="0" cb="2"/><line nr="1531" mi="0" ci="1" mb="0" cb="0"/><line nr="1533" mi="0" ci="6" mb="0" cb="0"/><line nr="1534" mi="0" ci="1" mb="0" cb="0"/><line nr="1535" mi="0" ci="1" mb="0" cb="0"/><line nr="1536" mi="0" ci="7" mb="0" cb="0"/><line nr="1537" mi="0" ci="1" mb="0" cb="0"/><line nr="1541" mi="0" ci="9" mb="0" cb="0"/><line nr="1542" mi="8" ci="1" mb="2" cb="0"/><line nr="1543" mi="0" ci="4" mb="0" cb="0"/><line nr="1544" mi="8" ci="1" mb="2" cb="0"/><line nr="1545" mi="0" ci="4" mb="0" cb="0"/><line nr="1546" mi="0" ci="4" mb="0" cb="0"/><line nr="1547" mi="0" ci="2" mb="0" cb="0"/><line nr="1549" mi="0" ci="1" mb="0" cb="0"/><line nr="1552" mi="0" ci="4" mb="0" cb="0"/><line nr="1553" mi="0" ci="4" mb="0" cb="0"/><line nr="1554" mi="0" ci="7" mb="1" cb="1"/><line nr="1555" mi="5" ci="0" mb="0" cb="0"/><line nr="1556" mi="0" ci="7" mb="1" cb="1"/><line nr="1557" mi="12" ci="0" mb="0" cb="0"/><line nr="1558" mi="5" ci="0" mb="4" cb="0"/><line nr="1559" mi="1" ci="0" mb="0" cb="0"/><line nr="1560" mi="8" ci="0" mb="4" cb="0"/><line nr="1561" mi="1" ci="0" mb="0" cb="0"/><line nr="1562" mi="6" ci="0" mb="0" cb="0"/><line nr="1563" mi="1" ci="0" mb="0" cb="0"/><line nr="1564" mi="0" ci="1" mb="0" cb="0"/><line nr="1566" mi="0" ci="4" mb="0" cb="0"/><line nr="1575" mi="0" ci="7" mb="0" cb="0"/><line nr="1577" mi="8" ci="1" mb="2" cb="0"/><line nr="1578" mi="0" ci="14" mb="0" cb="0"/><line nr="1579" mi="0" ci="5" mb="0" cb="0"/><line nr="1580" mi="0" ci="1" mb="0" cb="0"/><line nr="1583" mi="0" ci="7" mb="0" cb="2"/><line nr="1584" mi="0" ci="4" mb="0" cb="0"/><line nr="1585" mi="0" ci="4" mb="0" cb="0"/><line nr="1586" mi="0" ci="3" mb="0" cb="0"/><line nr="1587" mi="0" ci="4" mb="0" cb="0"/><line nr="1589" mi="0" ci="1" mb="0" cb="0"/><line nr="1597" mi="0" ci="3" mb="0" cb="0"/><line nr="1604" mi="0" ci="15" mb="0" cb="0"/><line nr="1605" mi="0" ci="1" mb="0" cb="0"/><line nr="1610" mi="0" ci="2" mb="0" cb="0"/><line nr="1611" mi="0" ci="1" mb="0" cb="0"/><line nr="1616" mi="0" ci="3" mb="0" cb="0"/><line nr="1617" mi="0" ci="1" mb="0" cb="0"/><line nr="1626" mi="0" ci="3" mb="0" cb="0"/><line nr="1633" mi="0" ci="15" mb="0" cb="0"/><line nr="1635" mi="0" ci="1" mb="0" cb="0"/><line nr="1640" mi="0" ci="2" mb="0" cb="0"/><line nr="1641" mi="0" ci="1" mb="0" cb="0"/><line nr="1646" mi="0" ci="3" mb="0" cb="0"/><line nr="1647" mi="0" ci="1" mb="0" cb="0"/><line nr="1656" mi="0" ci="3" mb="0" cb="0"/><line nr="1663" mi="0" ci="15" mb="0" cb="0"/><line nr="1665" mi="0" ci="1" mb="0" cb="0"/><line nr="1670" mi="0" ci="2" mb="0" cb="0"/><line nr="1671" mi="0" ci="1" mb="0" cb="0"/><line nr="1676" mi="0" ci="3" mb="0" cb="0"/><line nr="1677" mi="0" ci="1" mb="0" cb="0"/><line nr="1686" mi="0" ci="3" mb="0" cb="0"/><line nr="1693" mi="0" ci="15" mb="0" cb="0"/><line nr="1695" mi="0" ci="1" mb="0" cb="0"/><line nr="1700" mi="0" ci="2" mb="0" cb="0"/><line nr="1701" mi="0" ci="1" mb="0" cb="0"/><line nr="1706" mi="0" ci="3" mb="0" cb="0"/><line nr="1707" mi="0" ci="1" mb="0" cb="0"/><line nr="1716" mi="0" ci="3" mb="0" cb="0"/><line nr="1723" mi="0" ci="15" mb="0" cb="0"/><line nr="1725" mi="0" ci="1" mb="0" cb="0"/><line nr="1730" mi="0" ci="2" mb="0" cb="0"/><line nr="1731" mi="0" ci="1" mb="0" cb="0"/><line nr="1736" mi="0" ci="3" mb="0" cb="0"/><line nr="1737" mi="0" ci="1" mb="0" cb="0"/><line nr="1746" mi="0" ci="3" mb="0" cb="0"/><line nr="1753" mi="0" ci="15" mb="0" cb="0"/><line nr="1755" mi="0" ci="1" mb="0" cb="0"/><line nr="1760" mi="0" ci="2" mb="0" cb="0"/><line nr="1761" mi="0" ci="1" mb="0" cb="0"/><line nr="1766" mi="0" ci="3" mb="0" cb="0"/><line nr="1767" mi="0" ci="1" mb="0" cb="0"/><line nr="1776" mi="0" ci="3" mb="0" cb="0"/><line nr="1783" mi="0" ci="15" mb="0" cb="0"/><line nr="1785" mi="0" ci="1" mb="0" cb="0"/><line nr="1790" mi="0" ci="2" mb="0" cb="0"/><line nr="1791" mi="0" ci="1" mb="0" cb="0"/><line nr="1796" mi="0" ci="3" mb="0" cb="0"/><line nr="1797" mi="0" ci="1" mb="0" cb="0"/><line nr="1806" mi="0" ci="3" mb="0" cb="0"/><line nr="1813" mi="0" ci="15" mb="0" cb="0"/><line nr="1815" mi="0" ci="1" mb="0" cb="0"/><line nr="1820" mi="0" ci="2" mb="0" cb="0"/><line nr="1821" mi="0" ci="1" mb="0" cb="0"/><line nr="1826" mi="0" ci="3" mb="0" cb="0"/><line nr="1827" mi="0" ci="1" mb="0" cb="0"/><line nr="1836" mi="0" ci="3" mb="0" cb="0"/><line nr="1843" mi="0" ci="15" mb="0" cb="0"/><line nr="1845" mi="0" ci="1" mb="0" cb="0"/><line nr="1850" mi="0" ci="2" mb="0" cb="0"/><line nr="1851" mi="0" ci="1" mb="0" cb="0"/><line nr="1856" mi="0" ci="3" mb="0" cb="0"/><line nr="1857" mi="0" ci="1" mb="0" cb="0"/><line nr="1866" mi="0" ci="3" mb="0" cb="0"/><line nr="1873" mi="0" ci="15" mb="0" cb="0"/><line nr="1875" mi="0" ci="1" mb="0" cb="0"/><line nr="1880" mi="0" ci="2" mb="0" cb="0"/><line nr="1881" mi="0" ci="1" mb="0" cb="0"/><line nr="1886" mi="0" ci="3" mb="0" cb="0"/><line nr="1887" mi="0" ci="1" mb="0" cb="0"/><line nr="1896" mi="0" ci="3" mb="0" cb="0"/><line nr="1903" mi="0" ci="15" mb="0" cb="0"/><line nr="1904" mi="0" ci="1" mb="0" cb="0"/><line nr="1909" mi="0" ci="2" mb="0" cb="0"/><line nr="1910" mi="0" ci="1" mb="0" cb="0"/><line nr="1915" mi="0" ci="3" mb="0" cb="0"/><line nr="1916" mi="0" ci="1" mb="0" cb="0"/><line nr="1925" mi="0" ci="3" mb="0" cb="0"/><line nr="1932" mi="0" ci="15" mb="0" cb="0"/><line nr="1934" mi="0" ci="1" mb="0" cb="0"/><line nr="1939" mi="0" ci="2" mb="0" cb="0"/><line nr="1940" mi="0" ci="1" mb="0" cb="0"/><line nr="1945" mi="0" ci="3" mb="0" cb="0"/><line nr="1946" mi="0" ci="1" mb="0" cb="0"/><line nr="1951" mi="0" ci="4" mb="0" cb="0"/><line nr="1960" mi="0" ci="7" mb="0" cb="0"/><line nr="1962" mi="8" ci="1" mb="2" cb="0"/><line nr="1963" mi="0" ci="14" mb="0" cb="0"/><line nr="1964" mi="0" ci="5" mb="0" cb="0"/><line nr="1965" mi="0" ci="1" mb="0" cb="0"/><line nr="1968" mi="0" ci="7" mb="0" cb="2"/><line nr="1969" mi="0" ci="4" mb="0" cb="0"/><line nr="1970" mi="0" ci="4" mb="0" cb="0"/><line nr="1971" mi="0" ci="3" mb="0" cb="0"/><line nr="1972" mi="0" ci="4" mb="0" cb="0"/><line nr="1974" mi="0" ci="1" mb="0" cb="0"/><line nr="1982" mi="0" ci="3" mb="0" cb="0"/><line nr="1989" mi="0" ci="15" mb="0" cb="0"/><line nr="1990" mi="0" ci="1" mb="0" cb="0"/><line nr="1995" mi="0" ci="2" mb="0" cb="0"/><line nr="1996" mi="0" ci="1" mb="0" cb="0"/><line nr="2001" mi="0" ci="3" mb="0" cb="0"/><line nr="2002" mi="0" ci="1" mb="0" cb="0"/><line nr="2011" mi="0" ci="3" mb="0" cb="0"/><line nr="2018" mi="0" ci="15" mb="0" cb="0"/><line nr="2020" mi="0" ci="1" mb="0" cb="0"/><line nr="2025" mi="0" ci="2" mb="0" cb="0"/><line nr="2027" mi="0" ci="1" mb="0" cb="0"/><line nr="2032" mi="0" ci="3" mb="0" cb="0"/><line nr="2033" mi="0" ci="1" mb="0" cb="0"/><line nr="2042" mi="0" ci="3" mb="0" cb="0"/><line nr="2049" mi="0" ci="15" mb="0" cb="0"/><line nr="2051" mi="0" ci="1" mb="0" cb="0"/><line nr="2056" mi="0" ci="2" mb="0" cb="0"/><line nr="2058" mi="0" ci="1" mb="0" cb="0"/><line nr="2063" mi="0" ci="3" mb="0" cb="0"/><line nr="2064" mi="0" ci="1" mb="0" cb="0"/><line nr="2073" mi="0" ci="3" mb="0" cb="0"/><line nr="2080" mi="0" ci="15" mb="0" cb="0"/><line nr="2082" mi="0" ci="1" mb="0" cb="0"/><line nr="2087" mi="0" ci="2" mb="0" cb="0"/><line nr="2089" mi="0" ci="1" mb="0" cb="0"/><line nr="2094" mi="0" ci="3" mb="0" cb="0"/><line nr="2095" mi="0" ci="1" mb="0" cb="0"/><line nr="2104" mi="0" ci="3" mb="0" cb="0"/><line nr="2111" mi="0" ci="15" mb="0" cb="0"/><line nr="2113" mi="0" ci="1" mb="0" cb="0"/><line nr="2118" mi="0" ci="2" mb="0" cb="0"/><line nr="2120" mi="0" ci="1" mb="0" cb="0"/><line nr="2125" mi="0" ci="3" mb="0" cb="0"/><line nr="2126" mi="0" ci="1" mb="0" cb="0"/><line nr="2135" mi="0" ci="3" mb="0" cb="0"/><line nr="2142" mi="0" ci="15" mb="0" cb="0"/><line nr="2144" mi="0" ci="1" mb="0" cb="0"/><line nr="2149" mi="0" ci="2" mb="0" cb="0"/><line nr="2151" mi="0" ci="1" mb="0" cb="0"/><line nr="2156" mi="0" ci="3" mb="0" cb="0"/><line nr="2157" mi="0" ci="1" mb="0" cb="0"/><line nr="2166" mi="0" ci="3" mb="0" cb="0"/><line nr="2173" mi="0" ci="15" mb="0" cb="0"/><line nr="2175" mi="0" ci="1" mb="0" cb="0"/><line nr="2180" mi="0" ci="2" mb="0" cb="0"/><line nr="2182" mi="0" ci="1" mb="0" cb="0"/><line nr="2187" mi="0" ci="3" mb="0" cb="0"/><line nr="2188" mi="0" ci="1" mb="0" cb="0"/><line nr="2197" mi="0" ci="3" mb="0" cb="0"/><line nr="2204" mi="0" ci="15" mb="0" cb="0"/><line nr="2206" mi="0" ci="1" mb="0" cb="0"/><line nr="2211" mi="0" ci="2" mb="0" cb="0"/><line nr="2213" mi="0" ci="1" mb="0" cb="0"/><line nr="2218" mi="0" ci="3" mb="0" cb="0"/><line nr="2219" mi="0" ci="1" mb="0" cb="0"/><line nr="2228" mi="0" ci="3" mb="0" cb="0"/><line nr="2235" mi="0" ci="15" mb="0" cb="0"/><line nr="2237" mi="0" ci="1" mb="0" cb="0"/><line nr="2242" mi="0" ci="2" mb="0" cb="0"/><line nr="2244" mi="0" ci="1" mb="0" cb="0"/><line nr="2249" mi="0" ci="3" mb="0" cb="0"/><line nr="2250" mi="0" ci="1" mb="0" cb="0"/><line nr="2259" mi="0" ci="3" mb="0" cb="0"/><line nr="2266" mi="0" ci="15" mb="0" cb="0"/><line nr="2268" mi="0" ci="1" mb="0" cb="0"/><line nr="2273" mi="0" ci="2" mb="0" cb="0"/><line nr="2275" mi="0" ci="1" mb="0" cb="0"/><line nr="2280" mi="0" ci="3" mb="0" cb="0"/><line nr="2281" mi="0" ci="1" mb="0" cb="0"/><line nr="2290" mi="0" ci="3" mb="0" cb="0"/><line nr="2297" mi="0" ci="15" mb="0" cb="0"/><line nr="2298" mi="0" ci="1" mb="0" cb="0"/><line nr="2303" mi="0" ci="2" mb="0" cb="0"/><line nr="2305" mi="0" ci="1" mb="0" cb="0"/><line nr="2310" mi="0" ci="3" mb="0" cb="0"/><line nr="2311" mi="0" ci="1" mb="0" cb="0"/><line nr="2320" mi="0" ci="3" mb="0" cb="0"/><line nr="2327" mi="0" ci="15" mb="0" cb="0"/><line nr="2329" mi="0" ci="1" mb="0" cb="0"/><line nr="2334" mi="0" ci="2" mb="0" cb="0"/><line nr="2336" mi="0" ci="1" mb="0" cb="0"/><line nr="2341" mi="0" ci="3" mb="0" cb="0"/><line nr="2342" mi="0" ci="1" mb="0" cb="0"/><line nr="2349" mi="0" ci="10" mb="0" cb="0"/><line nr="2350" mi="0" ci="6" mb="0" cb="0"/><line nr="2354" mi="2" ci="0" mb="0" cb="0"/><line nr="2359" mi="0" ci="4" mb="0" cb="0"/><line nr="2360" mi="0" ci="4" mb="1" cb="1"/><line nr="2361" mi="5" ci="0" mb="0" cb="0"/><line nr="2362" mi="0" ci="2" mb="0" cb="0"/><line nr="2368" mi="0" ci="10" mb="0" cb="0"/><line nr="2369" mi="0" ci="6" mb="0" cb="0"/><line nr="2373" mi="2" ci="0" mb="0" cb="0"/><line nr="2378" mi="0" ci="4" mb="0" cb="0"/><line nr="2379" mi="0" ci="4" mb="1" cb="1"/><line nr="2380" mi="5" ci="0" mb="0" cb="0"/><line nr="2381" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="150" covered="2552"/><counter type="BRANCH" missed="37" covered="61"/><counter type="LINE" missed="13" covered="829"/><counter type="COMPLEXITY" missed="24" covered="393"/><counter type="METHOD" missed="3" covered="365"/><counter type="CLASS" missed="0" covered="46"/></sourcefile><sourcefile name="IntGraphIdBuilderBench.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="2"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="14" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="13" mb="0" cb="0"/><line nr="82" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="1" cb="3"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="10" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="1" cb="3"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="10" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="7" mb="1" cb="3"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="10" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="1" cb="3"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="342"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="1" covered="88"/><counter type="COMPLEXITY" missed="5" covered="43"/><counter type="METHOD" missed="1" covered="35"/><counter type="CLASS" missed="1" covered="9"/></sourcefile><sourcefile name="MaximumFlowBench.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="16" mb="0" cb="0"/><line nr="62" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="5" ci="4" mb="1" cb="1"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="13" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="2"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="5" ci="4" mb="1" cb="1"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="13" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="7" mb="0" cb="2"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="5" ci="4" mb="1" cb="1"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="13" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="12" ci="0" mb="2" cb="0"/><line nr="324" mi="9" ci="0" mb="0" cb="0"/><line nr="325" mi="2" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="8" mb="1" cb="3"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="1" cb="1"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="1" cb="1"/><line nr="344" mi="5" ci="0" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="1" cb="1"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="348" mi="0" ci="12" mb="0" cb="0"/><line nr="349" mi="0" ci="12" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="2"/><line nr="355" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="2"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="2"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="554"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="8" covered="130"/><counter type="COMPLEXITY" missed="9" covered="43"/><counter type="METHOD" missed="1" covered="36"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="SSSPNegativeWeightsBench.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="2"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="333"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="74"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="MinimumMeanCycleBench.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="16" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="822" covered="9374"/><counter type="BRANCH" missed="191" covered="312"/><counter type="LINE" missed="117" covered="2321"/><counter type="COMPLEXITY" missed="129" covered="866"/><counter type="METHOD" missed="15" covered="728"/><counter type="CLASS" missed="1" covered="124"/></package><package name="com/jgalgo/bench/util"><class name="com/jgalgo/bench/util/GraphsTestUtils" sourcefilename="GraphsTestUtils.java"><method name="randGraph" desc="(IIZJ)Lcom/jgalgo/graph/IntGraph;" line="40"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randGraph" desc="(IIZZZJ)Lcom/jgalgo/graph/IntGraph;" line="45"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randBipartiteGraph" desc="(IIIZJ)Lcom/jgalgo/graph/IntGraph;" line="56"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randBipartiteGraph" desc="(IIIZZJ)Lcom/jgalgo/graph/IntGraph;" line="61"><counter type="INSTRUCTION" missed="3" covered="32"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randTree" desc="(IJ)Lcom/jgalgo/graph/IntGraph;" line="75"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultGraphImpl" desc="()Lit/unimi/dsi/fastutil/booleans/Boolean2ObjectFunction;" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assignRandWeights" desc="(Lcom/jgalgo/graph/IntGraph;J)Lcom/jgalgo/graph/IWeightsDouble;" line="87"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assignRandWeights" desc="(Lcom/jgalgo/graph/IntGraph;DDJ)Lcom/jgalgo/graph/IWeightsDouble;" line="91"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assignRandWeightsIntPos" desc="(Lcom/jgalgo/graph/IntGraph;J)Lcom/jgalgo/graph/IWeightsInt;" line="102"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignRandWeightsIntNeg" desc="(Lcom/jgalgo/graph/IntGraph;J)Lcom/jgalgo/graph/IWeightsInt;" line="109"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignRandWeightsInt" desc="(Lcom/jgalgo/graph/IntGraph;IIJ)Lcom/jgalgo/graph/IWeightsInt;" line="115"><counter type="INSTRUCTION" missed="4" covered="38"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomGraphGnp" desc="(IZJ)Lcom/jgalgo/graph/IntGraph;" line="126"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomGraphBarabasiAlbert" desc="(IZJ)Lcom/jgalgo/graph/IntGraph;" line="135"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomGraphRecursiveMatrix" desc="(IIZJ)Lcom/jgalgo/graph/IntGraph;" line="144"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$defaultGraphImpl$0" desc="(Z)Lcom/jgalgo/graph/IntGraph;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="244"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="11" covered="54"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/util/TestUtils$1" sourcefilename="TestUtils.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/bench/util/TestUtils$SeedGenerator" sourcefilename="TestUtils.java"><method name="&lt;init&gt;" desc="(J)V" line="69"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSeed" desc="()J" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/util/TestUtils" sourcefilename="TestUtils.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randArray" desc="(IJ)[I" line="26"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randArray" desc="(IIIJ)[I" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randArray" desc="([IIIJ)[I" line="34"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randPermutation" desc="(IJ)[I" line="41"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterable" desc="(Ljava/util/Iterator;)Ljava/lang/Iterable;" line="49"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextDouble" desc="(Ljava/util/Random;DD)D" line="59"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextInt" desc="(Ljava/util/Random;II)I" line="63"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="7"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/util/BenchUtils" sourcefilename="BenchUtils.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parseArgsStr" desc="(Ljava/lang/String;)Ljava/util/Map;" line="25"><counter type="INSTRUCTION" missed="6" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/bench/util/RandomIntUnique" sourcefilename="RandomIntUnique.java"><method name="&lt;init&gt;" desc="(IIJ)V" line="30"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()I" line="41"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TestUtils.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="2" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="11" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="9" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="62"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="RandomIntUnique.java"><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="2" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="14" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="2" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BenchUtils.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="16" mb="0" cb="2"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="1" cb="1"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="52"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphsTestUtils.java"><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="1" cb="1"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="2" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="12" ci="0" mb="2" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="2" ci="9" mb="1" cb="1"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="2" ci="9" mb="1" cb="1"/><line nr="111" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="2"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="244"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="11" covered="54"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="193" covered="358"/><counter type="BRANCH" missed="17" covered="11"/><counter type="LINE" missed="36" covered="74"/><counter type="COMPLEXITY" missed="24" covered="21"/><counter type="METHOD" missed="13" covered="18"/><counter type="CLASS" missed="2" covered="4"/></package><counter type="INSTRUCTION" missed="1015" covered="9732"/><counter type="BRANCH" missed="208" covered="323"/><counter type="LINE" missed="153" covered="2395"/><counter type="COMPLEXITY" missed="153" covered="887"/><counter type="METHOD" missed="28" covered="746"/><counter type="CLASS" missed="3" covered="128"/></report>