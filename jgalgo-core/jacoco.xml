<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JGAlgo - Core"><sessioninfo id="fv-az1196-717-aba9fa12" start="1699269845629" dump="1699270107486"/><package name="com/jgalgo/gen"><class name="com/jgalgo/gen/CompleteGraphGenerator" sourcefilename="CompleteGraphGenerator.java"><method name="&lt;init&gt;" desc="(Z)V" line="50"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="()Lcom/jgalgo/gen/CompleteGraphGenerator;" line="65"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newIntInstance" desc="()Lcom/jgalgo/gen/CompleteGraphGenerator;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVertices" desc="(Ljava/util/Collection;)V" line="87"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVertices" desc="(ILjava/util/function/Supplier;)V" line="107"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEdges" desc="(Ljava/util/function/Supplier;)V" line="132"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEdges" desc="(Ljava/util/function/BiFunction;)V" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDirected" desc="(Z)V" line="159"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSelfEdges" desc="(Z)V" line="172"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generateIntoBuilder" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="178"><counter type="INSTRUCTION" missed="257" covered="0"/><counter type="BRANCH" missed="38" covered="0"/><counter type="LINE" missed="49" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$setEdges$0" desc="(Ljava/util/function/Supplier;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="133"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="370" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="82" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/gen/GraphGenerator" sourcefilename="GraphGenerator.java"><method name="generate" desc="()Lcom/jgalgo/graph/Graph;" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateMutable" desc="()Lcom/jgalgo/graph/Graph;" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/gen/BarabasiAlbertGraphGenerator" sourcefilename="BarabasiAlbertGraphGenerator.java"><method name="&lt;init&gt;" desc="(Z)V" line="62"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/gen/BarabasiAlbertGraphGenerator;" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newIntInstance" desc="()Lcom/jgalgo/gen/BarabasiAlbertGraphGenerator;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVertices" desc="(Ljava/util/Collection;)V" line="102"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVertices" desc="(ILjava/util/function/Supplier;)V" line="122"><counter type="INSTRUCTION" missed="24" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdges" desc="(Ljava/util/function/Supplier;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdges" desc="(Ljava/util/function/BiFunction;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setInitialCliqueSize" desc="(I)V" line="181"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdgesToAddPerStep" desc="(I)V" line="202"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDirected" desc="(Z)V" line="216"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSeed" desc="(J)V" line="228"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateIntoBuilder" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="234"><counter type="INSTRUCTION" missed="107" covered="262"/><counter type="BRANCH" missed="11" covered="29"/><counter type="LINE" missed="18" covered="44"/><counter type="COMPLEXITY" missed="8" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setEdges$0" desc="(Ljava/util/function/Supplier;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="144" covered="373"/><counter type="BRANCH" missed="15" covered="37"/><counter type="LINE" missed="27" covered="78"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/gen/EmptyGraphGenerator" sourcefilename="EmptyGraphGenerator.java"><method name="&lt;init&gt;" desc="(Z)V" line="40"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/gen/EmptyGraphGenerator;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newIntInstance" desc="()Lcom/jgalgo/gen/EmptyGraphGenerator;" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVertices" desc="(Ljava/util/Collection;)V" line="76"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDirected" desc="(Z)V" line="93"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateIntoBuilder" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="99"><counter type="INSTRUCTION" missed="24" covered="44"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="77"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="5" covered="21"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/gen/RecursiveMatrixGraphGenerator" sourcefilename="RecursiveMatrixGraphGenerator.java"><method name="&lt;init&gt;" desc="(Z)V" line="66"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/gen/RecursiveMatrixGraphGenerator;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newIntInstance" desc="()Lcom/jgalgo/gen/RecursiveMatrixGraphGenerator;" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setVertices" desc="(Ljava/util/Collection;)V" line="107"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVertices" desc="(ILjava/util/function/Supplier;)V" line="127"><counter type="INSTRUCTION" missed="24" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdges" desc="(ILjava/util/function/Supplier;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdges" desc="(ILjava/util/function/BiFunction;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDirected" desc="(Z)V" line="184"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdgeProbabilities" desc="(DDDD)V" line="208"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSeed" desc="(J)V" line="226"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateIntoBuilder" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="232"><counter type="INSTRUCTION" missed="217" covered="316"/><counter type="BRANCH" missed="39" covered="45"/><counter type="LINE" missed="33" covered="65"/><counter type="COMPLEXITY" missed="24" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextPowerOf2" desc="(I)I" line="366"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setEdges$0" desc="(Ljava/util/function/Supplier;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="154"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="256" covered="475"/><counter type="BRANCH" missed="47" covered="59"/><counter type="LINE" missed="42" covered="104"/><counter type="COMPLEXITY" missed="32" covered="35"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/gen/GnpGraphGenerator" sourcefilename="GnpGraphGenerator.java"><method name="&lt;init&gt;" desc="(Z)V" line="61"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/gen/GnpGraphGenerator;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newIntInstance" desc="()Lcom/jgalgo/gen/GnpGraphGenerator;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVertices" desc="(Ljava/util/Collection;)V" line="100"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVertices" desc="(ILjava/util/function/Supplier;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdges" desc="(Ljava/util/function/Supplier;)V" line="145"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdges" desc="(Ljava/util/function/BiFunction;)V" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDirected" desc="(Z)V" line="172"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSelfEdges" desc="(Z)V" line="184"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdgeProbability" desc="(D)V" line="201"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSeed" desc="(J)V" line="215"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateIntoBuilder" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="221"><counter type="INSTRUCTION" missed="54" covered="229"/><counter type="BRANCH" missed="13" covered="37"/><counter type="LINE" missed="7" covered="41"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$setEdges$0" desc="(Ljava/util/function/Supplier;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="68" covered="360"/><counter type="BRANCH" missed="14" covered="48"/><counter type="LINE" missed="11" covered="78"/><counter type="COMPLEXITY" missed="12" covered="32"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BarabasiAlbertGraphGenerator.java"><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="1" cb="1"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="1" cb="1"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="2" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="2"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="2"/><line nr="203" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="1" cb="1"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="1" cb="1"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="6" mb="1" cb="1"/><line nr="239" mi="6" ci="0" mb="0" cb="0"/><line nr="240" mi="4" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="1" cb="1"/><line nr="242" mi="9" ci="0" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="15" mb="0" cb="2"/><line nr="246" mi="0" ci="10" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="8" mb="0" cb="2"/><line nr="252" mi="0" ci="3" mb="0" cb="2"/><line nr="253" mi="0" ci="7" mb="0" cb="2"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="8" mb="0" cb="0"/><line nr="256" mi="0" ci="8" mb="0" cb="0"/><line nr="259" mi="0" ci="10" mb="0" cb="2"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="8" mb="0" cb="0"/><line nr="262" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="8" mb="0" cb="2"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="8" mb="0" cb="2"/><line nr="272" mi="0" ci="9" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="7" mb="0" cb="4"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="8" mb="0" cb="0"/><line nr="283" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="1" cb="1"/><line nr="288" mi="7" ci="0" mb="2" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="5" ci="0" mb="0" cb="0"/><line nr="292" mi="16" ci="0" mb="2" cb="0"/><line nr="293" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="7" ci="0" mb="2" cb="0"/><line nr="297" mi="10" ci="0" mb="0" cb="0"/><line nr="298" mi="10" ci="0" mb="0" cb="0"/><line nr="299" mi="8" ci="0" mb="0" cb="0"/><line nr="301" mi="2" ci="0" mb="0" cb="0"/><line nr="304" mi="0" ci="7" mb="0" cb="2"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="16" mb="0" cb="2"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="7" mb="0" cb="2"/><line nr="311" mi="0" ci="10" mb="0" cb="0"/><line nr="312" mi="0" ci="10" mb="0" cb="0"/><line nr="313" mi="0" ci="9" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="144" covered="373"/><counter type="BRANCH" missed="15" covered="37"/><counter type="LINE" missed="27" covered="78"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RecursiveMatrixGraphGenerator.java"><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="1" cb="1"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="1" cb="1"/><line nr="128" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="7" ci="0" mb="2" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="2"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="29" mb="3" cb="7"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="1" cb="1"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="1" cb="1"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="1" mb="2" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="14" mb="1" cb="1"/><line nr="239" mi="15" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="1" cb="1"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="1" cb="1"/><line nr="246" mi="0" ci="3" mb="0" cb="2"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="7" mb="1" cb="3"/><line nr="264" mi="5" ci="0" mb="0" cb="0"/><line nr="265" mi="20" ci="1" mb="8" cb="0"/><line nr="266" mi="14" ci="1" mb="2" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="8" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="2"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="2"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="2"/><line nr="282" mi="0" ci="4" mb="0" cb="2"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="2"/><line nr="285" mi="0" ci="9" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="1" cb="1"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="9" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="8" mb="1" cb="1"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="6" mb="0" cb="4"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="1" cb="1"/><line nr="302" mi="7" ci="0" mb="2" cb="0"/><line nr="303" mi="3" ci="0" mb="0" cb="0"/><line nr="304" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="16" ci="0" mb="2" cb="0"/><line nr="307" mi="3" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="3" ci="0" mb="2" cb="0"/><line nr="311" mi="8" ci="0" mb="2" cb="0"/><line nr="312" mi="7" ci="0" mb="2" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="8" ci="0" mb="2" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="8" ci="0" mb="0" cb="0"/><line nr="321" mi="7" ci="0" mb="2" cb="0"/><line nr="322" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="7" ci="0" mb="2" cb="0"/><line nr="324" mi="8" ci="0" mb="2" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="8" ci="0" mb="0" cb="0"/><line nr="331" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="7" mb="0" cb="2"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="16" mb="0" cb="2"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="2"/><line nr="341" mi="0" ci="8" mb="0" cb="2"/><line nr="342" mi="0" ci="7" mb="0" cb="2"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="8" mb="0" cb="2"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="9" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="2"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="7" mb="0" cb="2"/><line nr="354" mi="0" ci="8" mb="0" cb="2"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="9" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="2" ci="9" mb="1" cb="1"/><counter type="INSTRUCTION" missed="256" covered="475"/><counter type="BRANCH" missed="47" covered="59"/><counter type="LINE" missed="42" covered="104"/><counter type="COMPLEXITY" missed="32" covered="35"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GnpGraphGenerator.java"><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="1" cb="1"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="4"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="1" cb="1"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="1" cb="1"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="2"/><line nr="229" mi="2" ci="5" mb="1" cb="1"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="16" mb="0" cb="2"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="1" cb="1"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="7" mb="0" cb="2"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="1" cb="1"/><line nr="240" mi="7" ci="0" mb="2" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="7" ci="0" mb="2" cb="0"/><line nr="243" mi="8" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="10" mb="0" cb="4"/><line nr="247" mi="0" ci="8" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="2"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="7" mb="0" cb="2"/><line nr="251" mi="0" ci="8" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="2"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="16" mb="0" cb="2"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="1" cb="1"/><line nr="264" mi="0" ci="7" mb="0" cb="2"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="2"/><line nr="267" mi="0" ci="7" mb="0" cb="2"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="2"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="273" mi="7" ci="3" mb="3" cb="1"/><line nr="274" mi="9" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="9" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="2"/><line nr="278" mi="0" ci="9" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="360"/><counter type="BRANCH" missed="14" covered="48"/><counter type="LINE" missed="11" covered="78"/><counter type="COMPLEXITY" missed="12" covered="32"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphGenerator.java"><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmptyGraphGenerator.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="1" cb="1"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="2" ci="5" mb="1" cb="1"/><line nr="101" mi="0" ci="3" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="2" cb="0"/><line nr="104" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="2"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="77"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="5" covered="21"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CompleteGraphGenerator.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="2" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="2" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="1" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="7" ci="0" mb="2" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="180" mi="3" ci="0" mb="2" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="2" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="2" cb="0"/><line nr="191" mi="7" ci="0" mb="2" cb="0"/><line nr="192" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="16" ci="0" mb="2" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="7" ci="0" mb="2" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="2" cb="0"/><line nr="202" mi="7" ci="0" mb="2" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="8" ci="0" mb="0" cb="0"/><line nr="207" mi="3" ci="0" mb="2" cb="0"/><line nr="208" mi="8" ci="0" mb="0" cb="0"/><line nr="209" mi="9" ci="0" mb="2" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="8" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="7" ci="0" mb="2" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="3" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="16" ci="0" mb="2" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="223" mi="7" ci="0" mb="2" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="2" cb="0"/><line nr="226" mi="7" ci="0" mb="2" cb="0"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="9" ci="0" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="2" cb="0"/><line nr="232" mi="9" ci="0" mb="0" cb="0"/><line nr="233" mi="9" ci="0" mb="2" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="9" ci="0" mb="0" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="370" covered="0"/><counter type="BRANCH" missed="46" covered="0"/><counter type="LINE" missed="82" covered="0"/><counter type="COMPLEXITY" missed="34" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="874" covered="1289"/><counter type="BRANCH" missed="127" covered="155"/><counter type="LINE" missed="168" covered="282"/><counter type="COMPLEXITY" missed="95" covered="105"/><counter type="METHOD" missed="15" covered="44"/><counter type="CLASS" missed="1" covered="5"/></package><package name="com/jgalgo/internal/ds"><class name="com/jgalgo/internal/ds/HeapReferenceable" sourcefilename="HeapReferenceable.java"><method name="insert" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="87"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="150"><counter type="INSTRUCTION" missed="3" covered="42"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asHeap" desc="()Lcom/jgalgo/internal/ds/Heap;" line="203"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/HeapReferenceable;" line="216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/HeapReferenceable;" line="229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="242"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="58"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Heaps$AbstractHeapReferenceable" sourcefilename="Heaps.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comparator" desc="()Ljava/util/Comparator;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="41"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMin" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="61"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="36"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticPlusMinusOne" sourcefilename="RMQStaticPlusMinusOne.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preProcessSequence" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;I)Lcom/jgalgo/internal/ds/RMQStatic$DataStructure;" line="52"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$IntVoid" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="1086"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(I)Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;" line="1091"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticCartesianTrees" sourcefilename="RMQStaticCartesianTrees.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preProcessSequence" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;I)Lcom/jgalgo/internal/ds/RMQStatic$DataStructure;" line="51"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$IntBase$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(I)V" line="1003"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Integer;" line="1009"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearUserData" desc="()V" line="1013"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleVoid" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="806"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newNode" desc="(D)Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;" line="811"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtension$ExtensionData" sourcefilename="DynamicTreeSplayExtension.java"><method name="&lt;init&gt;" desc="()V" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Trees$TreeNodeImpl" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parent" desc="()Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prev" desc="()Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="child" desc="()Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParent" desc="(Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNext" desc="(Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrev" desc="(Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setChild" desc="(Lcom/jgalgo/internal/ds/Trees$TreeNodeImpl;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplitFindMin$Builder" sourcefilename="SplitFindMin.java"><method name="build" desc="()Lcom/jgalgo/internal/ds/SplitFindMin;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/SplitFindMin$Builder;" line="130"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/RMQStaticPowerOf2Table$DSu32" sourcefilename="RMQStaticPowerOf2Table.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;I)V" line="56"><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinimumInRange" desc="(II)I" line="78"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeInBytes" desc="()J" line="94"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="164"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="6" covered="22"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFindArray" sourcefilename="UnionFindArray.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="6" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasParent" desc="(I)Z" line="63"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="make" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(I)I" line="78"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find0" desc="(I)I" line="86"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="union" desc="(II)I" line="100"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unionSetParent" desc="(II)V" line="121"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="131"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRank" desc="(I)I" line="136"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRank" desc="(II)V" line="142"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="193"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="2" covered="52"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$Min" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="208"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubTreeMin" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/HeapReference;" line="219"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInsert" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="230"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRemove" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="237"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeNodeSwap" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="250"><counter type="INSTRUCTION" missed="131" covered="54"/><counter type="BRANCH" missed="27" covered="7"/><counter type="LINE" missed="18" covered="14"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateLeft" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="294"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateRight" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="300"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="200"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="131" covered="159"/><counter type="BRANCH" missed="27" covered="21"/><counter type="LINE" missed="18" covered="36"/><counter type="COMPLEXITY" missed="16" covered="17"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplayTree$SplayImpl" sourcefilename="SplayTree.java"><method name="&lt;init&gt;" desc="()V" line="379"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splay" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)Lcom/jgalgo/internal/ds/SplayTree$BaseNode;" line="382"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)V" line="409"><counter type="INSTRUCTION" missed="7" covered="66"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotate" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)V" line="439"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="377"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="114"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticSimpleLookupTable$DSu32" sourcefilename="RMQStaticSimpleLookupTable.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;I)V" line="141"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinimumInRange" desc="(II)I" line="157"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeInBytes" desc="()J" line="165"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="103"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticSimpleLookupTable$DSu16" sourcefilename="RMQStaticSimpleLookupTable.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;S)V" line="106"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinimumInRange" desc="(II)I" line="122"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeInBytes" desc="()J" line="130"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="117"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMinImpl$SubTree" sourcefilename="SubtreeMergeFindMinImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$NodeImpl;)V" line="395"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rank" desc="()I" line="402"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="406"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="392"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplayTree" sourcefilename="SplayTree.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="80"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="86"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="91"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertNode" desc="(Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;)Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;" line="95"><counter type="INSTRUCTION" missed="21" covered="43"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/jgalgo/internal/ds/HeapReference;)V" line="109"><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;)V" line="134"><counter type="INSTRUCTION" missed="7" covered="25"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;)V" line="147"><counter type="INSTRUCTION" missed="3" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(Lcom/jgalgo/internal/ds/HeapReference;Ljava/lang/Object;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="168"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="174"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMax" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="180"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOrSmaller" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="186"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOrGreater" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="192"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findSmaller" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="198"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findGreater" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="204"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredecessor" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/HeapReference;" line="210"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuccessor" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/HeapReference;" line="216"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="223"><counter type="INSTRUCTION" missed="34" covered="184"/><counter type="BRANCH" missed="6" covered="30"/><counter type="LINE" missed="0" covered="53"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/SplayTree;Lcom/jgalgo/internal/ds/SplayTree;)Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;" line="304"><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitSmaller" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/SplayTree;" line="316"><counter type="INSTRUCTION" missed="9" covered="43"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitGreater" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/SplayTree;" line="334"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/SplayTree;" line="342"><counter type="INSTRUCTION" missed="7" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="359"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkTreeNotEmpty" desc="()V" line="499"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="119" covered="707"/><counter type="BRANCH" missed="30" covered="76"/><counter type="LINE" missed="6" covered="159"/><counter type="COMPLEXITY" missed="19" covered="61"/><counter type="METHOD" missed="1" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjVoid" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="526"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;" line="531"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticSimpleLookupTable$DSu08" sourcefilename="RMQStaticSimpleLookupTable.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;B)V" line="71"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinimumInRange" desc="(II)I" line="87"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeInBytes" desc="()J" line="95"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="117"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$Size" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubTreeSize" desc="(Lcom/jgalgo/internal/ds/HeapReference;)I" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInsert" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRemove" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeNodeSwap" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateLeft" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="154"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateRight" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="163"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/BinarySearchTreeAbstract" sourcefilename="BinarySearchTreeAbstract.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMax" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="31"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjInt" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="496"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newNode" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;" line="501"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/RMQStaticSimpleLookupTable" sourcefilename="RMQStaticSimpleLookupTable.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preProcessSequence" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;I)Lcom/jgalgo/internal/ds/RMQStatic$DataStructure;" line="43"><counter type="INSTRUCTION" missed="12" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arrSize" desc="(I)I" line="58"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(III)I" line="62"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/LinkedListFixedSize$Doubly" sourcefilename="LinkedListFixedSize.java"><method name="&lt;init&gt;" desc="(I)V" line="90"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxOfNext" desc="(I)I" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxOfPrev" desc="(I)I" line="100"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="(I)I" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNext" desc="(II)V" line="112"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="(I)Z" line="116"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prev" desc="(I)I" line="120"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPrev" desc="(II)V" line="124"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrev" desc="(I)Z" line="128"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="insert" desc="(II)V" line="134"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connect" desc="(II)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="disconnect" desc="(I)V" line="151"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="(I)Lcom/jgalgo/internal/util/JGAlgoUtils$IterPeekable$Int;" line="167"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="113"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="9" covered="28"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFindValueArray" sourcefilename="UnionFindValueArray.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="52"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="make" desc="(D)I" line="59"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="make" desc="()I" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(I)D" line="73"><counter type="INSTRUCTION" missed="5" covered="39"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addValue" desc="(ID)V" line="85"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find0" desc="(I)I" line="91"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pathCompression" desc="(IID)V" line="101"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unionSetParent" desc="(II)V" line="114"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="173"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$IntObj$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(I)V" line="1032"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Object;" line="1037"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="1042"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearUserData" desc="()V" line="1047"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/HeapPairing$IntObj" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="1020"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newNode" desc="(I)Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;" line="1025"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$Max" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="342"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubTreeMax" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/HeapReference;" line="353"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="359"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInsert" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="364"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRemove" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="371"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeNodeSwap" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="384"><counter type="INSTRUCTION" missed="107" covered="78"/><counter type="BRANCH" missed="22" covered="12"/><counter type="LINE" missed="11" covered="21"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateLeft" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="428"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateRight" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="434"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="334"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="107" covered="183"/><counter type="BRANCH" missed="22" covered="26"/><counter type="LINE" missed="11" covered="43"/><counter type="COMPLEXITY" missed="13" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStatic$Builder" sourcefilename="RMQStatic.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/RMQStatic$Builder;" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/BinarySearchTree$1" sourcefilename="BinarySearchTree.java"><method name="&lt;init&gt;" desc="()V" line="209"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/BinarySearchTree;" line="217"><counter type="INSTRUCTION" missed="23" covered="22"/><counter type="BRANCH" missed="6" covered="3"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSplits" desc="(Z)Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMelds" desc="(Z)Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="242"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keysTypeObj" desc="()Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="248"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keysTypePrimitive" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="253"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesTypeObj" desc="()Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="258"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesTypePrimitive" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="263"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesTypeVoid" desc="()Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="268"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="273"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="44"/><counter type="BRANCH" missed="7" covered="4"/><counter type="LINE" missed="12" covered="11"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="5" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapBinomial$Node" sourcefilename="HeapBinomial.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="363"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Object;" line="373"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Object;" line="378"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="383"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="388"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticLinearAbstract$DsBase" sourcefilename="RMQStaticLinearAbstract.java"><method name="blockMinimum" desc="(I)I" line="258"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockRightMinimum" desc="(II)I" line="262"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockLeftMinimum" desc="(II)I" line="266"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockRightMinimum" desc="(IIB)V" line="270"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockLeftMinimum" desc="(IIB)V" line="274"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="innerBlockIndex" desc="(III)I" line="278"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="innerBlockAllocSize" desc="()I" line="283"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="107"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtension$Int" sourcefilename="DynamicTreeSplayExtension.java"><method name="&lt;init&gt;" desc="()V" line="111"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="data" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension$ExtensionData$Int;" line="115"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeData" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)I" line="119"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNodeData" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;I)V" line="123"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplitFindMinArray$Sequence" sourcefilename="SplitFindMinArray.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/SplitFindMinArray$Block;Lcom/jgalgo/internal/ds/SplitFindMinArray$Block;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="228"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="9"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticLinearAbstract" sourcefilename="RMQStaticLinearAbstract.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjVoid$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="536"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="541"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplitFindMinArray$Block" sourcefilename="SplitFindMinArray.java"><method name="&lt;init&gt;" desc="(II)V" line="240"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="247"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$ExtensionData$Int" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="522"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="527"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="531"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="536"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="541"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="546"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/BinarySearchTrees$BSTIterator" sourcefilename="BinarySearchTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)V" line="395"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="402"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="407"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$ExtensionData" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="480"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayInt" sourcefilename="DynamicTreeSplayInt.java"><method name="&lt;init&gt;" desc="(I)V" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/SplayTree$SplayImpl;I)V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeTree" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;" line="57"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findRoot" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;)Lcom/jgalgo/internal/ds/DynamicTree$Vertex;" line="64"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinEdge" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;)Lcom/jgalgo/internal/ds/DynamicTree$MinEdge;" line="73"><counter type="INSTRUCTION" missed="13" covered="91"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addWeight" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;D)V" line="101"><counter type="INSTRUCTION" missed="14" covered="69"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="link" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;Lcom/jgalgo/internal/ds/DynamicTree$Vertex;D)V" line="127"><counter type="INSTRUCTION" missed="30" covered="82"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="4" covered="18"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cut" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;)V" line="156"><counter type="INSTRUCTION" missed="1" covered="68"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="176"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="splay" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;" line="180"><counter type="INSTRUCTION" missed="14" covered="18"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splice" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;" line="190"><counter type="INSTRUCTION" missed="14" covered="88"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;" line="218"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeCut" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterLink" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)V" line="223"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/DynamicTreeExtension;" line="362"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="89" covered="466"/><counter type="BRANCH" missed="27" covered="39"/><counter type="LINE" missed="10" covered="112"/><counter type="COMPLEXITY" missed="21" covered="28"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$NodeVoidValBase" sourcefilename="HeapPairing.java"><method name="value" desc="()Ljava/lang/Void;" line="223"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Void;)V" line="228"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="220"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="3"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/BinarySearchTrees$Node" sourcefilename="BinarySearchTrees.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="350"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="356"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearWithoutUserData" desc="()V" line="361"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="366"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRoot" desc="()Z" line="370"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeftChild" desc="()Z" line="374"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRightChild" desc="()Z" line="378"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasLeftChild" desc="()Z" line="382"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasRightChild" desc="()Z" line="386"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="16"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFind$1" sourcefilename="UnionFind.java"><method name="&lt;init&gt;" desc="()V" line="120"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/internal/ds/UnionFind;" line="126"><counter type="INSTRUCTION" missed="28" covered="9"/><counter type="BRANCH" missed="4" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedSize" desc="(I)Lcom/jgalgo/internal/ds/UnionFind$Builder;" line="141"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/UnionFind$Builder;" line="149"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="19"/><counter type="BRANCH" missed="7" covered="2"/><counter type="LINE" missed="10" covered="6"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/BinarySearchTrees$NeighborType" sourcefilename="BinarySearchTrees.java"><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStatic" sourcefilename="RMQStatic.java"><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/RMQStatic;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/RMQStatic$Builder;" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$Obj" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="443"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="data" desc="()Lcom/jgalgo/internal/ds/RedBlackTreeExtension$ExtensionData$Obj;" line="448"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeData" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)Ljava/lang/Object;" line="452"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNodeData" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;Ljava/lang/Object;)V" line="456"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayIntExtended" sourcefilename="DynamicTreeSplayIntExtended.java"><method name="&lt;init&gt;" desc="(ILjava/util/Collection;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I[Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension;)V" line="57"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplayIntExtended$Node;" line="68"><counter type="INSTRUCTION" missed="9" covered="82"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeCut" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterLink" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/DynamicTreeExtension;" line="136"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(I)[Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="203"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/QueueFixSize" sourcefilename="QueueFixSize.java"><method name="&lt;init&gt;" desc="(I)V" line="26"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="35"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pop" desc="()Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="4" covered="20"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="124" covered="80"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStatic$DataStructure" sourcefilename="RMQStatic.java"/><class name="com/jgalgo/internal/ds/SubtreeMergeFindMinImpl$NodeImpl" sourcefilename="SubtreeMergeFindMinImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$NodeImpl;)V" line="347"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeData" desc="()Ljava/lang/Object;" line="356"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNodeData" desc="(Ljava/lang/Object;)V" line="361"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="366"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="370"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeList" sourcefilename="SubtreeMergeFindMinImpl.java"><method name="clear" desc="()V" line="425"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFind" sourcefilename="UnionFind.java"><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/UnionFind;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/UnionFind$Builder;" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeBuilderImpl" sourcefilename="DynamicTreeBuilderImpl.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/internal/ds/DynamicTree;" line="34"><counter type="INSTRUCTION" missed="23" covered="77"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxWeight" desc="(D)Lcom/jgalgo/internal/ds/DynamicTree$Builder;" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIntWeights" desc="(Z)Lcom/jgalgo/internal/ds/DynamicTree$Builder;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addExtension" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/DynamicTree$Builder;" line="75"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeExtension" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/DynamicTree$Builder;" line="81"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="107"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="6" covered="22"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayInt$MinEdgeRes" sourcefilename="DynamicTreeSplayInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;I)V" line="343"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;" line="350"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="()D" line="355"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjBase" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="273"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newHeap" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/HeapReferenceable;" line="278"><counter type="INSTRUCTION" missed="10" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="289"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeRoot" desc="()V" line="298"><counter type="INSTRUCTION" missed="94" covered="106"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="31" covered="35"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(Lcom/jgalgo/internal/ds/HeapReference;Ljava/lang/Object;)V" line="391"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meldDefaultCmp" desc="(Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;)Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;" line="399"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="meldCustomCmp" desc="(Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;)Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;" line="417"><counter type="INSTRUCTION" missed="28" covered="23"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareNodesKeys" desc="(Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;)I" line="435"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="270"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="188" covered="170"/><counter type="BRANCH" missed="27" covered="13"/><counter type="LINE" missed="44" covered="59"/><counter type="COMPLEXITY" missed="17" covered="12"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplay$MinEdgeRes" sourcefilename="DynamicTreeSplay.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;D)V" line="337"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;" line="344"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="()D" line="349"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticComparator" sourcefilename="RMQStaticComparator.java"><method name="ofObjArray" desc="([Ljava/lang/Object;)Lcom/jgalgo/internal/ds/RMQStaticComparator;" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofObjArray" desc="([Ljava/lang/Object;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/RMQStaticComparator;" line="69"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofByteArray" desc="([B)Lcom/jgalgo/internal/ds/RMQStaticComparator;" line="84"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofIntArray" desc="([I)Lcom/jgalgo/internal/ds/RMQStaticComparator;" line="95"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$ofIntArray$3" desc="([III)I" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$ofByteArray$2" desc="([BII)I" line="85"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$ofObjArray$1" desc="(Ljava/util/Comparator;[Ljava/lang/Object;II)I" line="73"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$ofObjArray$0" desc="([Ljava/lang/Object;II)I" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="14"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapAbstract$HeapFromReferenceable" sourcefilename="HeapAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="88"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAll" desc="(Ljava/util/Collection;)V" line="118"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findMin" desc="()Ljava/lang/Object;" line="124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMin" desc="()Ljava/lang/Object;" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/Heap;)V" line="135"><counter type="INSTRUCTION" missed="4" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="66"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="6" covered="19"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapReference" sourcefilename="HeapReference.java"/><class name="com/jgalgo/internal/ds/RedBlackTree$Node" sourcefilename="RedBlackTree.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="541"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Object;" line="546"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="552"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Object;" line="557"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="562"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="7"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticLinearAbstract$PreProcessor" sourcefilename="RMQStaticLinearAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticLinearAbstract;Lcom/jgalgo/internal/ds/RMQStaticComparator;I)V" line="49"><counter type="INSTRUCTION" missed="0" covered="162"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preProcessInnerBlocks" desc="()V" line="83"><counter type="INSTRUCTION" missed="80" covered="200"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="17" covered="42"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildInnerBlock" desc="(I[B)V" line="158"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/internal/ds/RMQStatic$DataStructure;" line="178"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$preProcessInnerBlocks$3" desc="(Lcom/jgalgo/internal/ds/RMQStaticLinearAbstract$PreProcessor$1;I)I" line="138"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$preProcessInnerBlocks$2" desc="(Lcom/jgalgo/internal/ds/RMQStaticLinearAbstract$PreProcessor$1;S)I" line="116"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$preProcessInnerBlocks$1" desc="(Lcom/jgalgo/internal/ds/RMQStaticLinearAbstract$PreProcessor$1;B)I" line="94"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(II)I" line="77"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="501"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="17" covered="74"/><counter type="COMPLEXITY" missed="5" covered="26"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$Int" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="464"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="data" desc="()Lcom/jgalgo/internal/ds/RedBlackTreeExtension$ExtensionData$Int;" line="468"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNodeData" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)I" line="472"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNodeData" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;I)V" line="476"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Trees$TreeNode" sourcefilename="Trees.java"/><class name="com/jgalgo/internal/ds/BinarySearchTree$Builder" sourcefilename="BinarySearchTree.java"><method name="build" desc="()Lcom/jgalgo/internal/ds/BinarySearchTree;" line="298"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="338"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/RMQStaticPowerOf2Table" sourcefilename="RMQStaticPowerOf2Table.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preProcessSequence" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;I)Lcom/jgalgo/internal/ds/RMQStatic$DataStructure;" line="41"><counter type="INSTRUCTION" missed="6" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayIntExtended$SplayImplWithExtensions" sourcefilename="DynamicTreeSplayIntExtended.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotate" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapReferenceable$Builder" sourcefilename="HeapReferenceable.java"><method name="build" desc="()Lcom/jgalgo/internal/ds/HeapReferenceable;" line="341"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="412"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Trees" sourcefilename="Trees.java"><method name="clear" desc="(Lcom/jgalgo/internal/ds/Trees$TreeNode;Ljava/util/function/Consumer;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/BinarySearchTree" sourcefilename="BinarySearchTree.java"><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/BinarySearchTree;" line="183"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/BinarySearchTree;" line="196"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/BinarySearchTree$Builder;" line="209"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapFibonacci" sourcefilename="HeapFibonacci.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="108"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="131"><counter type="INSTRUCTION" missed="14" covered="56"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cut" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)V" line="162"><counter type="INSTRUCTION" missed="17" covered="49"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addRoot" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)V" line="181"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareToMinRoot" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)V" line="188"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mark" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)V" line="194"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(Lcom/jgalgo/internal/ds/HeapReference;Ljava/lang/Object;)V" line="207"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/jgalgo/internal/ds/HeapReference;)V" line="224"><counter type="INSTRUCTION" missed="0" covered="335"/><counter type="BRANCH" missed="1" covered="55"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unionDefaultCmp" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)Lcom/jgalgo/internal/ds/HeapFibonacci$Node;" line="347"><counter type="INSTRUCTION" missed="10" covered="22"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unionCustomCmp" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)Lcom/jgalgo/internal/ds/HeapFibonacci$Node;" line="358"><counter type="INSTRUCTION" missed="12" covered="24"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)V" line="369"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxDegree" desc="(I)I" line="416"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$clear$0" desc="(Lcom/jgalgo/internal/ds/HeapFibonacci$Node;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="736"/><counter type="BRANCH" missed="13" covered="85"/><counter type="LINE" missed="6" covered="191"/><counter type="COMPLEXITY" missed="9" covered="60"/><counter type="METHOD" missed="1" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayIntExtended$Node" sourcefilename="DynamicTreeSplayIntExtended.java"><method name="&lt;init&gt;" desc="(I)V" line="106"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx" desc="()I" line="112"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtension$ExtensionData$Int" sourcefilename="DynamicTreeSplayExtension.java"><method name="&lt;init&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="146"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="151"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="(I)V" line="156"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expand" desc="(I)V" line="161"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="24"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjInt$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="508"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Integer;" line="513"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Integer;)V" line="518"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/Heap$Builder" sourcefilename="Heap.java"><method name="build" desc="()Lcom/jgalgo/internal/ds/Heap;" line="219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/Heap$Builder;" line="261"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/DynamicTree$Vertex" sourcefilename="DynamicTree.java"/><class name="com/jgalgo/internal/ds/RMQStaticLinearAbstract$DataStructure" sourcefilename="RMQStaticLinearAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticLinearAbstract$PreProcessor;)V" line="185"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinimumInRange" desc="(II)I" line="197"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcRMQInnerBlock" desc="(III)I" line="225"><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeInBytes" desc="()J" line="234"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="174"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="10" covered="30"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapBinaryInt$It" sourcefilename="HeapBinaryInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/HeapBinaryInt;)V" line="213"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="219"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="224"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTree" sourcefilename="RedBlackTree.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="82"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="95"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="105"><counter type="INSTRUCTION" missed="18" covered="82"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeNodeReuse" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="148"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitSmaller" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTree;" line="160"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="splitGreater" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTree;" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="split" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/RedBlackTree;" line="186"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="find" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="196"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMax" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="203"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(Lcom/jgalgo/internal/ds/HeapReference;Ljava/lang/Object;)V" line="210"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="218"><counter type="INSTRUCTION" missed="21" covered="35"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixAfterInsert" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="234"><counter type="INSTRUCTION" missed="27" covered="109"/><counter type="BRANCH" missed="10" covered="20"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="295"><counter type="INSTRUCTION" missed="8" covered="39"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="315"><counter type="INSTRUCTION" missed="57" covered="87"/><counter type="BRANCH" missed="20" covered="20"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="10" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/jgalgo/internal/ds/HeapReference;)V" line="352"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fixAfterRemove" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;Z)V" line="360"><counter type="INSTRUCTION" missed="7" covered="151"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotate" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;Z)V" line="429"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotateLeft" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="436"><counter type="INSTRUCTION" missed="8" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rotateRight" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="460"><counter type="INSTRUCTION" missed="8" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="484"><counter type="INSTRUCTION" missed="3" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOrSmaller" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="496"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOrGreater" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="501"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findSmaller" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="506"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findGreater" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="511"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredecessor" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/HeapReference;" line="516"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuccessor" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lcom/jgalgo/internal/ds/HeapReference;" line="521"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subTreeIterator" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Ljava/util/Iterator;" line="532"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/RedBlackTree$Node;" line="570"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInsert" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="573"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRemove" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="575"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateLeft" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="577"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateRight" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="579"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="186" covered="793"/><counter type="BRANCH" missed="52" covered="102"/><counter type="LINE" missed="12" covered="238"/><counter type="COMPLEXITY" missed="33" covered="82"/><counter type="METHOD" missed="4" covered="34"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticLinearAbstract$PaddedComparator" sourcefilename="RMQStaticLinearAbstract.java"><method name="&lt;init&gt;" desc="(ILcom/jgalgo/internal/ds/RMQStaticComparator;)V" line="293"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(II)I" line="300"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapBinomial" sourcefilename="HeapBinomial.java"><method name="&lt;init&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapParentChild" desc="(Lcom/jgalgo/internal/ds/HeapBinomial$Node;Lcom/jgalgo/internal/ds/HeapBinomial$Node;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="1" covered="23"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(Lcom/jgalgo/internal/ds/HeapReference;Ljava/lang/Object;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/jgalgo/internal/ds/HeapReference;)V" line="151"><counter type="INSTRUCTION" missed="4" covered="92"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="185"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="201"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReference;" line="206"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="216"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeTreesDefaultCmp" desc="(Lcom/jgalgo/internal/ds/HeapBinomial$Node;Lcom/jgalgo/internal/ds/HeapBinomial$Node;)Lcom/jgalgo/internal/ds/HeapBinomial$Node;" line="220"><counter type="INSTRUCTION" missed="11" covered="37"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeTreesCustomCmp" desc="(Lcom/jgalgo/internal/ds/HeapBinomial$Node;Lcom/jgalgo/internal/ds/HeapBinomial$Node;)Lcom/jgalgo/internal/ds/HeapBinomial$Node;" line="239"><counter type="INSTRUCTION" missed="11" covered="39"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="([Lcom/jgalgo/internal/ds/HeapBinomial$Node;I)I" line="258"><counter type="INSTRUCTION" missed="0" covered="217"/><counter type="BRANCH" missed="2" covered="56"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="2" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="322"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="336"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newArr" desc="(I)[Lcom/jgalgo/internal/ds/HeapBinomial$Node;" line="355"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$clear$0" desc="(Lcom/jgalgo/internal/ds/HeapBinomial$Node;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="759"/><counter type="BRANCH" missed="11" covered="129"/><counter type="LINE" missed="5" covered="174"/><counter type="COMPLEXITY" missed="10" covered="77"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/BinarySearchTrees" sourcefilename="BinarySearchTrees.java"><method name="find" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Ljava/util/Comparator;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOrSmaller" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Ljava/util/Comparator;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOrGreater" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Ljava/util/Comparator;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findOrNeighbor" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Ljava/util/Comparator;Ljava/lang/Object;Lcom/jgalgo/internal/ds/BinarySearchTrees$NeighborType;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="47"><counter type="INSTRUCTION" missed="2" covered="91"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findSmaller" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Ljava/util/Comparator;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="107"><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findGreater" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Ljava/util/Comparator;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="139"><counter type="INSTRUCTION" missed="2" covered="61"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="171"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMax" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="177"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredecessor" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredecessorInSubtree" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="188"><counter type="INSTRUCTION" missed="3" covered="37"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuccessor" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="202"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuccessorInSubtree" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="207"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Ljava/util/Comparator;Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)V" line="263"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)V" line="282"><counter type="INSTRUCTION" missed="65" covered="141"/><counter type="BRANCH" missed="18" covered="22"/><counter type="LINE" missed="16" covered="36"/><counter type="COMPLEXITY" missed="13" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findOrNeighbor$1" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$NeighborType;Lcom/jgalgo/internal/ds/BinarySearchTrees$NeighborType;Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="62"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findOrNeighbor$0" desc="(Lcom/jgalgo/internal/ds/BinarySearchTrees$NeighborType;Lcom/jgalgo/internal/ds/BinarySearchTrees$NeighborType;Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;)Lcom/jgalgo/internal/ds/BinarySearchTrees$Node;" line="50"><counter type="INSTRUCTION" missed="8" covered="10"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="606"/><counter type="BRANCH" missed="26" covered="118"/><counter type="LINE" missed="23" covered="185"/><counter type="COMPLEXITY" missed="21" covered="71"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplitFindMinArray" sourcefilename="SplitFindMinArray.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(Ljava/util/Collection;Ljava/util/Comparator;)V" line="50"><counter type="INSTRUCTION" missed="1" covered="68"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(I)I" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(I)V" line="79"><counter type="INSTRUCTION" missed="1" covered="168"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="1" covered="35"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBlk" desc="(Lcom/jgalgo/internal/ds/SplitFindMinArray$Block;)Lcom/jgalgo/internal/ds/SplitFindMinArray$Block;" line="121"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="(I)Ljava/lang/Object;" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="(I)I" line="136"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(ILjava/lang/Object;)Z" line="141"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="160"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newSequence" desc="(Lcom/jgalgo/internal/ds/SplitFindMinArray$Block;Lcom/jgalgo/internal/ds/SplitFindMinArray$Block;)Lcom/jgalgo/internal/ds/SplitFindMinArray$Sequence;" line="177"><counter type="INSTRUCTION" missed="1" covered="57"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBlock" desc="(II)Lcom/jgalgo/internal/ds/SplitFindMinArray$Block;" line="198"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="54" covered="440"/><counter type="BRANCH" missed="9" covered="55"/><counter type="LINE" missed="17" covered="98"/><counter type="COMPLEXITY" missed="7" covered="36"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Trees$PreOrderIter" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/Trees$TreeNode;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="(Lcom/jgalgo/internal/ds/Trees$TreeNode;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="136"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/internal/ds/Trees$TreeNode;" line="159"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeExtension" sourcefilename="DynamicTreeExtension.java"/><class name="com/jgalgo/internal/ds/HeapPairing$IntInt" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="1056"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(I)Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;" line="1061"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplay" sourcefilename="DynamicTreeSplay.java"><method name="&lt;init&gt;" desc="(D)V" line="48"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/SplayTree$SplayImpl;D)V" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeTree" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findRoot" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;)Lcom/jgalgo/internal/ds/DynamicTree$Vertex;" line="65"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinEdge" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;)Lcom/jgalgo/internal/ds/DynamicTree$MinEdge;" line="74"><counter type="INSTRUCTION" missed="13" covered="97"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addWeight" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;D)V" line="102"><counter type="INSTRUCTION" missed="9" covered="61"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="link" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;Lcom/jgalgo/internal/ds/DynamicTree$Vertex;D)V" line="124"><counter type="INSTRUCTION" missed="25" covered="75"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cut" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;)V" line="150"><counter type="INSTRUCTION" missed="1" covered="68"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="170"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splay" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;" line="174"><counter type="INSTRUCTION" missed="14" covered="18"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splice" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;" line="184"><counter type="INSTRUCTION" missed="14" covered="88"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;" line="212"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeCut" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterLink" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/DynamicTreeExtension;" line="356"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="458"/><counter type="BRANCH" missed="25" covered="37"/><counter type="LINE" missed="7" covered="109"/><counter type="COMPLEXITY" missed="18" covered="29"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapBinary$It" sourcefilename="HeapBinary.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/HeapBinary;)V" line="199"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="205"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="210"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStatic$1" sourcefilename="RMQStatic.java"><method name="&lt;init&gt;" desc="()V" line="98"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/internal/ds/RMQStatic;" line="103"><counter type="INSTRUCTION" missed="23" covered="16"/><counter type="BRANCH" missed="5" covered="2"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/RMQStatic$Builder;" line="122"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="34"/><counter type="BRANCH" missed="6" covered="3"/><counter type="LINE" missed="6" covered="8"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode" sourcefilename="DynamicTreeSplayInt.java"><method name="&lt;init&gt;" desc="()V" line="286"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Ljava/lang/Object;" line="293"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setData" desc="(Ljava/lang/Object;)V" line="298"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/internal/ds/DynamicTree$Vertex;" line="303"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLinked" desc="()Z" line="307"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="link" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)V" line="311"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unlink" desc="()V" line="315"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWeight" desc="()I" line="319"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWeight" desc="(I)I" line="324"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinWeight" desc="()I" line="328"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinWeight" desc="(I)I" line="333"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="274"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="55"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticCartesianTrees$PreProcessor" sourcefilename="RMQStaticCartesianTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticCartesianTrees;Lcom/jgalgo/internal/ds/RMQStaticComparator;I)V" line="61"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockSize" desc="(I)B" line="69"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockKeySize" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcBlockKey" desc="(I)I" line="81"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcDemoBlock" desc="(I)[B" line="104"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFindPtr$Elm" sourcefilename="UnionFindPtr.java"><method name="&lt;init&gt;" desc="(I)V" line="132"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension$ExtensionData$Obj" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="()V" line="490"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="496"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="500"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="505"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="510"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="515"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$IntInt$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(I)V" line="1068"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Integer;" line="1073"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Integer;)V" line="1078"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMin$MinEdge" sourcefilename="SubtreeMergeFindMin.java"/><class name="com/jgalgo/internal/ds/DynamicTreeSplay$SplayNode" sourcefilename="DynamicTreeSplay.java"><method name="&lt;init&gt;" desc="()V" line="280"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Ljava/lang/Object;" line="287"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setData" desc="(Ljava/lang/Object;)V" line="292"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/internal/ds/DynamicTree$Vertex;" line="297"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLinked" desc="()Z" line="301"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="link" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)V" line="305"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unlink" desc="()V" line="309"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWeight" desc="()D" line="313"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWeight" desc="(D)D" line="318"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinWeight" desc="()D" line="322"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMinWeight" desc="(D)D" line="327"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="268"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="55"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Heaps" sourcefilename="Heaps.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertHeapConstraints" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="67"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/SplitFind$Builder" sourcefilename="SplitFind.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/SplitFind$Builder;" line="139"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleObj$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(D)V" line="752"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Object;" line="757"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="762"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearUserData" desc="()V" line="767"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapBinomial$Itr" sourcefilename="HeapBinomial.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/HeapBinomial;)V" line="397"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advanceToNextRoot" desc="()Z" line="404"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()Z" line="417"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayInt$SplayImplWithRelativeWeights" sourcefilename="DynamicTreeSplayInt.java"><method name="&lt;init&gt;" desc="()V" line="225"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotate" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayInt$SplayNode;)V" line="229"><counter type="INSTRUCTION" missed="7" covered="165"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="225"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="169"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtended" sourcefilename="RedBlackTreeExtended.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;Ljava/util/Collection;)V" line="110"><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;" line="121"><counter type="INSTRUCTION" missed="9" covered="78"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="137"><counter type="INSTRUCTION" missed="18" covered="62"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterInsert" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="167"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRemove" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateLeft" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotateRight" desc="(Lcom/jgalgo/internal/ds/RedBlackTree$Node;)V" line="185"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeNodeReuse" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="190"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="196"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(I)[Lcom/jgalgo/internal/ds/RedBlackTreeExtension;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="85" covered="299"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="11" covered="51"/><counter type="COMPLEXITY" missed="9" covered="20"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapBinary" sourcefilename="HeapBinary.java"><method name="&lt;init&gt;" desc="()V" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="77"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Object;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="101"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="()Ljava/lang/Object;" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)V" line="135"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMin" desc="()Ljava/lang/Object;" line="149"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAll" desc="(Ljava/util/Collection;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="184"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="192"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveUp" desc="(ILjava/lang/Object;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveDown" desc="(ILjava/lang/Object;)V" line="248"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="468"/><counter type="BRANCH" missed="5" covered="53"/><counter type="LINE" missed="4" covered="112"/><counter type="COMPLEXITY" missed="6" covered="37"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Heap" sourcefilename="Heap.java"><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/Heap;" line="138"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/Heap;" line="151"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/Heap$Builder;" line="164"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtended$Node" sourcefilename="DynamicTreeSplayExtended.java"><method name="&lt;init&gt;" desc="(I)V" line="106"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idx" desc="()I" line="112"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleInt" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="776"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(D)Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;" line="781"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtension$SplayNodeExtended" sourcefilename="DynamicTreeSplayExtension.java"/><class name="com/jgalgo/internal/ds/DynamicTree$MinEdge" sourcefilename="DynamicTree.java"/><class name="com/jgalgo/internal/ds/SplitFindMin" sourcefilename="SplitFindMin.java"><method name="init" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/SplitFindMin;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/SplitFindMin$Builder;" line="103"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$init$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="53"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleBase" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="551"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newHeap" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/HeapReferenceable;" line="559"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Double;)Lcom/jgalgo/internal/ds/HeapReference;" line="570"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeRoot" desc="()V" line="579"><counter type="INSTRUCTION" missed="93" covered="107"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="30" covered="36"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(Lcom/jgalgo/internal/ds/HeapReference;Ljava/lang/Double;)V" line="672"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meldDefaultCmp" desc="(Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;)Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;" line="681"><counter type="INSTRUCTION" missed="28" covered="21"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meldCustomCmp" desc="(Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;)Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;" line="699"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareNodesKeys" desc="(Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;)I" line="717"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/Comparator;DD)I" line="553"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="546"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="197" covered="185"/><counter type="BRANCH" missed="29" covered="15"/><counter type="LINE" missed="42" covered="64"/><counter type="COMPLEXITY" missed="19" covered="13"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplayTree$SplayImplWithSize" sourcefilename="SplayTree.java"><method name="beforeRotate" desc="(Lcom/jgalgo/internal/ds/SplayTree$SplayBSTNode;)V" line="481"><counter type="INSTRUCTION" missed="7" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="477"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeNode" sourcefilename="SubtreeMergeFindMinImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$NodeImpl;Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$NodeImpl;Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$Edge;)V" line="434"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="441"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="446"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjBase$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="441"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Object;" line="447"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearUserData" desc="()V" line="452"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjObj" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="460"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newNode" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapPairing$ObjBase$Node;" line="465"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/SplayTree$SplayBSTNode" sourcefilename="SplayTree.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="450"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Object;" line="456"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Object;" line="461"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="466"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearWithoutUserData" desc="()V" line="471"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="16"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapFibonacci$Node" sourcefilename="HeapFibonacci.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="385"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Object;" line="391"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Object;" line="396"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="401"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="406"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="9"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/LinkedListFixedSize$Singly$1" sourcefilename="LinkedListFixedSize.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/LinkedListFixedSize$Singly;I)V" line="59"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNext" desc="()I" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticPlusMinusOne$PreProcessor" sourcefilename="RMQStaticPlusMinusOne.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticPlusMinusOne;Lcom/jgalgo/internal/ds/RMQStaticComparator;I)V" line="60"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockSize" desc="(I)B" line="67"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockKeySize" desc="()I" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcBlockKey" desc="(I)I" line="79"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcDemoBlock" desc="(I)[B" line="94"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/LinkedListFixedSize$Doubly$1" sourcefilename="LinkedListFixedSize.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/LinkedListFixedSize$Doubly;I)V" line="168"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="173"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="178"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNext" desc="()I" line="186"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtended" sourcefilename="DynamicTreeSplayExtended.java"><method name="&lt;init&gt;" desc="(DLjava/util/Collection;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D[Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension;)V" line="57"><counter type="INSTRUCTION" missed="5" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="()Lcom/jgalgo/internal/ds/DynamicTreeSplayExtended$Node;" line="68"><counter type="INSTRUCTION" missed="9" covered="82"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeCut" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterLink" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExtension" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/DynamicTreeExtension;" line="136"><counter type="INSTRUCTION" missed="4" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(I)[Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="203"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="6" covered="32"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$PreOrderIter" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;)V" line="234"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="243"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;" line="248"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleVoid$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(D)V" line="816"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="821"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/HeapPairing$IntVoid$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(I)V" line="1096"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="1101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFindValue$Builder" sourcefilename="UnionFindValue.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/UnionFindValue$Builder;" line="147"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/SplayTree$BaseNode" sourcefilename="SplayTree.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="368"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Object;" line="372"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleObj" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="740"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(D)Lcom/jgalgo/internal/ds/HeapPairing$DoubleBase$Node;" line="745"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtended$SplayImplWithExtensions" sourcefilename="DynamicTreeSplayExtended.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotate" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)V" line="126"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMin$Builder" sourcefilename="SubtreeMergeFindMin.java"><method name="build" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin;" line="241"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Builder;" line="260"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/HeapPairing$NodeBase" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMin" sourcefilename="SubtreeMergeFindMin.java"><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin;" line="190"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMin;" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Builder;" line="215"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtended$Node" sourcefilename="RedBlackTreeExtended.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;I)V" line="207"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parent" desc="()Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;" line="212"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="()Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;" line="216"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="()Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;" line="220"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleInt$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(D)V" line="788"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Integer;" line="793"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Integer;)V" line="798"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFindValue" sourcefilename="UnionFindValue.java"><method name="make" desc="()I" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/UnionFindValue;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/UnionFindValue$Builder;" line="113"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="7"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/LinkedListFixedSize$Singly" sourcefilename="LinkedListFixedSize.java"><method name="&lt;init&gt;" desc="(I)V" line="32"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="(I)I" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNext" desc="(II)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="(I)Z" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="(I)Lcom/jgalgo/internal/util/JGAlgoUtils$IterPeekable$Int;" line="58"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="37"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMin$Node" sourcefilename="SubtreeMergeFindMin.java"/><class name="com/jgalgo/internal/ds/SubtreeMergeFindMinImpl" sourcefilename="SubtreeMergeFindMinImpl.java"><method name="&lt;init&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initTree" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="81"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLeaf" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newNode" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$NodeImpl;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="93"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSameSubTree" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;)Z" line="112"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeSubTrees" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;)V" line="118"><counter type="INSTRUCTION" missed="12" covered="320"/><counter type="BRANCH" missed="4" covered="38"/><counter type="LINE" missed="1" covered="59"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><method name="concatenateEdgeLists" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeList;Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeList;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeList;" line="208"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addNonTreeEdge" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;Ljava/lang/Object;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeNode" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeNode;)V" line="250"><counter type="INSTRUCTION" missed="11" covered="60"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeToSet" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$SubTree;ILcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeNode;)V" line="271"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareAgainstSubTreeMin" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$SubTree;Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$EdgeNode;)V" line="296"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNonTreeEdge" desc="()Z" line="308"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinNonTreeEdge" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$MinEdge;" line="313"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="318"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="323"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subTree" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$NodeImpl;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$SubTree;" line="335"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$SubTree;Lcom/jgalgo/internal/ds/SubtreeMergeFindMinImpl$SubTree;)I" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="811"/><counter type="BRANCH" missed="7" covered="85"/><counter type="LINE" missed="2" covered="158"/><counter type="COMPLEXITY" missed="5" covered="61"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$ObjObj$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="472"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Object;" line="477"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setValue" desc="(Ljava/lang/Object;)V" line="482"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearUserData" desc="()V" line="487"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/HeapPairing$IntBase" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="831"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newHeap" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/HeapReferenceable;" line="839"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Integer;)Lcom/jgalgo/internal/ds/HeapReference;" line="850"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeRoot" desc="()V" line="859"><counter type="INSTRUCTION" missed="0" covered="200"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="66"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(Lcom/jgalgo/internal/ds/HeapReference;Ljava/lang/Integer;)V" line="952"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meldDefaultCmp" desc="(Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;)Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;" line="961"><counter type="INSTRUCTION" missed="28" covered="21"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meldCustomCmp" desc="(Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;)Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;" line="979"><counter type="INSTRUCTION" missed="28" covered="23"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareNodesKeys" desc="(Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;Lcom/jgalgo/internal/ds/HeapPairing$IntBase$Node;)I" line="997"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$0" desc="(Ljava/util/Comparator;II)I" line="833"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="826"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="78" covered="304"/><counter type="BRANCH" missed="18" covered="26"/><counter type="LINE" missed="2" covered="104"/><counter type="COMPLEXITY" missed="12" covered="20"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTree" sourcefilename="DynamicTree.java"><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/DynamicTree$Builder;" line="198"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtension$TreeSize" sourcefilename="DynamicTreeSplayExtension.java"><method name="&lt;init&gt;" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTreeSize" desc="(Lcom/jgalgo/internal/ds/DynamicTree$Vertex;)I" line="67"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initNode" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeCut" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterLink" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotate" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)V" line="90"><counter type="INSTRUCTION" missed="7" covered="56"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="104"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTree$Builder" sourcefilename="DynamicTree.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/DynamicTree$Builder;" line="289"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/UnionFindPtr" sourcefilename="UnionFindPtr.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="53"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="make" desc="()I" line="62"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find" desc="(I)I" line="71"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="find0" desc="(I)Lcom/jgalgo/internal/ds/UnionFindPtr$Elm;" line="75"><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="union" desc="(II)I" line="95"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="113"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="118"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="136"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="9" covered="34"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplay$SplayImplWithRelativeWeights" sourcefilename="DynamicTreeSplay.java"><method name="&lt;init&gt;" desc="()V" line="219"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRotate" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplay$SplayNode;)V" line="223"><counter type="INSTRUCTION" missed="7" covered="165"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="219"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="169"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapReferenceable$1" sourcefilename="HeapReferenceable.java"><method name="&lt;init&gt;" desc="()V" line="242"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/HeapReferenceable;" line="250"><counter type="INSTRUCTION" missed="14" covered="29"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keysTypeObj" desc="()Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="267"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keysTypePrimitive" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="273"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesTypeObj" desc="()Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="281"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesTypePrimitive" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="287"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesTypeVoid" desc="()Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="295"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;" line="301"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="78"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="5" covered="22"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/LinkedListFixedSize" sourcefilename="LinkedListFixedSize.java"/><class name="com/jgalgo/internal/ds/RMQStaticPowerOf2Table$DSu16" sourcefilename="RMQStaticPowerOf2Table.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;S)V" line="108"><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinimumInRange" desc="(II)I" line="130"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeInBytes" desc="()J" line="146"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="171"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing" sourcefilename="HeapPairing.java"><method name="newHeap" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/HeapReferenceable;" line="54"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="()Lcom/jgalgo/internal/ds/HeapReference;" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cut" desc="(Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;)V" line="96"><counter type="INSTRUCTION" missed="14" covered="20"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertNode" desc="(Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;)V" line="108"><counter type="INSTRUCTION" missed="7" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterKeyDecrease" desc="(Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lcom/jgalgo/internal/ds/HeapReference;)V" line="127"><counter type="INSTRUCTION" missed="7" covered="26"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="142"><counter type="INSTRUCTION" missed="7" covered="47"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;)Lcom/jgalgo/internal/ds/HeapPairing$NodeBase;" line="161"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="170"><counter type="INSTRUCTION" missed="7" covered="53"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="201"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertHeapConstraints" desc="(Lcom/jgalgo/internal/ds/HeapPairing;)V" line="1108"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="105" covered="262"/><counter type="BRANCH" missed="24" covered="32"/><counter type="LINE" missed="18" covered="85"/><counter type="COMPLEXITY" missed="13" covered="30"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeExtension$TreeSize" sourcefilename="DynamicTreeExtension.java"/><class name="com/jgalgo/internal/ds/HeapBinaryInt" sourcefilename="HeapBinaryInt.java"><method name="&lt;init&gt;" desc="()V" line="64"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(Ljava/lang/Integer;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(I)V" line="98"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="107"><counter type="INSTRUCTION" missed="2" covered="51"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="()Ljava/lang/Integer;" line="135"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)V" line="140"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMin" desc="()Ljava/lang/Integer;" line="153"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertAll" desc="(Ljava/util/Collection;)V" line="161"><counter type="INSTRUCTION" missed="36" covered="115"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="4" covered="21"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="198"><counter type="INSTRUCTION" missed="2" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="206"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveUp" desc="(II)V" line="231"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveDown" desc="(II)V" line="261"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(II)I" line="313"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/util/Comparator;II)I" line="84"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="504"/><counter type="BRANCH" missed="12" covered="60"/><counter type="LINE" missed="8" covered="115"/><counter type="COMPLEXITY" missed="11" covered="42"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapAbstract" sourcefilename="HeapAbstract.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="43"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="meld" desc="(Lcom/jgalgo/internal/ds/Heap;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comparator" desc="()Ljava/util/Comparator;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="64"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromHeapReferenceable" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)Lcom/jgalgo/internal/ds/Heap;" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="45"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/Heap$1" sourcefilename="Heap.java"><method name="&lt;init&gt;" desc="()V" line="164"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/Heap;" line="170"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementsTypeObj" desc="()Lcom/jgalgo/internal/ds/Heap$Builder;" line="179"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementsTypePrimitive" desc="(Ljava/lang/Class;)Lcom/jgalgo/internal/ds/Heap$Builder;" line="185"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="17"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/HeapPairing$DoubleBase$Node" sourcefilename="HeapPairing.java"><method name="&lt;init&gt;" desc="(D)V" line="723"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="key" desc="()Ljava/lang/Double;" line="729"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearUserData" desc="()V" line="733"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SubtreeMergeFindMinImpl$Edge" sourcefilename="SubtreeMergeFindMinImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;Ljava/lang/Object;)V" line="454"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="source" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="467"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="()Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="472"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeData" desc="()Ljava/lang/Object;" line="477"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RedBlackTreeExtension" sourcefilename="RedBlackTreeExtension.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtension$ExtensionData;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initNode" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="65"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeNodeData" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="67"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="afterInsert" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="69"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeRemove" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="71"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeNodeSwap" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="73"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeRotateLeft" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="75"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="beforeRotateRight" desc="(Lcom/jgalgo/internal/ds/RedBlackTreeExtended$Node;)V" line="77"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="6"/><counter type="LINE" missed="7" covered="3"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/UnionFind$Builder" sourcefilename="UnionFind.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/internal/ds/UnionFind$Builder;" line="200"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/UnionFindValue$1" sourcefilename="UnionFindValue.java"><method name="&lt;init&gt;" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/internal/ds/UnionFindValue;" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedSize" desc="(I)Lcom/jgalgo/internal/ds/UnionFindValue$Builder;" line="123"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStaticLinearAbstract$PreProcessor$1" sourcefilename="RMQStaticLinearAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticLinearAbstract$PreProcessor;)V" line="84"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/SplitFind" sourcefilename="SplitFind.java"><method name="newInstance" desc="()Lcom/jgalgo/internal/ds/SplitFind;" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/internal/ds/SplitFind$Builder;" line="105"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/ds/RMQStaticPowerOf2Table$DSu08" sourcefilename="RMQStaticPowerOf2Table.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/RMQStaticComparator;B)V" line="160"><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMinimumInRange" desc="(II)I" line="182"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeInBytes" desc="()J" line="198"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="171"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/DynamicTreeSplayExtension" sourcefilename="DynamicTreeSplayExtension.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/ds/DynamicTreeSplayExtension$ExtensionData;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDynamicTreeAlgo" desc="(Lcom/jgalgo/internal/ds/DynamicTree;)V" line="33"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splay" desc="(Lcom/jgalgo/internal/ds/SplayTree$BaseNode;)V" line="39"><counter type="INSTRUCTION" missed="9" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="40"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/ds/RMQStatics" sourcefilename="RMQStatics.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIndices" desc="(III)V" line="21"><counter type="INSTRUCTION" missed="7" covered="10"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="RMQStaticCartesianTrees.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="1" cb="1"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="15" mb="0" cb="4"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="2"/><line nr="112" mi="0" ci="14" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="2"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="187"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UnionFind.java"><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="1" cb="1"/><line nr="127" mi="9" ci="0" mb="3" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="1" cb="1"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="2" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="26"/><counter type="BRANCH" missed="7" covered="2"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="HeapBinaryInt.java"><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="1" cb="3"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="1" cb="1"/><line nr="114" mi="0" ci="6" mb="0" cb="2"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="1" cb="1"/><line nr="118" mi="0" ci="8" mb="0" cb="2"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="1" cb="1"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="2"/><line nr="163" mi="0" ci="16" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="12" ci="0" mb="2" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="2"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="1" cb="1"/><line nr="179" mi="12" ci="0" mb="2" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="0" ci="10" mb="0" cb="2"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="1" cb="1"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="2"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="1" cb="1"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="10" mb="0" cb="2"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="12" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="14" mb="0" cb="4"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="16" mb="0" cb="4"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="12" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="2"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="11" mb="0" cb="4"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="2"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="12" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="2"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="13" mb="0" cb="4"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="6" mb="0" cb="2"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="0" ci="13" mb="0" cb="2"/><counter type="INSTRUCTION" missed="44" covered="537"/><counter type="BRANCH" missed="12" covered="62"/><counter type="LINE" missed="8" covered="121"/><counter type="COMPLEXITY" missed="11" covered="46"/><counter type="METHOD" missed="1" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LinkedListFixedSize.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="9" ci="0" mb="2" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="14" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="9" ci="0" mb="2" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="9" ci="0" mb="2" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="14" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="225"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="14" covered="52"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="6" covered="24"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="SplitFindMin.java"><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="13"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="BinarySearchTrees.java"><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="16" mb="0" cb="0"/><line nr="42" mi="0" ci="18" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="1" cb="1"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="2" cb="2"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="2" cb="2"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="2"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="1" cb="1"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="2"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="3" ci="4" mb="1" cb="1"/><line nr="195" mi="0" ci="10" mb="0" cb="2"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="2"/><line nr="214" mi="0" ci="10" mb="0" cb="2"/><line nr="215" mi="0" ci="3" mb="0" cb="2"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="2"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="2"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="2"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="2"/><line nr="244" mi="0" ci="3" mb="0" cb="2"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="2"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="1" cb="1"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="4" mb="0" cb="2"/><line nr="288" mi="0" ci="3" mb="0" cb="2"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="1" cb="1"/><line nr="294" mi="3" ci="0" mb="0" cb="0"/><line nr="295" mi="6" ci="0" mb="2" cb="0"/><line nr="296" mi="4" ci="0" mb="0" cb="0"/><line nr="297" mi="6" ci="0" mb="2" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="300" mi="5" ci="0" mb="2" cb="0"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="8" ci="1" mb="2" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="1" cb="1"/><line nr="306" mi="4" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="2"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="5" mb="1" cb="1"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="2"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="2"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="1" cb="1"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="2" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="4" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="1" cb="1"/><line nr="333" mi="4" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="2"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="1" cb="1"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="5" mb="1" cb="1"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="9" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="358" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="9" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="7" mb="0" cb="2"/><line nr="374" mi="0" ci="12" mb="0" cb="4"/><line nr="378" mi="0" ci="12" mb="0" cb="4"/><line nr="382" mi="0" ci="7" mb="0" cb="2"/><line nr="386" mi="0" ci="7" mb="0" cb="2"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="8" mb="0" cb="2"/><line nr="398" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="7" mb="0" cb="2"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="7" mb="0" cb="0"/><line nr="410" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="755"/><counter type="BRANCH" missed="26" covered="136"/><counter type="LINE" missed="23" covered="211"/><counter type="COMPLEXITY" missed="21" covered="93"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="DynamicTreeSplayInt.java"><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="1" cb="3"/><line nr="79" mi="1" ci="10" mb="1" cb="1"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="12" mb="0" cb="4"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="1" cb="1"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="7" ci="1" mb="2" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="1" cb="1"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="7" ci="1" mb="2" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="1" ci="12" mb="1" cb="1"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="1" cb="1"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="1" cb="1"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="1" cb="1"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="1" cb="1"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="10" ci="1" mb="4" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="14" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="1" cb="1"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="2"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="14" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="7" ci="1" mb="2" cb="0"/><line nr="185" mi="7" ci="1" mb="2" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="7" ci="1" mb="2" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="2"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="7" ci="1" mb="2" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="9" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="10" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="12" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="8" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="2"/><line nr="244" mi="0" ci="12" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="2"/><line nr="246" mi="0" ci="12" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="13" mb="0" cb="0"/><line nr="251" mi="7" ci="1" mb="2" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="2"/><line nr="253" mi="0" ci="8" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="12" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="258" mi="0" ci="12" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="12" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="8" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="7" mb="0" cb="2"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="7" ci="1" mb="2" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="328" mi="7" ci="1" mb="2" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="0"/><line nr="343" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="110" covered="706"/><counter type="BRANCH" missed="33" covered="59"/><counter type="LINE" missed="10" covered="168"/><counter type="COMPLEXITY" missed="24" covered="56"/><counter type="METHOD" missed="2" covered="32"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="UnionFindPtr.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="1" cb="1"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="7" mb="1" cb="1"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="2"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="2" cb="2"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="2"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="8" ci="0" mb="2" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="148"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="9" covered="39"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SplitFindMinArray.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="1" cb="1"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="1" cb="1"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="14" mb="0" cb="2"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="2"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="14" mb="0" cb="2"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="9" mb="0" cb="2"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="12" mb="0" cb="4"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="12" mb="0" cb="4"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="7" ci="0" mb="4" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="2" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="13" mb="0" cb="4"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="1" cb="3"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="7" mb="0" cb="2"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="12" mb="0" cb="4"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="13" ci="0" mb="2" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="458"/><counter type="BRANCH" missed="11" covered="55"/><counter type="LINE" missed="19" covered="106"/><counter type="COMPLEXITY" missed="10" covered="38"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="RMQStatics.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="9" mb="3" cb="3"/><line nr="22" mi="7" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeapFibonacci.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="9" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="7" ci="1" mb="2" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="2"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="10" ci="1" mb="2" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="7" ci="1" mb="2" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="2"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="2"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="2"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="2"/><line nr="227" mi="0" ci="3" mb="0" cb="2"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="2"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="2"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="2"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="2"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="2"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="2"/><line nr="277" mi="0" ci="8" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="2"/><line nr="282" mi="0" ci="9" mb="0" cb="2"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="9" mb="0" cb="2"/><line nr="287" mi="0" ci="4" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="2"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="9" mb="0" cb="2"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="0"/><line nr="308" mi="0" ci="16" mb="0" cb="2"/><line nr="309" mi="0" ci="2" mb="0" cb="2"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="2"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="1" cb="1"/><line nr="321" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="2"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="2"/><line nr="327" mi="0" ci="17" mb="0" cb="2"/><line nr="328" mi="0" ci="2" mb="0" cb="2"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="8" mb="0" cb="4"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="16" mb="0" cb="2"/><line nr="335" mi="0" ci="2" mb="0" cb="2"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="10" mb="0" cb="4"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="10" mb="0" cb="4"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="10" ci="1" mb="2" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="12" mb="0" cb="4"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="12" ci="1" mb="2" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="2"/><line nr="373" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="3" ci="0" mb="0" cb="0"/><line nr="401" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="1" ci="0" mb="0" cb="0"/><line nr="406" mi="6" ci="0" mb="0" cb="0"/><line nr="411" mi="0" ci="7" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="745"/><counter type="BRANCH" missed="13" covered="85"/><counter type="LINE" missed="10" covered="195"/><counter type="COMPLEXITY" missed="12" covered="62"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RMQStaticLinearAbstract.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="2"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="12" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="14" mb="0" cb="2"/><line nr="63" mi="0" ci="11" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="2"/><line nr="70" mi="0" ci="9" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="20" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="1" cb="1"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="14" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="8" ci="0" mb="2" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="14" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="14" mb="0" cb="2"/><line nr="160" mi="0" ci="24" mb="0" cb="2"/><line nr="161" mi="0" ci="14" mb="0" cb="2"/><line nr="162" mi="0" ci="15" mb="0" cb="2"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="164" mi="0" ci="17" mb="0" cb="2"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="2"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="2"/><line nr="207" mi="0" ci="18" mb="0" cb="2"/><line nr="208" mi="0" ci="16" mb="0" cb="2"/><line nr="209" mi="0" ci="10" mb="0" cb="2"/><line nr="211" mi="0" ci="5" mb="0" cb="2"/><line nr="212" mi="0" ci="10" mb="0" cb="0"/><line nr="213" mi="0" ci="9" mb="0" cb="0"/><line nr="214" mi="0" ci="10" mb="0" cb="2"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="1" cb="1"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="11" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="4" ci="0" mb="0" cb="0"/><line nr="237" mi="9" ci="0" mb="0" cb="0"/><line nr="238" mi="8" ci="0" mb="0" cb="0"/><line nr="239" mi="11" ci="0" mb="0" cb="0"/><line nr="240" mi="9" ci="0" mb="0" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="2" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="16" mb="0" cb="0"/><line nr="266" mi="0" ci="16" mb="0" cb="0"/><line nr="270" mi="0" ci="16" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="16" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="19" mb="0" cb="0"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="283" mi="0" ci="10" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="4"/><line nr="301" mi="0" ci="6" mb="0" cb="0"/><line nr="302" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="145" covered="830"/><counter type="BRANCH" missed="8" covered="60"/><counter type="LINE" missed="27" covered="124"/><counter type="COMPLEXITY" missed="7" covered="50"/><counter type="METHOD" missed="2" covered="21"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="BinarySearchTreeAbstract.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SplayTree.java"><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="7" ci="1" mb="2" cb="0"/><line nr="96" mi="7" ci="1" mb="2" cb="0"/><line nr="97" mi="7" ci="1" mb="2" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="11" mb="0" cb="2"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="9" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="4"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="7" ci="1" mb="2" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="2"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="2"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="7" ci="1" mb="2" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="1" cb="1"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="169" mi="2" ci="11" mb="1" cb="1"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="12" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="12" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="13" mb="0" cb="2"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="13" mb="0" cb="2"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="13" mb="0" cb="2"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="13" mb="0" cb="2"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="13" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="13" mb="0" cb="2"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="2"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="13" mb="0" cb="2"/><line nr="238" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="13" mb="0" cb="2"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="2"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="2"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="2"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="2"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="2"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="8" ci="1" mb="2" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="2"/><line nr="289" mi="13" ci="1" mb="2" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="0" cb="2"/><line nr="293" mi="13" ci="1" mb="2" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="7" ci="1" mb="2" cb="0"/><line nr="306" mi="7" ci="1" mb="2" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="8" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="1" cb="1"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="7" ci="1" mb="2" cb="0"/><line nr="322" mi="0" ci="7" mb="1" cb="1"/><line nr="323" mi="0" ci="9" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="2" mb="1" cb="1"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="344" mi="0" ci="7" mb="0" cb="0"/><line nr="345" mi="7" ci="1" mb="2" cb="0"/><line nr="347" mi="0" ci="7" mb="0" cb="2"/><line nr="348" mi="0" ci="9" mb="0" cb="0"/><line nr="349" mi="0" ci="5" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="2"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="372" mi="3" ci="0" mb="0" cb="0"/><line nr="377" mi="0" ci="1" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="5" mb="0" cb="4"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="3" mb="0" cb="2"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="2"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="2"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="8" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="413" mi="0" ci="3" mb="0" cb="2"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="2"/><line nr="417" mi="0" ci="5" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="7" ci="1" mb="2" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="2"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="2"/><line nr="432" mi="0" ci="4" mb="0" cb="2"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="1" mb="0" cb="0"/><line nr="450" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="1" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="3" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="467" mi="1" ci="0" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="3" mb="0" cb="2"/><line nr="487" mi="0" ci="17" mb="0" cb="2"/><line nr="489" mi="7" ci="1" mb="2" cb="0"/><line nr="490" mi="0" ci="16" mb="0" cb="2"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="1" mb="0" cb="0"/><line nr="499" mi="0" ci="3" mb="1" cb="1"/><line nr="500" mi="5" ci="0" mb="0" cb="0"/><line nr="501" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="893"/><counter type="BRANCH" missed="34" covered="102"/><counter type="LINE" missed="10" covered="214"/><counter type="COMPLEXITY" missed="24" covered="85"/><counter type="METHOD" missed="4" covered="37"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="UnionFindArray.java"><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="1" cb="1"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="2" cb="2"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="12" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="2"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="6" ci="1" mb="2" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="6" ci="1" mb="2" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="193"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="2" covered="52"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeapReference.java"/><sourcefile name="HeapReferenceable.java"><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="10" mb="1" cb="1"/><line nr="153" mi="0" ci="5" mb="0" cb="2"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="1" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="1" cb="1"/><line nr="158" mi="0" ci="6" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="6" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="2"/><line nr="251" mi="0" ci="9" mb="2" cb="2"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="7" ci="0" mb="0" cb="0"/><line nr="259" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="1" cb="1"/><line nr="274" mi="6" ci="0" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="1" cb="1"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="8" mb="1" cb="1"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="6" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="140"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="9" covered="37"/><counter type="COMPLEXITY" missed="10" covered="18"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="UnionFindValue.java"><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="1" cb="1"/><line nr="124" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="RMQStatic.java"><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="0" ci="9" mb="4" cb="1"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="1" cb="1"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="38"/><counter type="BRANCH" missed="6" covered="3"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="RMQStaticPlusMinusOne.java"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="1" cb="1"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="15" mb="0" cb="2"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="2"/><line nr="98" mi="0" ci="21" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="142"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="RMQStaticSimpleLookupTable.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="1" cb="1"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="1" cb="1"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="18" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="2"/><line nr="76" mi="0" ci="22" mb="0" cb="2"/><line nr="77" mi="0" ci="13" mb="0" cb="2"/><line nr="78" mi="0" ci="14" mb="0" cb="2"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="15" mb="0" cb="2"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="13" mb="0" cb="2"/><line nr="111" mi="0" ci="22" mb="0" cb="2"/><line nr="112" mi="0" ci="13" mb="0" cb="2"/><line nr="113" mi="0" ci="14" mb="0" cb="2"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="115" mi="0" ci="15" mb="0" cb="2"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="9" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="9" mb="0" cb="2"/><line nr="146" mi="0" ci="21" mb="0" cb="2"/><line nr="147" mi="0" ci="9" mb="0" cb="2"/><line nr="148" mi="0" ci="9" mb="0" cb="2"/><line nr="149" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="15" mb="0" cb="2"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="400"/><counter type="BRANCH" missed="2" covered="42"/><counter type="LINE" missed="5" covered="53"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="RMQStaticComparator.java"><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="12" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="13" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="11" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="14"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DynamicTreeSplayIntExtended.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="16" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="17" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="9" ci="1" mb="2" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="17" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="17" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="17" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="2" ci="15" mb="1" cb="1"/><line nr="137" mi="0" ci="5" mb="1" cb="1"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="244"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="6" covered="43"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="RMQStaticPowerOf2Table.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="1" cb="1"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="2"/><line nr="62" mi="0" ci="18" mb="0" cb="2"/><line nr="64" mi="0" ci="9" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="2"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="15" mb="0" cb="0"/><line nr="70" mi="0" ci="14" mb="0" cb="2"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="2"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="25" ci="0" mb="2" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="12" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="13" mb="0" cb="2"/><line nr="114" mi="0" ci="19" mb="0" cb="2"/><line nr="116" mi="0" ci="9" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="2"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="15" mb="0" cb="0"/><line nr="122" mi="0" ci="14" mb="0" cb="2"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="2"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="25" ci="0" mb="2" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="12" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="13" mb="0" cb="2"/><line nr="166" mi="0" ci="19" mb="0" cb="2"/><line nr="168" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="2"/><line nr="172" mi="0" ci="9" mb="0" cb="0"/><line nr="173" mi="0" ci="15" mb="0" cb="0"/><line nr="174" mi="0" ci="14" mb="0" cb="2"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="2"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="25" ci="0" mb="2" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="119" covered="540"/><counter type="BRANCH" missed="8" covered="46"/><counter type="LINE" missed="17" covered="76"/><counter type="COMPLEXITY" missed="8" covered="30"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="RedBlackTreeExtended.java"><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="9" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="2"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="17" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="9" ci="1" mb="2" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="17" mb="0" cb="2"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="10" ci="1" mb="2" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="8" ci="1" mb="2" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="17" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="17" mb="0" cb="2"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="17" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="17" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="17" mb="0" cb="2"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="17" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="17" ci="0" mb="2" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="17" ci="0" mb="2" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="318"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="11" covered="57"/><counter type="COMPLEXITY" missed="9" covered="24"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DynamicTree.java"><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="RedBlackTree.java"><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="1" cb="1"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="1" cb="1"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="8" ci="1" mb="2" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="1" cb="1"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="1" cb="1"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="6" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="7" ci="1" mb="2" cb="0"/><line nr="219" mi="7" ci="1" mb="2" cb="0"/><line nr="220" mi="7" ci="1" mb="2" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="12" mb="0" cb="2"/><line nr="252" mi="0" ci="5" mb="0" cb="4"/><line nr="255" mi="0" ci="4" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="2"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="20" ci="1" mb="8" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="2"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="7" ci="1" mb="2" cb="0"/><line nr="285" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="2"/><line nr="298" mi="0" ci="4" mb="0" cb="2"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="8" ci="1" mb="2" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="2"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="6" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="10" mb="0" cb="6"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="4"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="10" ci="1" mb="4" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="2"/><line nr="328" mi="10" ci="1" mb="4" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="4"/><line nr="335" mi="18" ci="1" mb="6" cb="0"/><line nr="336" mi="0" ci="11" mb="0" cb="2"/><line nr="337" mi="9" ci="1" mb="2" cb="0"/><line nr="338" mi="10" ci="1" mb="4" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="8" mb="0" cb="2"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="1" cb="1"/><line nr="353" mi="5" ci="0" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="2"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="2"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="7" ci="1" mb="2" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="2"/><line nr="379" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="6" mb="0" cb="4"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="4"/><line nr="398" mi="0" ci="8" mb="0" cb="2"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="3" mb="0" cb="0"/><line nr="404" mi="0" ci="3" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="2"/><line nr="410" mi="0" ci="3" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="1" mb="0" cb="0"/><line nr="416" mi="0" ci="3" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="0"/><line nr="420" mi="0" ci="2" mb="0" cb="2"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="423" mi="0" ci="8" mb="0" cb="2"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="2"/><line nr="430" mi="0" ci="4" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="1" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="12" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="2"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="2"/><line nr="448" mi="0" ci="4" mb="0" cb="2"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="8" ci="1" mb="2" cb="0"/><line nr="452" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="12" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="2" mb="0" cb="2"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="2" mb="0" cb="2"/><line nr="472" mi="0" ci="4" mb="0" cb="2"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="475" mi="8" ci="1" mb="2" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="3" mb="0" cb="0"/><line nr="485" mi="0" ci="4" mb="0" cb="2"/><line nr="486" mi="0" ci="4" mb="0" cb="0"/><line nr="487" mi="0" ci="4" mb="1" cb="1"/><line nr="488" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="4" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="8" mb="0" cb="0"/><line nr="501" mi="0" ci="8" mb="0" cb="0"/><line nr="506" mi="0" ci="8" mb="0" cb="0"/><line nr="511" mi="0" ci="8" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="521" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="541" mi="0" ci="3" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="6" ci="0" mb="0" cb="0"/><line nr="557" mi="3" ci="0" mb="0" cb="0"/><line nr="562" mi="3" ci="0" mb="0" cb="0"/><line nr="563" mi="1" ci="0" mb="0" cb="0"/><line nr="570" mi="0" ci="5" mb="0" cb="0"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="575" mi="0" ci="1" mb="0" cb="0"/><line nr="577" mi="0" ci="1" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="199" covered="800"/><counter type="BRANCH" missed="52" covered="102"/><counter type="LINE" missed="16" covered="241"/><counter type="COMPLEXITY" missed="36" covered="84"/><counter type="METHOD" missed="7" covered="36"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="HeapBinomial.java"><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="16" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="110" mi="0" ci="11" mb="0" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="4"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="1" cb="1"/><line nr="120" mi="0" ci="5" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="6" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="2"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="2"/><line nr="142" mi="0" ci="7" mb="0" cb="2"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="1" cb="1"/><line nr="160" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="1" cb="1"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="7" mb="0" cb="2"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="9" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="7" ci="1" mb="2" cb="0"/><line nr="221" mi="0" ci="3" mb="1" cb="1"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="2"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="2"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="7" ci="1" mb="2" cb="0"/><line nr="240" mi="0" ci="3" mb="1" cb="1"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="8" mb="0" cb="2"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="9" mb="0" cb="2"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="7" mb="0" cb="2"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="8" mb="0" cb="2"/><line nr="267" mi="0" ci="9" mb="0" cb="2"/><line nr="268" mi="0" ci="9" mb="0" cb="2"/><line nr="270" mi="0" ci="2" mb="0" cb="2"/><line nr="271" mi="0" ci="6" mb="0" cb="0"/><line nr="273" mi="0" ci="8" mb="0" cb="8"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="12" mb="1" cb="3"/><line nr="277" mi="0" ci="6" mb="0" cb="2"/><line nr="278" mi="0" ci="2" mb="0" cb="2"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="7" mb="0" cb="2"/><line nr="288" mi="0" ci="9" mb="0" cb="2"/><line nr="289" mi="0" ci="9" mb="0" cb="2"/><line nr="291" mi="0" ci="2" mb="0" cb="2"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="8"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="12" mb="1" cb="3"/><line nr="298" mi="0" ci="6" mb="0" cb="2"/><line nr="299" mi="0" ci="2" mb="0" cb="2"/><line nr="300" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="2"/><line nr="309" mi="0" ci="6" mb="0" cb="2"/><line nr="310" mi="0" ci="8" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="327" mi="0" ci="11" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="2"/><line nr="342" mi="0" ci="8" mb="0" cb="2"/><line nr="343" mi="0" ci="14" mb="0" cb="6"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="7" mb="0" cb="2"/><line nr="347" mi="0" ci="16" mb="0" cb="6"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="1" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="3" ci="0" mb="0" cb="0"/><line nr="383" mi="3" ci="0" mb="0" cb="0"/><line nr="384" mi="1" ci="0" mb="0" cb="0"/><line nr="388" mi="6" ci="0" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="7" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="2"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="7" mb="0" cb="2"/><line nr="408" mi="0" ci="8" mb="0" cb="0"/><line nr="409" mi="0" ci="6" mb="0" cb="0"/><line nr="410" mi="0" ci="2" mb="0" cb="0"/><line nr="417" mi="0" ci="10" mb="0" cb="4"/><counter type="INSTRUCTION" missed="43" covered="841"/><counter type="BRANCH" missed="11" covered="137"/><counter type="LINE" missed="9" covered="195"/><counter type="COMPLEXITY" missed="13" covered="86"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="SubtreeMergeFindMinImpl.java"><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="14" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="13" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="17" mb="0" cb="2"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="20" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="2" cb="2"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="10" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="2"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="2"/><line nr="153" mi="0" ci="10" mb="0" cb="2"/><line nr="154" mi="0" ci="10" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="2"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="2"/><line nr="163" mi="0" ci="10" mb="0" cb="2"/><line nr="164" mi="0" ci="10" mb="0" cb="2"/><line nr="165" mi="0" ci="25" mb="0" cb="2"/><line nr="166" mi="0" ci="2" mb="0" cb="2"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="7" ci="1" mb="2" cb="0"/><line nr="187" mi="0" ci="15" mb="0" cb="4"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="2"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="12" mb="0" cb="2"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="2"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="2"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="2"/><line nr="241" mi="0" ci="10" mb="0" cb="0"/><line nr="242" mi="0" ci="11" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="11" ci="1" mb="2" cb="0"/><line nr="252" mi="0" ci="10" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="2"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="0" ci="11" mb="0" cb="0"/><line nr="257" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="2"/><line nr="264" mi="0" ci="10" mb="0" cb="0"/><line nr="267" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="2"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="2"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="9" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="11" mb="0" cb="2"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="2"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="11" mb="0" cb="2"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="8" mb="0" cb="2"/><line nr="313" mi="0" ci="14" mb="0" cb="2"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="2"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="10" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="10" mb="0" cb="2"/><line nr="350" mi="0" ci="6" mb="0" cb="0"/><line nr="351" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="1" cb="1"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="9" mb="0" cb="2"/><line nr="407" mi="0" ci="5" mb="0" cb="2"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="2"/><line nr="413" mi="0" ci="3" mb="0" cb="0"/><line nr="414" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="9" mb="0" cb="0"/><line nr="426" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="0" ci="3" mb="0" cb="0"/><line nr="442" mi="0" ci="1" mb="0" cb="0"/><line nr="446" mi="4" ci="0" mb="0" cb="0"/><line nr="454" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="462" mi="8" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="964"/><counter type="BRANCH" missed="8" covered="94"/><counter type="LINE" missed="4" covered="207"/><counter type="COMPLEXITY" missed="8" covered="81"/><counter type="METHOD" missed="2" covered="36"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="Heap.java"><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="1" cb="1"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="2" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="21"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="9" covered="5"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="HeapPairing.java"><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="7" ci="1" mb="2" cb="0"/><line nr="97" mi="7" ci="1" mb="2" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="7" ci="1" mb="2" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="7" ci="1" mb="2" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="7" ci="1" mb="2" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="13" mb="0" cb="2"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="171" mi="7" ci="1" mb="2" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="2"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="2"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="1" cb="1"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="8" ci="0" mb="4" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="2"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="2"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="2"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="2"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="2"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="1" cb="1"/><line nr="279" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="1" cb="1"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="5" ci="0" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="2"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="1" cb="1"/><line nr="306" mi="10" ci="0" mb="0" cb="0"/><line nr="307" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="2" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="2" cb="0"/><line nr="315" mi="3" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="317" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="3" ci="0" mb="0" cb="0"/><line nr="321" mi="3" ci="0" mb="0" cb="0"/><line nr="322" mi="3" ci="0" mb="0" cb="0"/><line nr="323" mi="3" ci="0" mb="0" cb="0"/><line nr="324" mi="5" ci="0" mb="0" cb="0"/><line nr="326" mi="3" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="5" ci="0" mb="0" cb="0"/><line nr="332" mi="6" ci="0" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="2" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="2" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="5" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="1" ci="0" mb="0" cb="0"/><line nr="348" mi="0" ci="10" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="2" mb="0" cb="2"/><line nr="351" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="2"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="0" ci="3" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="6" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="2"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="5" mb="0" cb="0"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="6" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="399" mi="8" ci="0" mb="2" cb="0"/><line nr="400" mi="8" ci="0" mb="2" cb="0"/><line nr="401" mi="8" ci="0" mb="2" cb="0"/><line nr="402" mi="8" ci="0" mb="2" cb="0"/><line nr="405" mi="6" ci="0" mb="2" cb="0"/><line nr="406" mi="2" ci="0" mb="0" cb="0"/><line nr="407" mi="2" ci="0" mb="0" cb="0"/><line nr="408" mi="2" ci="0" mb="0" cb="0"/><line nr="411" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="2" ci="0" mb="0" cb="0"/><line nr="417" mi="7" ci="1" mb="2" cb="0"/><line nr="418" mi="7" ci="1" mb="2" cb="0"/><line nr="419" mi="7" ci="1" mb="2" cb="0"/><line nr="420" mi="7" ci="1" mb="2" cb="0"/><line nr="423" mi="0" ci="8" mb="0" cb="2"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="426" mi="0" ci="2" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="7" ci="0" mb="0" cb="0"/><line nr="441" mi="0" ci="2" mb="0" cb="0"/><line nr="442" mi="0" ci="3" mb="0" cb="0"/><line nr="443" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="1" ci="0" mb="0" cb="0"/><line nr="465" mi="5" ci="0" mb="0" cb="0"/><line nr="472" mi="3" ci="0" mb="0" cb="0"/><line nr="473" mi="1" ci="0" mb="0" cb="0"/><line nr="477" mi="3" ci="0" mb="0" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="483" mi="1" ci="0" mb="0" cb="0"/><line nr="487" mi="2" ci="0" mb="0" cb="0"/><line nr="488" mi="3" ci="0" mb="0" cb="0"/><line nr="489" mi="1" ci="0" mb="0" cb="0"/><line nr="496" mi="3" ci="0" mb="0" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="501" mi="5" ci="0" mb="0" cb="0"/><line nr="508" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="1" ci="0" mb="0" cb="0"/><line nr="513" mi="4" ci="0" mb="0" cb="0"/><line nr="518" mi="4" ci="0" mb="0" cb="0"/><line nr="519" mi="1" ci="0" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="1" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="537" mi="0" ci="1" mb="0" cb="0"/><line nr="541" mi="4" ci="0" mb="0" cb="0"/><line nr="546" mi="0" ci="1" mb="0" cb="0"/><line nr="551" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="3" ci="6" mb="3" cb="1"/><line nr="553" mi="9" ci="1" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="559" mi="0" ci="3" mb="0" cb="2"/><line nr="560" mi="0" ci="5" mb="0" cb="0"/><line nr="561" mi="0" ci="3" mb="1" cb="1"/><line nr="562" mi="5" ci="0" mb="0" cb="0"/><line nr="564" mi="0" ci="5" mb="0" cb="0"/><line nr="570" mi="0" ci="5" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="5" mb="0" cb="2"/><line nr="580" mi="0" ci="3" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="584" mi="0" ci="3" mb="1" cb="1"/><line nr="587" mi="0" ci="10" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="589" mi="0" ci="2" mb="0" cb="2"/><line nr="590" mi="0" ci="2" mb="0" cb="0"/><line nr="591" mi="0" ci="1" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="595" mi="0" ci="2" mb="0" cb="2"/><line nr="596" mi="0" ci="3" mb="0" cb="0"/><line nr="597" mi="0" ci="2" mb="0" cb="0"/><line nr="598" mi="0" ci="1" mb="0" cb="0"/><line nr="600" mi="0" ci="4" mb="0" cb="0"/><line nr="601" mi="0" ci="3" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><line nr="603" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="3" mb="0" cb="0"/><line nr="605" mi="0" ci="5" mb="0" cb="0"/><line nr="607" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="2" mb="0" cb="0"/><line nr="609" mi="0" ci="1" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="613" mi="0" ci="6" mb="0" cb="0"/><line nr="614" mi="0" ci="3" mb="0" cb="0"/><line nr="616" mi="0" ci="2" mb="0" cb="0"/><line nr="617" mi="0" ci="4" mb="0" cb="2"/><line nr="618" mi="0" ci="3" mb="0" cb="0"/><line nr="619" mi="0" ci="1" mb="0" cb="0"/><line nr="621" mi="0" ci="4" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="623" mi="0" ci="5" mb="0" cb="0"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="10" ci="0" mb="0" cb="0"/><line nr="630" mi="2" ci="0" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="2" cb="0"/><line nr="632" mi="2" ci="0" mb="0" cb="0"/><line nr="633" mi="1" ci="0" mb="0" cb="0"/><line nr="636" mi="4" ci="0" mb="0" cb="0"/><line nr="637" mi="2" ci="0" mb="2" cb="0"/><line nr="638" mi="3" ci="0" mb="0" cb="0"/><line nr="639" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="1" ci="0" mb="0" cb="0"/><line nr="642" mi="4" ci="0" mb="0" cb="0"/><line nr="643" mi="3" ci="0" mb="0" cb="0"/><line nr="644" mi="3" ci="0" mb="0" cb="0"/><line nr="645" mi="3" ci="0" mb="0" cb="0"/><line nr="646" mi="3" ci="0" mb="0" cb="0"/><line nr="647" mi="5" ci="0" mb="0" cb="0"/><line nr="649" mi="3" ci="0" mb="0" cb="0"/><line nr="650" mi="2" ci="0" mb="0" cb="0"/><line nr="651" mi="1" ci="0" mb="0" cb="0"/><line nr="652" mi="5" ci="0" mb="0" cb="0"/><line nr="655" mi="6" ci="0" mb="0" cb="0"/><line nr="656" mi="3" ci="0" mb="0" cb="0"/><line nr="658" mi="2" ci="0" mb="0" cb="0"/><line nr="659" mi="4" ci="0" mb="2" cb="0"/><line nr="660" mi="3" ci="0" mb="0" cb="0"/><line nr="661" mi="1" ci="0" mb="0" cb="0"/><line nr="663" mi="4" ci="0" mb="0" cb="0"/><line nr="664" mi="3" ci="0" mb="0" cb="0"/><line nr="665" mi="5" ci="0" mb="0" cb="0"/><line nr="666" mi="1" ci="0" mb="0" cb="0"/><line nr="668" mi="0" ci="1" mb="0" cb="0"/><line nr="672" mi="0" ci="3" mb="0" cb="0"/><line nr="673" mi="0" ci="3" mb="0" cb="0"/><line nr="674" mi="0" ci="6" mb="0" cb="0"/><line nr="675" mi="0" ci="3" mb="0" cb="0"/><line nr="676" mi="0" ci="3" mb="0" cb="0"/><line nr="677" mi="0" ci="1" mb="0" cb="0"/><line nr="681" mi="7" ci="1" mb="2" cb="0"/><line nr="682" mi="7" ci="1" mb="2" cb="0"/><line nr="683" mi="7" ci="1" mb="2" cb="0"/><line nr="684" mi="7" ci="1" mb="2" cb="0"/><line nr="687" mi="0" ci="6" mb="0" cb="2"/><line nr="688" mi="0" ci="2" mb="0" cb="0"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="2" mb="0" cb="0"/><line nr="693" mi="0" ci="3" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="699" mi="8" ci="0" mb="2" cb="0"/><line nr="700" mi="8" ci="0" mb="2" cb="0"/><line nr="701" mi="8" ci="0" mb="2" cb="0"/><line nr="702" mi="8" ci="0" mb="2" cb="0"/><line nr="705" mi="8" ci="0" mb="2" cb="0"/><line nr="706" mi="2" ci="0" mb="0" cb="0"/><line nr="707" mi="2" ci="0" mb="0" cb="0"/><line nr="708" mi="2" ci="0" mb="0" cb="0"/><line nr="711" mi="3" ci="0" mb="0" cb="0"/><line nr="712" mi="2" ci="0" mb="0" cb="0"/><line nr="717" mi="8" ci="0" mb="0" cb="0"/><line nr="723" mi="0" ci="2" mb="0" cb="0"/><line nr="724" mi="0" ci="3" mb="0" cb="0"/><line nr="725" mi="0" ci="1" mb="0" cb="0"/><line nr="729" mi="0" ci="4" mb="0" cb="0"/><line nr="733" mi="0" ci="1" mb="0" cb="0"/><line nr="740" mi="0" ci="3" mb="0" cb="0"/><line nr="741" mi="0" ci="1" mb="0" cb="0"/><line nr="745" mi="0" ci="5" mb="0" cb="0"/><line nr="752" mi="0" ci="3" mb="0" cb="0"/><line nr="753" mi="0" ci="1" mb="0" cb="0"/><line nr="757" mi="0" ci="3" mb="0" cb="0"/><line nr="762" mi="0" ci="3" mb="0" cb="0"/><line nr="763" mi="0" ci="1" mb="0" cb="0"/><line nr="767" mi="0" ci="2" mb="0" cb="0"/><line nr="768" mi="0" ci="3" mb="0" cb="0"/><line nr="769" mi="0" ci="1" mb="0" cb="0"/><line nr="776" mi="0" ci="3" mb="0" cb="0"/><line nr="777" mi="0" ci="1" mb="0" cb="0"/><line nr="781" mi="0" ci="5" mb="0" cb="0"/><line nr="788" mi="0" ci="3" mb="0" cb="0"/><line nr="789" mi="0" ci="1" mb="0" cb="0"/><line nr="793" mi="0" ci="4" mb="0" cb="0"/><line nr="798" mi="0" ci="4" mb="0" cb="0"/><line nr="799" mi="0" ci="1" mb="0" cb="0"/><line nr="806" mi="3" ci="0" mb="0" cb="0"/><line nr="807" mi="1" ci="0" mb="0" cb="0"/><line nr="811" mi="5" ci="0" mb="0" cb="0"/><line nr="816" mi="3" ci="0" mb="0" cb="0"/><line nr="817" mi="1" ci="0" mb="0" cb="0"/><line nr="821" mi="4" ci="0" mb="0" cb="0"/><line nr="826" mi="0" ci="1" mb="0" cb="0"/><line nr="831" mi="0" ci="3" mb="0" cb="0"/><line nr="832" mi="0" ci="9" mb="1" cb="3"/><line nr="833" mi="9" ci="1" mb="0" cb="0"/><line nr="834" mi="0" ci="1" mb="0" cb="0"/><line nr="839" mi="0" ci="3" mb="0" cb="2"/><line nr="840" mi="0" ci="5" mb="0" cb="0"/><line nr="841" mi="0" ci="3" mb="1" cb="1"/><line nr="842" mi="0" ci="5" mb="0" cb="0"/><line nr="844" mi="5" ci="0" mb="0" cb="0"/><line nr="850" mi="0" ci="5" mb="0" cb="0"/><line nr="851" mi="0" ci="3" mb="0" cb="0"/><line nr="852" mi="0" ci="2" mb="0" cb="0"/><line nr="859" mi="0" ci="5" mb="0" cb="2"/><line nr="860" mi="0" ci="3" mb="0" cb="0"/><line nr="861" mi="0" ci="1" mb="0" cb="0"/><line nr="864" mi="0" ci="3" mb="0" cb="2"/><line nr="867" mi="0" ci="10" mb="0" cb="0"/><line nr="868" mi="0" ci="2" mb="0" cb="0"/><line nr="869" mi="0" ci="2" mb="0" cb="2"/><line nr="870" mi="0" ci="2" mb="0" cb="0"/><line nr="871" mi="0" ci="1" mb="0" cb="0"/><line nr="874" mi="0" ci="4" mb="0" cb="0"/><line nr="875" mi="0" ci="2" mb="0" cb="2"/><line nr="876" mi="0" ci="3" mb="0" cb="0"/><line nr="877" mi="0" ci="2" mb="0" cb="0"/><line nr="878" mi="0" ci="1" mb="0" cb="0"/><line nr="880" mi="0" ci="4" mb="0" cb="0"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="882" mi="0" ci="3" mb="0" cb="0"/><line nr="883" mi="0" ci="3" mb="0" cb="0"/><line nr="884" mi="0" ci="3" mb="0" cb="0"/><line nr="885" mi="0" ci="5" mb="0" cb="0"/><line nr="887" mi="0" ci="3" mb="0" cb="0"/><line nr="888" mi="0" ci="2" mb="0" cb="0"/><line nr="889" mi="0" ci="1" mb="0" cb="0"/><line nr="890" mi="0" ci="5" mb="0" cb="0"/><line nr="893" mi="0" ci="6" mb="0" cb="0"/><line nr="894" mi="0" ci="3" mb="0" cb="0"/><line nr="896" mi="0" ci="2" mb="0" cb="0"/><line nr="897" mi="0" ci="4" mb="0" cb="2"/><line nr="898" mi="0" ci="3" mb="0" cb="0"/><line nr="899" mi="0" ci="1" mb="0" cb="0"/><line nr="901" mi="0" ci="4" mb="0" cb="0"/><line nr="902" mi="0" ci="3" mb="0" cb="0"/><line nr="903" mi="0" ci="5" mb="0" cb="0"/><line nr="904" mi="0" ci="1" mb="0" cb="0"/><line nr="905" mi="0" ci="1" mb="0" cb="0"/><line nr="909" mi="0" ci="10" mb="0" cb="0"/><line nr="910" mi="0" ci="2" mb="0" cb="0"/><line nr="911" mi="0" ci="2" mb="0" cb="2"/><line nr="912" mi="0" ci="2" mb="0" cb="0"/><line nr="913" mi="0" ci="1" mb="0" cb="0"/><line nr="916" mi="0" ci="4" mb="0" cb="0"/><line nr="917" mi="0" ci="2" mb="0" cb="2"/><line nr="918" mi="0" ci="3" mb="0" cb="0"/><line nr="919" mi="0" ci="2" mb="0" cb="0"/><line nr="920" mi="0" ci="1" mb="0" cb="0"/><line nr="922" mi="0" ci="4" mb="0" cb="0"/><line nr="923" mi="0" ci="3" mb="0" cb="0"/><line nr="924" mi="0" ci="3" mb="0" cb="0"/><line nr="925" mi="0" ci="3" mb="0" cb="0"/><line nr="926" mi="0" ci="3" mb="0" cb="0"/><line nr="927" mi="0" ci="5" mb="0" cb="0"/><line nr="929" mi="0" ci="3" mb="0" cb="0"/><line nr="930" mi="0" ci="2" mb="0" cb="0"/><line nr="931" mi="0" ci="1" mb="0" cb="0"/><line nr="932" mi="0" ci="5" mb="0" cb="0"/><line nr="935" mi="0" ci="6" mb="0" cb="0"/><line nr="936" mi="0" ci="3" mb="0" cb="0"/><line nr="938" mi="0" ci="2" mb="0" cb="0"/><line nr="939" mi="0" ci="4" mb="0" cb="2"/><line nr="940" mi="0" ci="3" mb="0" cb="0"/><line nr="941" mi="0" ci="1" mb="0" cb="0"/><line nr="943" mi="0" ci="4" mb="0" cb="0"/><line nr="944" mi="0" ci="3" mb="0" cb="0"/><line nr="945" mi="0" ci="5" mb="0" cb="0"/><line nr="946" mi="0" ci="1" mb="0" cb="0"/><line nr="948" mi="0" ci="1" mb="0" cb="0"/><line nr="952" mi="0" ci="3" mb="0" cb="0"/><line nr="953" mi="0" ci="3" mb="0" cb="0"/><line nr="954" mi="0" ci="6" mb="0" cb="0"/><line nr="955" mi="0" ci="3" mb="0" cb="0"/><line nr="956" mi="0" ci="3" mb="0" cb="0"/><line nr="957" mi="0" ci="1" mb="0" cb="0"/><line nr="961" mi="7" ci="1" mb="2" cb="0"/><line nr="962" mi="7" ci="1" mb="2" cb="0"/><line nr="963" mi="7" ci="1" mb="2" cb="0"/><line nr="964" mi="7" ci="1" mb="2" cb="0"/><line nr="967" mi="0" ci="6" mb="0" cb="2"/><line nr="968" mi="0" ci="2" mb="0" cb="0"/><line nr="969" mi="0" ci="2" mb="0" cb="0"/><line nr="970" mi="0" ci="2" mb="0" cb="0"/><line nr="973" mi="0" ci="3" mb="0" cb="0"/><line nr="974" mi="0" ci="2" mb="0" cb="0"/><line nr="979" mi="7" ci="1" mb="2" cb="0"/><line nr="980" mi="7" ci="1" mb="2" cb="0"/><line nr="981" mi="7" ci="1" mb="2" cb="0"/><line nr="982" mi="7" ci="1" mb="2" cb="0"/><line nr="985" mi="0" ci="8" mb="0" cb="2"/><line nr="986" mi="0" ci="2" mb="0" cb="0"/><line nr="987" mi="0" ci="2" mb="0" cb="0"/><line nr="988" mi="0" ci="2" mb="0" cb="0"/><line nr="991" mi="0" ci="3" mb="0" cb="0"/><line nr="992" mi="0" ci="2" mb="0" cb="0"/><line nr="997" mi="8" ci="0" mb="0" cb="0"/><line nr="1003" mi="0" ci="2" mb="0" cb="0"/><line nr="1004" mi="0" ci="3" mb="0" cb="0"/><line nr="1005" mi="0" ci="1" mb="0" cb="0"/><line nr="1009" mi="0" ci="4" mb="0" cb="0"/><line nr="1013" mi="0" ci="1" mb="0" cb="0"/><line nr="1020" mi="3" ci="0" mb="0" cb="0"/><line nr="1021" mi="1" ci="0" mb="0" cb="0"/><line nr="1025" mi="5" ci="0" mb="0" cb="0"/><line nr="1032" mi="3" ci="0" mb="0" cb="0"/><line nr="1033" mi="1" ci="0" mb="0" cb="0"/><line nr="1037" mi="3" ci="0" mb="0" cb="0"/><line nr="1042" mi="3" ci="0" mb="0" cb="0"/><line nr="1043" mi="1" ci="0" mb="0" cb="0"/><line nr="1047" mi="2" ci="0" mb="0" cb="0"/><line nr="1048" mi="3" ci="0" mb="0" cb="0"/><line nr="1049" mi="1" ci="0" mb="0" cb="0"/><line nr="1056" mi="0" ci="3" mb="0" cb="0"/><line nr="1057" mi="0" ci="1" mb="0" cb="0"/><line nr="1061" mi="0" ci="5" mb="0" cb="0"/><line nr="1068" mi="0" ci="3" mb="0" cb="0"/><line nr="1069" mi="0" ci="1" mb="0" cb="0"/><line nr="1073" mi="0" ci="4" mb="0" cb="0"/><line nr="1078" mi="0" ci="4" mb="0" cb="0"/><line nr="1079" mi="0" ci="1" mb="0" cb="0"/><line nr="1086" mi="0" ci="3" mb="0" cb="0"/><line nr="1087" mi="0" ci="1" mb="0" cb="0"/><line nr="1091" mi="0" ci="5" mb="0" cb="0"/><line nr="1096" mi="0" ci="3" mb="0" cb="0"/><line nr="1097" mi="0" ci="1" mb="0" cb="0"/><line nr="1101" mi="4" ci="0" mb="0" cb="0"/><line nr="1108" mi="3" ci="0" mb="2" cb="0"/><line nr="1109" mi="1" ci="0" mb="0" cb="0"/><line nr="1111" mi="4" ci="0" mb="0" cb="0"/><line nr="1112" mi="4" ci="0" mb="0" cb="0"/><line nr="1114" mi="7" ci="0" mb="2" cb="0"/><line nr="1115" mi="7" ci="0" mb="0" cb="0"/><line nr="1117" mi="4" ci="0" mb="0" cb="0"/><line nr="1118" mi="3" ci="0" mb="2" cb="0"/><line nr="1119" mi="3" ci="0" mb="2" cb="0"/><line nr="1120" mi="4" ci="0" mb="0" cb="0"/><line nr="1121" mi="1" ci="0" mb="0" cb="0"/><line nr="1123" mi="4" ci="0" mb="0" cb="0"/><line nr="1124" mi="5" ci="0" mb="2" cb="0"/><line nr="1125" mi="4" ci="0" mb="0" cb="0"/><line nr="1126" mi="3" ci="0" mb="2" cb="0"/><line nr="1127" mi="4" ci="0" mb="0" cb="0"/><line nr="1128" mi="1" ci="0" mb="0" cb="0"/><line nr="1130" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="684" covered="1118"/><counter type="BRANCH" missed="103" covered="97"/><counter type="LINE" missed="148" covered="383"/><counter type="COMPLEXITY" missed="90" covered="116"/><counter type="METHOD" missed="34" covered="72"/><counter type="CLASS" missed="8" covered="20"/></sourcefile><sourcefile name="DynamicTreeSplayExtended.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="16" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="17" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="9" ci="1" mb="2" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="17" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="17" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="17" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="2" ci="15" mb="1" cb="1"/><line nr="137" mi="0" ci="5" mb="1" cb="1"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="244"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="6" covered="43"/><counter type="COMPLEXITY" missed="5" covered="19"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="QueueFixSize.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="21" ci="0" mb="2" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="2"/><line nr="43" mi="0" ci="10" mb="1" cb="1"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="1" cb="1"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="9" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="8" ci="0" mb="4" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="4" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="2" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="124" covered="80"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="22" covered="15"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SplitFind.java"><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="RedBlackTreeExtension.java"><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="2"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="12" mb="0" cb="2"/><line nr="157" mi="0" ci="10" mb="0" cb="0"/><line nr="158" mi="0" ci="10" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="12" mb="0" cb="2"/><line nr="166" mi="0" ci="10" mb="0" cb="0"/><line nr="167" mi="0" ci="10" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="14" mb="0" cb="4"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="14" mb="0" cb="4"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="1" cb="1"/><line nr="251" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="1" cb="1"/><line nr="256" mi="10" ci="0" mb="2" cb="0"/><line nr="257" mi="11" ci="0" mb="4" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="11" ci="0" mb="2" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="1" cb="1"/><line nr="267" mi="12" ci="1" mb="2" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="10" ci="0" mb="2" cb="0"/><line nr="271" mi="11" ci="0" mb="4" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="273" mi="9" ci="0" mb="2" cb="0"/><line nr="274" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="1" cb="1"/><line nr="279" mi="13" ci="0" mb="2" cb="0"/><line nr="280" mi="6" ci="0" mb="0" cb="0"/><line nr="282" mi="9" ci="1" mb="2" cb="0"/><line nr="283" mi="0" ci="11" mb="1" cb="3"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="7" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="11" mb="0" cb="2"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="0" ci="14" mb="0" cb="4"/><line nr="365" mi="0" ci="5" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="2"/><line nr="372" mi="0" ci="7" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="7" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="14" mb="0" cb="4"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="5" mb="1" cb="1"/><line nr="385" mi="2" ci="0" mb="0" cb="0"/><line nr="386" mi="2" ci="0" mb="0" cb="0"/><line nr="387" mi="2" ci="0" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="2"/><line nr="390" mi="9" ci="1" mb="2" cb="0"/><line nr="391" mi="0" ci="11" mb="0" cb="4"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="394" mi="10" ci="1" mb="2" cb="0"/><line nr="395" mi="0" ci="4" mb="0" cb="0"/><line nr="396" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="1" cb="1"/><line nr="401" mi="12" ci="1" mb="2" cb="0"/><line nr="402" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="10" ci="0" mb="2" cb="0"/><line nr="405" mi="11" ci="0" mb="4" cb="0"/><line nr="406" mi="3" ci="0" mb="0" cb="0"/><line nr="407" mi="9" ci="0" mb="2" cb="0"/><line nr="408" mi="5" ci="0" mb="0" cb="0"/><line nr="410" mi="2" ci="0" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="2"/><line nr="413" mi="12" ci="1" mb="2" cb="0"/><line nr="414" mi="0" ci="6" mb="0" cb="0"/><line nr="416" mi="9" ci="1" mb="2" cb="0"/><line nr="417" mi="1" ci="10" mb="2" cb="2"/><line nr="418" mi="3" ci="0" mb="0" cb="0"/><line nr="419" mi="5" ci="0" mb="0" cb="0"/><line nr="420" mi="0" ci="2" mb="0" cb="0"/><line nr="422" mi="0" ci="4" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="1" mb="0" cb="0"/><line nr="428" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="11" mb="0" cb="2"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="7" mb="0" cb="0"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="443" mi="0" ci="5" mb="0" cb="0"/><line nr="444" mi="0" ci="1" mb="0" cb="0"/><line nr="448" mi="0" ci="4" mb="0" cb="0"/><line nr="452" mi="0" ci="6" mb="0" cb="0"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="464" mi="0" ci="5" mb="0" cb="0"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="472" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="6" mb="0" cb="0"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="491" mi="0" ci="3" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="1" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="506" mi="0" ci="1" mb="0" cb="0"/><line nr="510" mi="0" ci="5" mb="0" cb="0"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="1" mb="0" cb="0"/><line nr="522" mi="0" ci="2" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="0" cb="0"/><line nr="524" mi="0" ci="1" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="5" mb="0" cb="0"/><line nr="532" mi="0" ci="1" mb="0" cb="0"/><line nr="536" mi="0" ci="5" mb="0" cb="0"/><line nr="537" mi="0" ci="1" mb="0" cb="0"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="0" ci="6" mb="0" cb="0"/><line nr="547" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="245" covered="605"/><counter type="BRANCH" missed="49" covered="55"/><counter type="LINE" missed="36" covered="143"/><counter type="COMPLEXITY" missed="36" covered="71"/><counter type="METHOD" missed="7" covered="48"/><counter type="CLASS" missed="0" covered="9"/></sourcefile><sourcefile name="SubtreeMergeFindMin.java"><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="6"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="Heaps.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="11" ci="0" mb="2" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="2"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="36"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="8" covered="10"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="DynamicTreeSplay.java"><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="1" cb="3"/><line nr="80" mi="1" ci="10" mb="1" cb="1"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="15" mb="0" cb="4"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="7" ci="1" mb="2" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="3" mb="1" cb="1"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="1" ci="12" mb="1" cb="1"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="1" cb="1"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="1" cb="1"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="1" cb="1"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="10" ci="1" mb="4" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="140" mi="0" ci="14" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="1" cb="1"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="11" mb="0" cb="0"/><line nr="161" mi="0" ci="14" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="7" ci="1" mb="2" cb="0"/><line nr="179" mi="7" ci="1" mb="2" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="7" ci="1" mb="2" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="2"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="7" ci="1" mb="2" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="10" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="205" mi="0" ci="12" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="2"/><line nr="234" mi="0" ci="3" mb="0" cb="2"/><line nr="235" mi="0" ci="8" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="12" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="12" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="13" mb="0" cb="0"/><line nr="245" mi="7" ci="1" mb="2" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="2"/><line nr="247" mi="0" ci="8" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="2"/><line nr="250" mi="0" ci="12" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="252" mi="0" ci="12" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="2"/><line nr="255" mi="0" ci="12" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="2"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="7" ci="1" mb="2" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="0"/><line nr="322" mi="7" ci="1" mb="2" cb="0"/><line nr="323" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="7" mb="0" cb="0"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="697"/><counter type="BRANCH" missed="31" covered="57"/><counter type="LINE" missed="7" covered="165"/><counter type="COMPLEXITY" missed="21" covered="57"/><counter type="METHOD" missed="1" covered="33"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="HeapBinary.java"><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="2"/><line nr="92" mi="0" ci="12" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="7" mb="1" cb="1"/><line nr="108" mi="0" ci="6" mb="0" cb="2"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="1" cb="1"/><line nr="112" mi="0" ci="8" mb="0" cb="2"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="12" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="2"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="2"/><line nr="159" mi="0" ci="16" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="9" mb="0" cb="2"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="9" mb="0" cb="2"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="1" cb="1"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="2"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="1" cb="1"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="10" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="12" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="2"/><line nr="222" mi="0" ci="12" mb="0" cb="2"/><line nr="223" mi="0" ci="2" mb="0" cb="2"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="16" mb="0" cb="4"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="253" mi="0" ci="12" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="2"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="11" mb="0" cb="4"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="2"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="12" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="2"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="13" mb="0" cb="4"/><line nr="281" mi="0" ci="2" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="2"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="501"/><counter type="BRANCH" missed="5" covered="55"/><counter type="LINE" missed="4" covered="118"/><counter type="COMPLEXITY" missed="6" covered="41"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="HeapAbstract.java"><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="2" cb="0"/><line nr="45" mi="5" ci="0" mb="2" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="13" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="9" ci="0" mb="2" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="1" cb="1"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="9" ci="0" mb="2" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="111"/><counter type="BRANCH" missed="10" covered="4"/><counter type="LINE" missed="11" covered="32"/><counter type="COMPLEXITY" missed="9" covered="16"/><counter type="METHOD" missed="3" covered="15"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Trees.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="2"/><line nr="141" mi="0" ci="6" mb="0" cb="2"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="2"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="145"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="53"/><counter type="COMPLEXITY" missed="0" covered="24"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="DynamicTreeBuilderImpl.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="1" cb="1"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="13" mb="2" cb="4"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="2"/><line nr="39" mi="0" ci="3" mb="1" cb="1"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="2"/><line nr="46" mi="0" ci="4" mb="1" cb="1"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="107"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="6" covered="22"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinarySearchTree.java"><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="6" ci="0" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="1" cb="1"/><line nr="218" mi="0" ci="9" mb="1" cb="2"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="7" ci="0" mb="0" cb="0"/><line nr="227" mi="6" ci="0" mb="4" cb="0"/><line nr="228" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="8" mb="1" cb="1"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="4" ci="0" mb="0" cb="0"/><line nr="338" mi="5" ci="0" mb="0" cb="0"/><line nr="339" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="48"/><counter type="BRANCH" missed="7" covered="4"/><counter type="LINE" missed="17" covered="11"/><counter type="COMPLEXITY" missed="14" covered="7"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="DynamicTreeExtension.java"/><sourcefile name="DynamicTreeSplayExtension.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="2"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="1" cb="1"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="12" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="16" mb="0" cb="2"/><line nr="98" mi="7" ci="1" mb="2" cb="0"/><line nr="99" mi="0" ci="15" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="196"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="6" covered="48"/><counter type="COMPLEXITY" missed="5" covered="23"/><counter type="METHOD" missed="2" covered="19"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="UnionFindValueArray.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="2" cb="2"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="12" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="0" cb="2"/><line nr="94" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="173"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3087" covered="14294"/><counter type="BRANCH" missed="531" covered="1462"/><counter type="LINE" missed="535" covered="3376"/><counter type="COMPLEXITY" missed="485" covered="1329"/><counter type="METHOD" missed="142" covered="670"/><counter type="CLASS" missed="19" covered="132"/></package><package name="com/jgalgo/graph"><class name="com/jgalgo/graph/WeightsImplObj$IndexImpl" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;Ljava/lang/Object;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphBuilderImpl$Abstract$IndexIdMapImpl" sourcefilename="GraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lit/unimi/dsi/fastutil/objects/ObjectList;Z)V" line="206"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToId" desc="(I)Ljava/lang/Object;" line="214"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(Ljava/lang/Object;)I" line="219"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="26"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplByte$IndexMutable" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;B)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IB)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBase$EdgeSetSourceTargetUndirected" sourcefilename="IndexGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase;II)V" line="97"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="103"><counter type="INSTRUCTION" missed="1" covered="29"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="114"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="50"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBase$EdgeSetOutDirected" sourcefilename="IntGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphBase;I)V" line="207"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="213"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="218"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplFloat$ObjImmutableView" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsFloat;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsFloat;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)F" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;F)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()F" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphCSRDirected" sourcefilename="GraphCSRDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesDirected;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="34"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps" sourcefilename="IndexIdMaps.java"><method name="indexToIdIterator" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;Lcom/jgalgo/graph/IndexIdMap;)Ljava/util/Iterator;" line="53"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexToIdIterator" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;Lcom/jgalgo/graph/IndexIntIdMap;)Lit/unimi/dsi/fastutil/ints/IntIterator;" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idToIndexIterator" desc="(Ljava/util/Iterator;Lcom/jgalgo/graph/IndexIdMap;)Lit/unimi/dsi/fastutil/ints/IntIterator;" line="82"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdEdgeIter" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/IEdgeIter;)Lcom/jgalgo/graph/EdgeIter;" line="222"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdEdgeIter" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IEdgeIter;)Lcom/jgalgo/graph/IEdgeIter;" line="239"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdCollection" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IndexIdMap;)Ljava/util/Collection;" line="319"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdCollection" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IndexIntIdMap;)Lit/unimi/dsi/fastutil/ints/IntCollection;" line="335"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdSet" desc="(Lit/unimi/dsi/fastutil/ints/IntSet;Lcom/jgalgo/graph/IndexIdMap;)Ljava/util/Set;" line="431"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdSet" desc="(Lit/unimi/dsi/fastutil/ints/IntSet;Lcom/jgalgo/graph/IndexIntIdMap;)Lit/unimi/dsi/fastutil/ints/IntSet;" line="446"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndexCollection" desc="(Ljava/util/Collection;Lcom/jgalgo/graph/IndexIdMap;)Lit/unimi/dsi/fastutil/ints/IntCollection;" line="483"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdList" desc="(Lit/unimi/dsi/fastutil/ints/IntList;Lcom/jgalgo/graph/IndexIdMap;)Ljava/util/List;" line="583"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdList" desc="(Lit/unimi/dsi/fastutil/ints/IntList;Lcom/jgalgo/graph/IndexIntIdMap;)Lit/unimi/dsi/fastutil/ints/IntList;" line="598"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndexWeightsWrapper" desc="(Lcom/jgalgo/graph/Weights;Lcom/jgalgo/graph/IndexIdMap;)Lcom/jgalgo/graph/IWeights;" line="1243"><counter type="INSTRUCTION" missed="201" covered="0"/><counter type="BRANCH" missed="40" covered="0"/><counter type="LINE" missed="40" covered="0"/><counter type="COMPLEXITY" missed="21" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idToIndexWeights" desc="(Lcom/jgalgo/graph/Weights;Lcom/jgalgo/graph/IndexIdMap;)Lcom/jgalgo/graph/IWeights;" line="1307"><counter type="INSTRUCTION" missed="24" covered="35"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndexWeightFunc" desc="(Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/IndexIdMap;)Lcom/jgalgo/graph/IWeightFunction;" line="1343"><counter type="INSTRUCTION" missed="24" covered="47"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndexWeightFunc" desc="(Lcom/jgalgo/graph/WeightFunctionInt;Lcom/jgalgo/graph/IndexIdMap;)Lcom/jgalgo/graph/IWeightFunctionInt;" line="1387"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$idToIndexWeightFunc$3" desc="(Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/IndexIdMap;I)D" line="1374"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$idToIndexWeightFunc$2" desc="(Lcom/jgalgo/graph/WeightFunctionInt;Lcom/jgalgo/graph/IndexIdMap;I)I" line="1369"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$idToIndexWeightFunc$1" desc="(Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IndexIntIdMap;I)D" line="1363"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$idToIndexWeightFunc$0" desc="(Lcom/jgalgo/graph/IWeightFunctionInt;Lcom/jgalgo/graph/IndexIntIdMap;I)I" line="1356"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="308" covered="188"/><counter type="BRANCH" missed="58" covered="26"/><counter type="LINE" missed="62" covered="40"/><counter type="COMPLEXITY" missed="42" covered="20"/><counter type="METHOD" missed="6" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplFloat$ObjMapped" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)F" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;F)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()F" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplDouble" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/Graphs$ReverseGraph" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;)V" line="552"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Ljava/util/Set;" line="558"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edges" desc="()Ljava/util/Set;" line="563"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Ljava/lang/Object;)V" line="568"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVertex" desc="(Ljava/lang/Object;)V" line="573"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="578"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="583"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="588"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="593"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEdge" desc="(Ljava/lang/Object;)V" line="598"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverseEdge" desc="(Ljava/lang/Object;)V" line="603"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edgeSource" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="608"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edgeTarget" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="613"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="618"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearEdges" desc="()V" line="623"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="628"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="634"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="639"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="644"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="649"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="655"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="660"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="665"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDirected" desc="()Z" line="670"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAllowSelfEdges" desc="()Z" line="675"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAllowParallelEdges" desc="()Z" line="680"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="685"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="690"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="695"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="131" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="33" covered="7"/><counter type="COMPLEXITY" missed="25" covered="5"/><counter type="METHOD" missed="24" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplDouble$IndexImmutable" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ID)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplByte" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/Graphs$ImmutableEdgeIter" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/EdgeIter;)V" line="466"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="source" desc="()Ljava/lang/Object;" line="472"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="()Ljava/lang/Object;" line="477"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="482"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="487"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekNext" desc="()Ljava/lang/Object;" line="492"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImpl$Index" sourcefilename="WeightsImpl.java"/><class name="com/jgalgo/graph/IntGraphImpl$Undirected" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="413"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;II)V" line="418"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IndexGraphFactory;Z)V" line="424"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="431"><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ReversedEdgeIter" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/EdgeIter;)V" line="974"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="980"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="985"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekNext" desc="()Ljava/lang/Object;" line="990"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="source" desc="()Ljava/lang/Object;" line="995"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="()Ljava/lang/Object;" line="1000"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="1005"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexGraphBuilder$ReIndexingMap" sourcefilename="IndexGraphBuilder.java"/><class name="com/jgalgo/graph/IndexIdMaps$IndexToIdCollection" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IndexIdMap;)V" line="344"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="351"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="356"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="361"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="366"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="371"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="376"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="38"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplShort$IntImmutableView" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsShort;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsShort;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)S" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IS)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()S" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplInt$IntMapped" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()I" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplLong$IndexMutable" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;J)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IJ)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightsFloat" sourcefilename="IWeightsFloat.java"><method name="get" desc="(Ljava/lang/Integer;)F" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsObj" desc="(I)Ljava/lang/Float;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;F)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsObj" desc="(ILjava/lang/Float;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Float;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Float;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(I)D" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weight" desc="(Ljava/lang/Integer;)D" line="99"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBase" sourcefilename="IntGraphBase.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="29"><counter type="INSTRUCTION" missed="30" covered="158"/><counter type="BRANCH" missed="17" covered="23"/><counter type="LINE" missed="11" covered="25"/><counter type="COMPLEXITY" missed="15" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="74"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="168" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$0" desc="(Ljava/lang/StringBuilder;Ljava/util/Collection;I)V" line="107"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="347" covered="161"/><counter type="BRANCH" missed="47" covered="23"/><counter type="LINE" missed="71" covered="26"/><counter type="COMPLEXITY" missed="33" covered="7"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IndexToIntIdEdgeIter" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IEdgeIter;)V" line="279"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexIt" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="285"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eiMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="289"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekNextInt" desc="()I" line="294"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceInt" desc="()I" line="299"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="targetInt" desc="()I" line="304"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="10"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ReverseIndexGraph" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="869"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IndexGraphImpl;" line="876"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="881"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="886"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(I)V" line="892"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdge" desc="(III)V" line="898"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$ImmutableView" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Weights;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/Weights;" line="329"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Z)V" line="28"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/Graph;Z)Lcom/jgalgo/graph/IndexGraph;" line="49"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/graph/IndexGraphBuilder;" line="56"><counter type="INSTRUCTION" missed="4" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutableImpl" desc="()Lcom/jgalgo/graph/IndexGraphFactoryImpl$Impl;" line="73"><counter type="INSTRUCTION" missed="20" covered="96"/><counter type="BRANCH" missed="10" covered="19"/><counter type="LINE" missed="3" covered="19"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableImpl" desc="()Lcom/jgalgo/graph/IndexGraphFactoryImpl$Impl;" line="242"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDirected" desc="(Z)Lcom/jgalgo/graph/IndexGraphFactory;" line="274"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowSelfEdges" desc="(Z)Lcom/jgalgo/graph/IndexGraphFactory;" line="280"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allowParallelEdges" desc="(Z)Lcom/jgalgo/graph/IndexGraphFactory;" line="286"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expectedVerticesNum" desc="(I)Lcom/jgalgo/graph/IndexGraphFactory;" line="292"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedEdgesNum" desc="(I)Lcom/jgalgo/graph/IndexGraphFactory;" line="300"><counter type="INSTRUCTION" missed="6" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addHint" desc="(Lcom/jgalgo/graph/GraphFactory$Hint;)Lcom/jgalgo/graph/IndexGraphFactory;" line="308"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeHint" desc="(Lcom/jgalgo/graph/GraphFactory$Hint;)Lcom/jgalgo/graph/IndexGraphFactory;" line="314"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/graph/IndexGraphFactory;" line="320"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="222"/><counter type="BRANCH" missed="14" covered="25"/><counter type="LINE" missed="12" covered="53"/><counter type="COMPLEXITY" missed="14" covered="22"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayAbstract$EdgeIterBase" sourcefilename="GraphArrayAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayAbstract;[II)V" line="128"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="137"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="142"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="148"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="154"><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="73"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedUndirected$Edge" sourcefilename="GraphLinkedUndirected.java"><method name="&lt;init&gt;" desc="(III)V" line="246"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="(I)Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;" line="250"><counter type="INSTRUCTION" missed="12" covered="11"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSet" desc="(ILcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="255"><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prev" desc="(I)Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;" line="264"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="prevSet" desc="(ILcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="273"><counter type="INSTRUCTION" missed="8" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndpoint" desc="(I)I" line="282"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="240"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="66"/><counter type="BRANCH" missed="12" covered="10"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsObj" sourcefilename="WeightsObj.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl$IdIdxMapImpl$1" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphImpl$IdIdxMapImpl;)V" line="492"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToId" desc="()Lcom/jgalgo/graph/WeightsImplObj$IndexMutable;" line="495"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idRemove" desc="(I)V" line="500"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idAdd" desc="(I)V" line="507"><counter type="INSTRUCTION" missed="22" covered="43"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idsClear" desc="()V" line="524"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="492"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="72"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBuilderImpl$Abstract" sourcefilename="IntGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilder;)V" line="50"><counter type="INSTRUCTION" missed="16" covered="78"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Z)V" line="50"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canAddVertexWithoutId" desc="()Z" line="109"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="canAddVertexWithId" desc="()Z" line="113"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAddEdgeWithoutId" desc="()Z" line="117"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAddEdgeWithId" desc="()Z" line="121"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="126"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVertex" desc="(I)V" line="140"><counter type="INSTRUCTION" missed="20" covered="30"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="155"><counter type="INSTRUCTION" missed="35" covered="48"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(III)V" line="176"><counter type="INSTRUCTION" missed="32" covered="52"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedVerticesNum" desc="(I)V" line="198"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedEdgesNum" desc="(I)V" line="205"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="213"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="223"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdgesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="235"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="245"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="251"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="256"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reIndexedIdMap" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)Lcom/jgalgo/graph/IndexIntIdMap;" line="291"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEdgesIWeights$1" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$IntMapped;" line="239"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getVerticesIWeights$0" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$IntMapped;" line="217"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="206" covered="476"/><counter type="BRANCH" missed="36" covered="24"/><counter type="LINE" missed="33" covered="101"/><counter type="COMPLEXITY" missed="32" covered="23"/><counter type="METHOD" missed="7" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplChar$IntMapped" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)C" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IC)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()C" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplShort$IndexImmutable" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IS)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/EdgeEndpointsContainer$GraphWithEdgeEndpointsContainer" sourcefilename="EdgeEndpointsContainer.java"><method name="setEndpoints" desc="(III)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(II)I" line="55"><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(I)I" line="71"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(I)I" line="77"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceEdgeSource" desc="(II)V" line="82"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceEdgeTarget" desc="(II)V" line="88"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceEdgeEndpoint" desc="(III)V" line="94"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="114"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBuilderImpl$EdgesSetProvidedIdx" sourcefilename="IndexGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)V" line="330"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="333"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="338"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightsLong" sourcefilename="IWeightsLong.java"><method name="get" desc="(Ljava/lang/Integer;)J" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsObj" desc="(I)Ljava/lang/Long;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;J)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsObj" desc="(ILjava/lang/Long;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Long;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Long;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(I)D" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weight" desc="(Ljava/lang/Integer;)D" line="99"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplFloat$IndexMutable" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;F)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IF)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixAbstract$EdgeIterInDirected" sourcefilename="GraphMatrixAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphMatrixAbstract;I)V" line="350"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="361"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="366"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="374"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advanceUntilNext" desc="(I)V" line="379"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="391"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="396"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="401"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplShort$ObjImmutableView" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsShort;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsShort;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)S" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;S)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()S" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphHashmapAbstract" sourcefilename="GraphHashmapAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;II)V" line="34"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraph;Z)V" line="41"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraphBuilderImpl;)V" line="58"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="(II)Lcom/jgalgo/graph/IEdgeSet;" line="70"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="76"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="83"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="89"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoints" desc="()[J" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge0" desc="(I)V" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureEdgesMapMutable" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;I)Lit/unimi/dsi/fastutil/ints/Int2IntMap;" line="245"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([J)V" line="61"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([J)V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([J)V" line="44"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([J)V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="179"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="8" covered="40"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRAbstractUnindexed" sourcefilename="GraphCSRAbstractUnindexed.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraphBuilderImpl;Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdges;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraph;Z)V" line="34"><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$IndexImmutable" sourcefilename="WeightsImpl.java"><method name="copyOf" desc="(Lcom/jgalgo/graph/IWeights;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)Lcom/jgalgo/graph/WeightsImpl$IndexImmutable;" line="197"><counter type="INSTRUCTION" missed="11" covered="93"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOfReindexed" desc="(Lcom/jgalgo/graph/IWeights;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)Lcom/jgalgo/graph/WeightsImpl$IndexImmutable;" line="224"><counter type="INSTRUCTION" missed="11" covered="102"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="195"/><counter type="BRANCH" missed="4" covered="36"/><counter type="LINE" missed="4" covered="38"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplChar$IndexImpl" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;C)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)C" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()C" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesUndirected" sourcefilename="GraphCSRBase.java"><method name="valueOf" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesUndirected;" line="251"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesUndirected;" line="255"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;)V" line="258"><counter type="INSTRUCTION" missed="108" covered="205"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="16" covered="38"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="248"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="212"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="17" covered="40"/><counter type="COMPLEXITY" missed="8" covered="11"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplInt" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplShort$ObjMapped" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)S" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;S)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()S" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ReverseIntGraph" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;)V" line="704"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IntGraph;" line="709"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="714"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="719"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="724"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(I)V" line="729"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(I)V" line="734"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="739"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="744"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(II)Lcom/jgalgo/graph/IEdgeSet;" line="749"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="754"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(III)V" line="759"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(I)V" line="764"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(I)I" line="769"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(I)I" line="774"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="779"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="784"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="789"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="794"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="799"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="804"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="809"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="814"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="819"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowSelfEdges" desc="()Z" line="824"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowParallelEdges" desc="()Z" line="829"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="834"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="840"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="846"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="851"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="856"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="861"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="171"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="1" covered="32"/><counter type="METHOD" missed="0" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplObj$IndexImmutable" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphBuilderImpl$Abstract" sourcefilename="GraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilder;)V" line="47"><counter type="INSTRUCTION" missed="16" covered="78"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Z)V" line="47"><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertices" desc="()Ljava/util/Set;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edges" desc="()Ljava/util/Set;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Ljava/lang/Object;)V" line="107"><counter type="INSTRUCTION" missed="15" covered="24"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="118"><counter type="INSTRUCTION" missed="27" covered="46"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedVerticesNum" desc="(I)V" line="136"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedEdgesNum" desc="(I)V" line="143"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="151"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="161"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="167"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="173"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="183"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="189"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="194"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reIndexedIdMap" desc="(Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)Lcom/jgalgo/graph/IndexIdMap;" line="227"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEdgesWeights$1" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$ObjMapped;" line="177"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getVerticesWeights$0" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$ObjMapped;" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="230" covered="248"/><counter type="BRANCH" missed="18" covered="6"/><counter type="LINE" missed="40" covered="58"/><counter type="COMPLEXITY" missed="17" covered="14"/><counter type="METHOD" missed="5" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplInt$IndexImpl" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;I)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()I" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ImmutableIEdgeSet" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IEdgeSet;)V" line="443"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="449"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="454"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="459"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayAbstract" sourcefilename="GraphArrayAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;II)V" line="29"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraph;Z)V" line="36"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraphBuilderImpl;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="65"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="78"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeToList" desc="([[I[III)V" line="83"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeIndexOf" desc="([III)I" line="94"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeFromList" desc="([[I[III)V" line="101"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoints" desc="()[J" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge0" desc="(I)V" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([J)V" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([J)V" line="45"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([J)V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([J)V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="263"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="58"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Weights" sourcefilename="Weights.java"><method name="createExternalVerticesWeights" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Class;)Lcom/jgalgo/graph/Weights;" line="146"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExternalVerticesWeights" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="168"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExternalEdgesWeights" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Class;)Lcom/jgalgo/graph/Weights;" line="202"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExternalEdgesWeights" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="224"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="82"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphHashmapDirected$EdgeSetOut" sourcefilename="GraphHashmapDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphHashmapDirected;I[Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="353"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="360"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="365"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="370"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphElementSet$IdAddRemoveListener" sourcefilename="GraphElementSet.java"/><class name="com/jgalgo/graph/IndexIdMaps$IndexToIntIdList" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntList;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="663"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="670"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="675"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="680"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="685"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rem" desc="(I)Z" line="690"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInt" desc="(I)I" line="695"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(I)I" line="700"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(I)I" line="705"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeInt" desc="(I)I" line="710"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="25"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedUndirected$EdgeIterIn" sourcefilename="GraphLinkedUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedUndirected;ILcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="353"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextEdge" desc="(Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;" line="360"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="365"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="371"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBuilderImpl$ReIndexingMapImpl" sourcefilename="IndexGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="([I[I)V" line="438"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="origToReIndexed" desc="(I)I" line="445"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reIndexedToOrig" desc="(I)I" line="450"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$IdIdxMapImpl" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;IZ)V" line="513"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/GraphElementSet;Z)V" line="513"><counter type="INSTRUCTION" missed="18" covered="109"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/GraphElementSet;IZ)Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl;" line="557"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/GraphElementSet;Z)Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl;" line="561"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initListeners" desc="(Lcom/jgalgo/graph/GraphElementSet;)V" line="565"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdInt" desc="(I)I" line="616"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(I)I" line="621"><counter type="INSTRUCTION" missed="1" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idSet" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="628"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$initListeners$3" desc="(II)V" line="566"><counter type="INSTRUCTION" missed="14" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="()Ljava/util/function/ToIntFunction;" line="484"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$1" desc="(Ljava/util/Random;Lit/unimi/dsi/fastutil/ints/IntSet;)I" line="487"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Ljava/util/function/Supplier;)Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl$Strategy;" line="449"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="449"><counter type="INSTRUCTION" missed="29" covered="30"/><counter type="BRANCH" missed="6" covered="3"/><counter type="LINE" missed="7" covered="11"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="87" covered="260"/><counter type="BRANCH" missed="18" covered="15"/><counter type="LINE" missed="16" covered="64"/><counter type="COMPLEXITY" missed="16" covered="14"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Long" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsLong;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsLong;" line="1111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)J" line="1116"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IJ)V" line="1121"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()J" line="1126"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Double" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsDouble;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1160"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsDouble;" line="1165"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)D" line="1170"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ID)V" line="1175"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()D" line="1180"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplBool$ObjImmutableView" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsBool;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsBool;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Z" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;Z)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()Z" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplByte$IntMapped" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)B" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IB)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()B" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$EdgeSetMapped" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphImpl;Lcom/jgalgo/graph/IEdgeSet;)V" line="294"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Z" line="300"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="306"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="312"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="317"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="322"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixDirected$EdgeSetOut" sourcefilename="GraphMatrixDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphMatrixDirected;I)V" line="173"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="179"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="184"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IEdgeSet" sourcefilename="IEdgeSet.java"><method name="intIterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightFunction" sourcefilename="WeightFunction.java"><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weightSum" desc="(Ljava/lang/Iterable;)D" line="99"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightSum" desc="(Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Iterable;)D" line="118"><counter type="INSTRUCTION" missed="16" covered="20"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cardinalityWeightFunction" desc="()Lcom/jgalgo/graph/WeightFunctionInt;" line="152"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Ljava/lang/Object;)I" line="137"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="137"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="43"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl$Factory" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Z)V" line="552"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;)V" line="556"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="()Lcom/jgalgo/graph/Graph;" line="562"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/Graph;Z)Lcom/jgalgo/graph/Graph;" line="572"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="581"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDirected" desc="(Z)Lcom/jgalgo/graph/GraphFactory;" line="588"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowSelfEdges" desc="(Z)Lcom/jgalgo/graph/GraphFactory;" line="594"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allowParallelEdges" desc="(Z)Lcom/jgalgo/graph/GraphFactory;" line="600"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expectedVerticesNum" desc="(I)Lcom/jgalgo/graph/GraphFactory;" line="606"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expectedEdgesNum" desc="(I)Lcom/jgalgo/graph/GraphFactory;" line="612"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addHint" desc="(Lcom/jgalgo/graph/GraphFactory$Hint;)Lcom/jgalgo/graph/GraphFactory;" line="618"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeHint" desc="(Lcom/jgalgo/graph/GraphFactory$Hint;)Lcom/jgalgo/graph/GraphFactory;" line="624"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/graph/GraphFactory;" line="630"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="82"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="15" covered="17"/><counter type="COMPLEXITY" missed="8" covered="8"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$ImplImmutable" sourcefilename="IndexGraphFactoryImpl.java"><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="237"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/EdgeEndpointsContainer" sourcefilename="EdgeEndpointsContainer.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverseEdge" desc="([JI)V" line="26"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceTarget2Endpoints" desc="(II)J" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endpoints2Source" desc="(J)I" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endpoints2Target" desc="(J)I" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="34"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/DataContainer$Obj" sourcefilename="DataContainer.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/function/Consumer;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="82"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="90"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="([Ljava/lang/Object;II)V" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="100"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="([Ljava/lang/Object;I)V" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="108"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="([Ljava/lang/Object;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Lcom/jgalgo/graph/GraphElementSet;[Ljava/lang/Object;Ljava/util/function/Consumer;)Lcom/jgalgo/graph/DataContainer$Obj;" line="116"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="129"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="35"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphFactory$Hint" sourcefilename="GraphFactory.java"><method name="&lt;clinit&gt;" desc="()V" line="174"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightsShort" sourcefilename="IWeightsShort.java"><method name="get" desc="(Ljava/lang/Integer;)S" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsObj" desc="(I)Ljava/lang/Short;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;S)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsObj" desc="(ILjava/lang/Short;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Short;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Short;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightInt" desc="(I)I" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weightInt" desc="(Ljava/lang/Integer;)I" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplChar$IndexMutable" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;C)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IC)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplObj" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplChar" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsBool" sourcefilename="WeightsBool.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Boolean;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Boolean;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Boolean;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Char" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsChar;Lcom/jgalgo/graph/IndexIdMap;)V" line="951"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsChar;" line="956"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)C" line="961"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IC)V" line="966"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()C" line="971"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphArrayDirected" sourcefilename="GraphArrayDirected.java"><method name="&lt;init&gt;" desc="(II)V" line="56"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="71"><counter type="INSTRUCTION" missed="0" covered="251"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Directed;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertexImpl" desc="(I)V" line="150"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="160"><counter type="INSTRUCTION" missed="16" covered="109"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="190"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="196"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="202"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="210"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="218"><counter type="INSTRUCTION" missed="7" covered="90"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="236"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="243"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="250"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="262"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="269"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$15" desc="([I)V" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$14" desc="([[I)V" line="133"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$13" desc="([I)V" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$12" desc="([[I)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([I)V" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$10" desc="([[I)V" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$9" desc="([I)V" line="96"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$8" desc="([[I)V" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([I)V" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([[I)V" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([I)V" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([[I)V" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([I)V" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([[I)V" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([I)V" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([[I)V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="853"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="2" covered="148"/><counter type="COMPLEXITY" missed="3" covered="45"/><counter type="METHOD" missed="0" covered="32"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$IdIdxMapCounter" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;IZ)V" line="638"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/GraphElementSet;Z)V" line="644"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextID" desc="()I" line="655"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="42"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedDirected$EdgeIterImpl" sourcefilename="GraphLinkedDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedDirected;Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="297"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="303"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="308"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphFactory" sourcefilename="IntGraphFactory.java"><method name="newCopyOf" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/graph/IntGraph;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/IntGraphFactory;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/IntGraphFactory;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/graph/IntGraphFactory;" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/graph/IntGraphFactory;" line="112"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsFloat" sourcefilename="WeightsFloat.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Float;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Float;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Float;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(Ljava/lang/Object;)D" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$IdIdxMapImpl$Strategy" sourcefilename="IntGraphImpl.java"/><class name="com/jgalgo/graph/GraphHashmapUndirected" sourcefilename="GraphHashmapUndirected.java"><method name="&lt;init&gt;" desc="(II)V" line="40"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="48"><counter type="INSTRUCTION" missed="14" covered="112"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Undirected;)V" line="80"><counter type="INSTRUCTION" missed="76" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVertexImpl" desc="(I)V" line="101"><counter type="INSTRUCTION" missed="10" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="109"><counter type="INSTRUCTION" missed="138" covered="116"/><counter type="BRANCH" missed="23" covered="7"/><counter type="LINE" missed="17" covered="26"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(II)I" line="166"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="173"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="179"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="185"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="199"><counter type="INSTRUCTION" missed="14" covered="31"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="211"><counter type="INSTRUCTION" missed="75" covered="68"/><counter type="BRANCH" missed="18" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="238"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="246"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="251"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="257"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearEdges" desc="()V" line="261"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="269"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="339" covered="487"/><counter type="BRANCH" missed="61" covered="29"/><counter type="LINE" missed="33" covered="113"/><counter type="COMPLEXITY" missed="37" covered="30"/><counter type="METHOD" missed="3" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsDouble" sourcefilename="WeightsDouble.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Double;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Double;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Double;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(Ljava/lang/Object;)D" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl$Undirected" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/IndexIdMap;)V" line="402"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;II)V" line="407"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/IndexGraphFactory;Z)V" line="413"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(Ljava/lang/Object;)V" line="420"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="27"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$EdgeSetSourceTargetSingleton$1" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graphs$EdgeSetSourceTargetSingleton;)V" line="1143"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="1149"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="1154"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="1161"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="1167"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="1172"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="1177"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="41"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedUndirected" sourcefilename="GraphLinkedUndirected.java"><method name="&lt;init&gt;" desc="(II)V" line="48"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="57"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Undirected;)V" line="69"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVertexImpl" desc="(I)V" line="83"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="89"><counter type="INSTRUCTION" missed="49" covered="64"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="10" covered="14"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="122"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="128"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="134"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeToLists" desc="(Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="140"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allocEdge" desc="(III)Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;" line="160"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(I)Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;" line="165"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="170"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgePointers" desc="(Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;I)V" line="178"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="194"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="216"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="221"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="227"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearEdges" desc="()V" line="231"><counter type="INSTRUCTION" missed="18" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([I)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$4" desc="([Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$3" desc="([I)V" line="59"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([I)V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="126" covered="447"/><counter type="BRANCH" missed="15" covered="27"/><counter type="LINE" missed="22" covered="94"/><counter type="COMPLEXITY" missed="13" covered="33"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplObj$ObjMapped" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Ljava/lang/Object;" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl$IdIdxMapImpl" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;IZ)V" line="430"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/GraphElementSet;Z)V" line="430"><counter type="INSTRUCTION" missed="17" covered="108"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/GraphElementSet;IZ)Lcom/jgalgo/graph/GraphImpl$IdIdxMapImpl;" line="474"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="(Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/GraphElementSet;Z)Lcom/jgalgo/graph/GraphImpl$IdIdxMapImpl;" line="478"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initListeners" desc="(Lcom/jgalgo/graph/GraphElementSet;)V" line="482"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToId" desc="(I)Ljava/lang/Object;" line="532"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(Ljava/lang/Object;)I" line="537"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idSet" desc="()Ljava/util/Set;" line="544"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$initListeners$0" desc="(II)V" line="483"><counter type="INSTRUCTION" missed="14" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="425"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="221"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="4" covered="53"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBuilderImpl$Undirected" sourcefilename="IndexGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="()V" line="359"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="362"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reIndexAndBuild" desc="(ZZ)Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph;" line="368"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reIndexAndBuildMutable" desc="(ZZ)Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph;" line="373"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplObj$IntImmutableView" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsObj;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsObj;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Ljava/lang/Object;" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirectedReindexed$EdgeIterIn" sourcefilename="GraphCSRDirectedReindexed.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirectedReindexed;I[III)V" line="202"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="209"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="214"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBase$EdgeSetInUndirected" sourcefilename="IntGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphBase;I)V" line="188"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="194"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="199"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedDirected" sourcefilename="GraphLinkedDirected.java"><method name="&lt;init&gt;" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="65"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Directed;)V" line="82"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVertexImpl" desc="(I)V" line="100"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="107"><counter type="INSTRUCTION" missed="14" covered="75"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="126"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="132"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="138"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeToLists" desc="(Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allocEdge" desc="(III)Lcom/jgalgo/graph/GraphLinkedDirected$Edge;" line="164"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(I)Lcom/jgalgo/graph/GraphLinkedDirected$Edge;" line="169"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="174"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="182"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="196"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeOutPointers" desc="(Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="209"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeInPointers" desc="(Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="224"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="240"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="253"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$11" desc="([I)V" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$10" desc="([I)V" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$9" desc="([Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$8" desc="([Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$7" desc="([I)V" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([I)V" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([I)V" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="109" covered="639"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="15" covered="128"/><counter type="COMPLEXITY" missed="8" covered="39"/><counter type="METHOD" missed="5" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirectedReindexed" sourcefilename="GraphCSRDirectedReindexed.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesDirected;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;Z)V" line="32"><counter type="INSTRUCTION" missed="28" covered="106"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;Z)Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph;" line="74"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="183"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphBase" sourcefilename="GraphBase.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="27"><counter type="INSTRUCTION" missed="30" covered="158"/><counter type="BRANCH" missed="17" covered="23"/><counter type="LINE" missed="11" covered="25"/><counter type="COMPLEXITY" missed="15" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="73"><counter type="INSTRUCTION" missed="112" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="169" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$1" desc="(Ljava/lang/StringBuilder;Ljava/util/Collection;Ljava/lang/Object;)V" line="119"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toString$0" desc="(Ljava/lang/StringBuilder;Ljava/util/Collection;Ljava/lang/Object;)V" line="106"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="385" covered="161"/><counter type="BRANCH" missed="51" covered="23"/><counter type="LINE" missed="82" covered="26"/><counter type="COMPLEXITY" missed="36" covered="7"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplFloat$IndexImmutable" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IF)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplBool" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Bool" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsBool;Lcom/jgalgo/graph/IndexIdMap;)V" line="924"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsBool;" line="929"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Z" line="934"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IZ)V" line="939"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()Z" line="944"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IEdgeIter" sourcefilename="IEdgeIter.java"><method name="peekNext" desc="()Ljava/lang/Integer;" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Ljava/lang/Integer;" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="()Ljava/lang/Integer;" line="95"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayDirected$EdgeIterOut" sourcefilename="GraphArrayDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayDirected;I[II)V" line="319"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="325"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/EdgeIter" sourcefilename="EdgeIter.java"/><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Int" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsInt;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1079"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsInt;" line="1084"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="1089"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="1094"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()I" line="1099"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphLinkedDirected$EdgeIterIn" sourcefilename="GraphLinkedDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedDirected;Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="324"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextEdge" desc="(Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)Lcom/jgalgo/graph/GraphLinkedDirected$Edge;" line="330"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplInt$IntImmutableView" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsInt;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsInt;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()I" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$9" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="242"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="245"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="250"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$8" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="192"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="197"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IndexToIntIdCollection" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="385"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="392"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="397"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="402"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="407"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="412"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rem" desc="(I)Z" line="417"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="38"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedDirected$EdgeSetIn" sourcefilename="GraphLinkedDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedDirected;I)V" line="281"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="287"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="292"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixDirected$EdgeSetIn" sourcefilename="GraphMatrixDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphMatrixDirected;I)V" line="189"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="195"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="200"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplByte$IntImmutableView" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsByte;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsByte;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)B" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IB)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()B" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirectedReindexed$EdgeSetIn" sourcefilename="GraphCSRDirectedReindexed.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirectedReindexed;I)V" line="131"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="144"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="149"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="43"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$5" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="139"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="143"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="148"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="153"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$4" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="122"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="131"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="136"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$7" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="172"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="176"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="181"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="186"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$6" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="159"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="164"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="169"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$1" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$3" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="115"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="120"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$2" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="(II)Lcom/jgalgo/graph/IndexGraph;" line="93"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="103"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplObj$IndexMutable" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;Ljava/lang/Object;)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRUndirected$EdgeSetIn" sourcefilename="GraphCSRUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRUndirected;I)V" line="73"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="81"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="91"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="43"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedUndirected$EdgeSetIn" sourcefilename="GraphLinkedUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedUndirected;I)V" line="308"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="314"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="319"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRUndirected$EdgeIterOut" sourcefilename="GraphCSRUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRUndirected;I[III)V" line="98"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="105"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplFloat$IntMapped" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)F" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IF)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()F" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$ObjMapped" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;Lcom/jgalgo/graph/IndexIdMap;)V" line="562"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImpl$IndexAbstract;" line="568"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;Lcom/jgalgo/graph/IndexIdMap;)Lcom/jgalgo/graph/WeightsImpl$ObjMapped;" line="573"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBase$EdgeSetOutUndirected" sourcefilename="IntGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphBase;I)V" line="169"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="175"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="180"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplObj$IntMapped" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplObj$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$IntImmutableView" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeights;)V" line="336"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeights;" line="341"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/IWeights;)Lcom/jgalgo/graph/IWeights;" line="346"><counter type="INSTRUCTION" missed="9" covered="84"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="92"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="22"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplInt$IndexImmutable" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBase$EdgeSetSourceTarget" sourcefilename="IndexGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase;II)V" line="77"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="84"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="92"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="23"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplByte$IndexImpl" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;B)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)B" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()B" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Float" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsFloat;Lcom/jgalgo/graph/IndexIdMap;)V" line="870"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsFloat;" line="875"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)F" line="880"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IF)V" line="885"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()F" line="890"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsChar" sourcefilename="WeightsChar.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Character;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Character;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Character;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplByte$ObjImmutableView" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsByte;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsByte;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)B" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;B)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()B" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexGraphImpl" sourcefilename="IndexGraphImpl.java"><method name="addVertexSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="28"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVertexSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="33"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdgeSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEdgeSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphMatrixAbstract$EdgeIterOut" sourcefilename="GraphMatrixAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphMatrixAbstract;I)V" line="228"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="241"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="246"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="254"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advanceUntilNext" desc="(I)V" line="259"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="271"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="276"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="281"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplInt$IndexMutable" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;I)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplFloat" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/Graphs$ImmutableGraph" sourcefilename="Graphs.java"/><class name="com/jgalgo/graph/WeightsImplDouble$ObjMapped" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)D" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;D)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()D" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$ObjImmutableView" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Weights;)V" line="599"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/Weights;)Lcom/jgalgo/graph/Weights;" line="604"><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="97" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexCollection" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="537"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="544"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="549"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="554"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="559"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="564"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rem" desc="(I)Z" line="569"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="30"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBase$EdgeSetSourceTargetDirected" sourcefilename="IndexGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase;II)V" line="119"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="125"><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="135"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="38"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$IdIdxMapImpl$1" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;)V" line="449"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/GraphElementSet;IZ)Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl;" line="452"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyOf" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/GraphElementSet;Z)Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl;" line="457"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IntGraphImpl$IdIdxMapImpl$2" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="()V" line="468"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/GraphElementSet;IZ)Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl;" line="472"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/GraphElementSet;Z)Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl;" line="477"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Byte" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsByte;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1025"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsByte;" line="1030"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)B" line="1035"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IB)V" line="1040"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()B" line="1045"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IWeightsInt" sourcefilename="IWeightsInt.java"><method name="get" desc="(Ljava/lang/Integer;)I" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(I)Ljava/lang/Integer;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;I)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(ILjava/lang/Integer;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightInt" desc="(I)I" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightInt" desc="(Ljava/lang/Integer;)I" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightFunctionInt" sourcefilename="IWeightFunctionInt.java"><method name="weightInt" desc="(Ljava/lang/Integer;)I" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weight" desc="(I)D" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(Ljava/lang/Integer;)D" line="91"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(II)I" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="102"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weightSum" desc="(Ljava/lang/Iterable;)D" line="107"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="67"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Weights;Lcom/jgalgo/graph/IndexIdMap;)V" line="719"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/Weights;" line="725"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="(I)Ljava/lang/Object;" line="729"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IntGraphImpl$IdIdxMapImpl$3" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphImpl$IdIdxMapImpl;)V" line="575"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToId" desc="()Lcom/jgalgo/graph/WeightsImplInt$IndexMutable;" line="578"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idRemove" desc="(I)V" line="583"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idAdd" desc="(I)V" line="590"><counter type="INSTRUCTION" missed="23" covered="49"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idsClear" desc="()V" line="606"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="575"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="86"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayAbstract$EdgeIterOut" sourcefilename="GraphArrayAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayAbstract;I[II)V" line="171"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="178"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ImmutableIntGraphView" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;)V" line="205"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="211"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="216"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="221"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(I)V" line="226"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(I)V" line="231"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="236"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="241"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(II)Lcom/jgalgo/graph/IEdgeSet;" line="246"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(III)V" line="256"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(I)V" line="261"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="266"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(I)I" line="271"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(I)I" line="276"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="281"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="286"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="292"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="298"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="303"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="308"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="314"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="320"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="325"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="330"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="335"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowSelfEdges" desc="()Z" line="340"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowParallelEdges" desc="()Z" line="345"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lcom/jgalgo/graph/IntGraph;" line="350"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="355"><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="360"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="365"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IntGraph;" line="369"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="159"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="32"/><counter type="COMPLEXITY" missed="4" covered="30"/><counter type="METHOD" missed="3" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IndexToIdSet" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntSet;Lcom/jgalgo/graph/IndexIdMap;)V" line="451"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBuilder" sourcefilename="IndexGraphBuilder.java"><method name="addVertex" desc="(I)V" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/IndexGraphBuilder;" line="240"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/IndexGraphBuilder;" line="249"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraphBuilder;" line="263"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraphBuilder;" line="278"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphBuilderImpl$Undirected" sourcefilename="GraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilder;)V" line="245"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="249"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Z)V" line="253"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/jgalgo/graph/Graph;" line="259"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMutable" desc="()Lcom/jgalgo/graph/Graph;" line="270"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="80"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactory" sourcefilename="IndexGraphFactory.java"><method name="newCopyOf" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/graph/IndexGraph;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/IndexGraphFactory;" line="83"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/IndexGraphFactory;" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraphFactory;" line="107"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/graph/IndexGraphFactory;" line="112"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraph" sourcefilename="IntGraph.java"><method name="addVertex" desc="(Ljava/lang/Integer;)V" line="170"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(Ljava/lang/Integer;)V" line="184"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(Ljava/lang/Integer;)Lcom/jgalgo/graph/EdgeSet;" line="206"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(Ljava/lang/Integer;)Lcom/jgalgo/graph/EdgeSet;" line="228"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(II)I" line="248"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;" line="259"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Lcom/jgalgo/graph/EdgeSet;" line="276"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V" line="312"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Integer;)V" line="326"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="336"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(Ljava/lang/Integer;)V" line="343"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="353"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(Ljava/lang/Integer;)V" line="362"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="372"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(Ljava/lang/Integer;)V" line="381"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(Ljava/lang/Integer;)V" line="398"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="417"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="436"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(II)I" line="454"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;" line="469"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="477"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="485"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lcom/jgalgo/graph/IntGraph;" line="496"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Z)Lcom/jgalgo/graph/IntGraph;" line="501"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableCopy" desc="()Lcom/jgalgo/graph/IntGraph;" line="506"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableCopy" desc="(Z)Lcom/jgalgo/graph/IntGraph;" line="511"><counter type="INSTRUCTION" missed="7" covered="59"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableView" desc="()Lcom/jgalgo/graph/IntGraph;" line="532"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseView" desc="()Lcom/jgalgo/graph/IntGraph;" line="537"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subGraphCopy" desc="(Ljava/util/Collection;Ljava/util/Collection;)Lcom/jgalgo/graph/IntGraph;" line="548"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/IntGraph;" line="561"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/IntGraph;" line="574"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="272"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="72"/><counter type="COMPLEXITY" missed="3" covered="38"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplDouble$IndexImpl" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;D)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)D" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()D" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplBool$IntMapped" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Z" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IZ)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Z" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRBase" sourcefilename="GraphCSRBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdges;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;Z)V" line="39"><counter type="INSTRUCTION" missed="30" covered="181"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraph;Z)V" line="85"><counter type="INSTRUCTION" missed="0" covered="110"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(I)V" line="128"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="133"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoints" desc="()[J" line="138"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(I)V" line="143"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="158"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="164"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="169"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="174"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="180"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="185"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="196"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="202"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableCopy" desc="()Lcom/jgalgo/graph/IndexGraph;" line="207"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="verticesNum" desc="(Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;)I" line="416"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgesNum" desc="(Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;)I" line="421"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="416"/><counter type="BRANCH" missed="6" covered="28"/><counter type="LINE" missed="3" covered="72"/><counter type="COMPLEXITY" missed="5" covered="36"/><counter type="METHOD" missed="1" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsByte" sourcefilename="WeightsByte.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Byte;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Byte;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Byte;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightInt" desc="(Ljava/lang/Object;)I" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Float" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsFloat;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1133"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsFloat;" line="1138"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)F" line="1143"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IF)V" line="1148"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()F" line="1153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphElementSet$Default" sourcefilename="GraphElementSet.java"><method name="&lt;init&gt;" desc="(IZ)V" line="106"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newIdx" desc="()I" line="114"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIdx" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="17" covered="12"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="128"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSwapNeededBeforeRemove" desc="(I)I" line="133"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idxSwap" desc="(II)V" line="138"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lcom/jgalgo/graph/GraphElementSet$Default;" line="144"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyIDSwap" desc="(II)V" line="148"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyIdAdd" desc="(I)V" line="153"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyIdRemove" desc="(I)V" line="158"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notifyIdsClear" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addIdSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIdSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="174"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addIdAddRemoveListener" desc="(Lcom/jgalgo/graph/GraphElementSet$IdAddRemoveListener;)V" line="179"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIdAddRemoveListener" desc="(Lcom/jgalgo/graph/GraphElementSet$IdAddRemoveListener;)V" line="184"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="154"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="4" covered="39"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplLong$ObjMapped" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)J" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;J)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()J" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$10" sourcefilename="IndexGraphFactoryImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl;)V" line="255"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraph;" line="258"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFromBuilder" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/IndexGraph;" line="263"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirectedReindexed$EdgeIterOut" sourcefilename="GraphCSRDirectedReindexed.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirectedReindexed;III)V" line="188"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="194"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedAbstract$EdgeItr" sourcefilename="GraphLinkedAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedAbstract;Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="125"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="130"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="143"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightsByte" sourcefilename="IWeightsByte.java"><method name="get" desc="(Ljava/lang/Integer;)B" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsObj" desc="(I)Ljava/lang/Byte;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;B)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsObj" desc="(ILjava/lang/Byte;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Byte;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Byte;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightInt" desc="(I)I" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weightInt" desc="(Ljava/lang/Integer;)I" line="99"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphFactoryImpl$Impl" sourcefilename="IndexGraphFactoryImpl.java"/><class name="com/jgalgo/graph/WeightsImplLong$IndexImmutable" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IJ)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$IntMapped" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="286"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImpl$IndexAbstract;" line="292"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;Lcom/jgalgo/graph/IndexIntIdMap;)Lcom/jgalgo/graph/WeightsImpl$IntMapped;" line="297"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IndexToIntIdSet" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntSet;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="457"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Z" line="463"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rem" desc="(I)Z" line="469"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="5"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/DataContainer" sourcefilename="DataContainer.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;)V" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIdx" desc="(I)V" line="41"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBase$EdgeIterSourceTarget" sourcefilename="IndexGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase;II)V" line="143"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="165"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="170"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="178"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="184"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="189"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirected$EdgeIterOut" sourcefilename="GraphCSRDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirected;I[III)V" line="115"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="122"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="127"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayDirected$EdgeSetOut" sourcefilename="GraphArrayDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayDirected;I)V" line="276"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="282"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="287"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="292"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplBool$IndexImpl" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;Z)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Z" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Z" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedDirected$EdgeIterOut" sourcefilename="GraphLinkedDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedDirected;Lcom/jgalgo/graph/GraphLinkedDirected$Edge;)V" line="313"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextEdge" desc="(Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)Lcom/jgalgo/graph/GraphLinkedDirected$Edge;" line="319"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayDirected$EdgeIterIn" sourcefilename="GraphArrayDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayDirected;I[II)V" line="331"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="337"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Byte" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsByte;Lcom/jgalgo/graph/IndexIdMap;)V" line="762"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsByte;" line="767"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)B" line="772"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IB)V" line="777"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()B" line="782"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphHashmapUndirected$EdgeSetIn" sourcefilename="GraphHashmapUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphHashmapUndirected;I[Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="308"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="313"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="318"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$IndexAbstract" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIdx" desc="(I)V" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphHashmapAbstract$EdgeIterOut" sourcefilename="GraphHashmapAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphHashmapAbstract;ILit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="212"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="218"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="223"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplByte$ObjMapped" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)B" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;B)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()B" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayAbstract$EdgeIterIn" sourcefilename="GraphArrayAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayAbstract;I[II)V" line="186"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="193"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplDouble$IntMapped" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)D" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ID)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()D" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayUndirected$EdgeSetIn" sourcefilename="GraphArrayUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayUndirected;I)V" line="258"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="264"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="269"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="274"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$Directed" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;II)V" line="387"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="392"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IndexGraphFactory;Z)V" line="398"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="405"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedDirected$Edge" sourcefilename="GraphLinkedDirected.java"><method name="&lt;init&gt;" desc="(III)V" line="342"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphHashmapAbstract$EdgeIterBase" sourcefilename="GraphHashmapAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphHashmapAbstract;ILit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="126"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="138"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="143"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="152"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="158"><counter type="INSTRUCTION" missed="51" covered="149"/><counter type="BRANCH" missed="19" covered="21"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="10" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="51" covered="230"/><counter type="BRANCH" missed="19" covered="25"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="10" covered="19"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedAbstract" sourcefilename="GraphLinkedAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;II)V" line="28"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraph;Z)V" line="34"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraphBuilderImpl;)V" line="43"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edgeEndpoint" desc="(II)I" line="53"><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(I)Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;" line="65"><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="72"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeObj" desc="(II)Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;" line="77"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="87"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(I)I" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(I)I" line="102"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="([Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="182"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="7" covered="40"/><counter type="COMPLEXITY" missed="5" covered="15"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirected$EdgeSetIn" sourcefilename="GraphCSRDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirected;I)V" line="90"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="98"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="103"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="108"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="63"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplDouble$IntImmutableView" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsDouble;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsDouble;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)D" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ID)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()D" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixDirected" sourcefilename="GraphMatrixDirected.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="60"><counter type="INSTRUCTION" missed="7" covered="95"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Directed;)V" line="82"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="101"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="106"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="115"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="124"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="133"><counter type="INSTRUCTION" missed="18" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="145"><counter type="INSTRUCTION" missed="5" covered="72"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="159"><counter type="INSTRUCTION" missed="20" covered="71"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([I)V" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="([I)V" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="([I)V" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([I)V" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([I)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="127" covered="440"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="16" covered="69"/><counter type="COMPLEXITY" missed="10" covered="22"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeights;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="982"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeights;" line="988"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="id" desc="(I)I" line="992"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IntGraphBuilderImpl$Abstract$IndexIdMapImpl" sourcefilename="IntGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/Int2IntMap;Lit/unimi/dsi/fastutil/ints/IntList;Z)V" line="270"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdInt" desc="(I)I" line="278"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(I)I" line="283"><counter type="INSTRUCTION" missed="12" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="26"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Obj" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsObj;Lcom/jgalgo/graph/IndexIdMap;)V" line="735"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsObj;" line="740"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="745"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="750"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()Ljava/lang/Object;" line="755"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphBuilder" sourcefilename="GraphBuilder.java"><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;)Lcom/jgalgo/graph/Weights;" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;)Lcom/jgalgo/graph/Weights;" line="176"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="233"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/GraphBuilder;" line="244"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/graph/GraphBuilder;" line="260"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/Graph;Z)Lcom/jgalgo/graph/GraphBuilder;" line="277"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBuilderImpl$Abstract$1" sourcefilename="IntGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="291"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdInt" desc="(I)I" line="295"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(I)I" line="300"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplLong$IntImmutableView" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsLong;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsLong;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)J" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IJ)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()J" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixUndirected$EdgeSetIn" sourcefilename="GraphMatrixUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphMatrixUndirected;I)V" line="193"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="199"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="204"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayUndirected$EdgeIterOut" sourcefilename="GraphArrayUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayUndirected;I[II)V" line="280"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="286"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ImmutableEdgeSet" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/EdgeSet;)V" line="419"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="425"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="430"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/EdgeIter;" line="435"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphBuilderImpl$Abstract$1" sourcefilename="GraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="227"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToId" desc="(I)Ljava/lang/Object;" line="231"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(Ljava/lang/Object;)I" line="236"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBase$EdgeSetAbstract" sourcefilename="IntGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphBase;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Z" line="157"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplChar$ObjImmutableView" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsChar;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsChar;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)C" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;C)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()C" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphFactory" sourcefilename="GraphFactory.java"><method name="newCopyOf" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/graph/Graph;" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/GraphFactory;" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/GraphFactory;" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/graph/GraphFactory;" line="225"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/graph/GraphFactory;" line="244"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplInt$ObjImmutableView" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsInt;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsInt;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)I" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;I)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()I" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplFloat$IndexImpl" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;F)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplFloat$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)F" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()F" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$Factory" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Z)V" line="685"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;)V" line="689"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newGraph" desc="()Lcom/jgalgo/graph/IntGraph;" line="695"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newCopyOf" desc="(Lcom/jgalgo/graph/Graph;Z)Lcom/jgalgo/graph/IntGraph;" line="705"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/graph/IntGraphBuilder;" line="715"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDirected" desc="(Z)Lcom/jgalgo/graph/IntGraphFactory;" line="722"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowSelfEdges" desc="(Z)Lcom/jgalgo/graph/IntGraphFactory;" line="728"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allowParallelEdges" desc="(Z)Lcom/jgalgo/graph/IntGraphFactory;" line="734"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expectedVerticesNum" desc="(I)Lcom/jgalgo/graph/IntGraphFactory;" line="740"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedEdgesNum" desc="(I)Lcom/jgalgo/graph/IntGraphFactory;" line="746"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addHint" desc="(Lcom/jgalgo/graph/GraphFactory$Hint;)Lcom/jgalgo/graph/IntGraphFactory;" line="752"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeHint" desc="(Lcom/jgalgo/graph/GraphFactory$Hint;)Lcom/jgalgo/graph/IntGraphFactory;" line="758"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/graph/IntGraphFactory;" line="764"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="99"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="11" covered="22"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Short" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsShort;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1052"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsShort;" line="1057"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)S" line="1062"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IS)V" line="1067"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()S" line="1072"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplObj$ObjImmutableView" sourcefilename="WeightsImplObj.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsObj;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsObj;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()Ljava/lang/Object;" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImpl" sourcefilename="WeightsImpl.java"><method name="checkSameSize" desc="(Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/GraphElementSet;)V" line="371"><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqual" desc="(Ljava/util/Set;Lcom/jgalgo/graph/Weights;Lcom/jgalgo/graph/Weights;)Z" line="377"><counter type="INSTRUCTION" missed="39" covered="526"/><counter type="BRANCH" missed="39" covered="111"/><counter type="LINE" missed="20" covered="76"/><counter type="COMPLEXITY" missed="39" covered="37"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="(Ljava/util/Set;Lcom/jgalgo/graph/Weights;)I" line="480"><counter type="INSTRUCTION" missed="463" covered="0"/><counter type="BRANCH" missed="78" covered="0"/><counter type="LINE" missed="69" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="511" covered="532"/><counter type="BRANCH" missed="118" covered="112"/><counter type="LINE" missed="90" covered="78"/><counter type="COMPLEXITY" missed="80" covered="38"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphBaseIndexMutable" sourcefilename="GraphBaseIndexMutable.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;II)V" line="32"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraph;Z)V" line="42"><counter type="INSTRUCTION" missed="3" covered="117"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraphBuilderImpl;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="95"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(I)V" line="104"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertexImpl" desc="(I)V" line="112"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwapBeforeRemove" desc="(I)I" line="117"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="126"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="134"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(I)V" line="145"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="152"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwapBeforeRemove" desc="(I)I" line="157"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="166"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="174"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="183"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="191"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="196"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="201"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="207"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="212"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInternalVerticesContainer" desc="(Lcom/jgalgo/graph/DataContainer;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addInternalEdgesContainer" desc="(Lcom/jgalgo/graph/DataContainer;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="231"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="241"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkVertex" desc="(I)V" line="249"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEdge" desc="(I)V" line="253"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="445"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="1" covered="111"/><counter type="COMPLEXITY" missed="3" covered="37"/><counter type="METHOD" missed="0" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$IndexMutable" sourcefilename="WeightsImpl.java"><method name="newInstance" desc="(Lcom/jgalgo/graph/GraphElementSet;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/WeightsImpl$IndexMutable;" line="65"><counter type="INSTRUCTION" missed="0" covered="155"/><counter type="BRANCH" missed="0" covered="32"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="(Lcom/jgalgo/graph/IWeights;Lcom/jgalgo/graph/GraphElementSet;)Lcom/jgalgo/graph/WeightsImpl$IndexMutable;" line="106"><counter type="INSTRUCTION" missed="11" covered="93"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="248"/><counter type="BRANCH" missed="2" covered="50"/><counter type="LINE" missed="2" covered="47"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightsBool" sourcefilename="IWeightsBool.java"><method name="get" desc="(Ljava/lang/Integer;)Z" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(I)Ljava/lang/Boolean;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;Z)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(ILjava/lang/Boolean;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Boolean;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Boolean;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightFunctions" sourcefilename="WeightFunctions.java"><method name="localEdgeWeightFunction" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/graph/IWeightFunction;" line="51"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="localEdgeWeightFunction" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;)Lcom/jgalgo/graph/IWeightFunctionInt;" line="93"><counter type="INSTRUCTION" missed="26" covered="10"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIntGraphWeightFunc" desc="(Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/graph/IWeightFunction;" line="110"><counter type="INSTRUCTION" missed="14" covered="16"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$asIntGraphWeightFunc$1" desc="(Lcom/jgalgo/graph/WeightFunction;I)D" line="120"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asIntGraphWeightFunc$0" desc="(Lcom/jgalgo/graph/WeightFunctionInt;I)I" line="117"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="92"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="9" covered="11"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexSwapListener" sourcefilename="IndexSwapListener.java"/><class name="com/jgalgo/graph/IndexGraphBuilderImpl$Directed" sourcefilename="IndexGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="()V" line="380"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="383"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reIndexAndBuild" desc="(ZZ)Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph;" line="389"><counter type="INSTRUCTION" missed="8" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reIndexAndBuildMutable" desc="(ZZ)Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph;" line="399"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMap" sourcefilename="IndexIdMap.java"/><class name="com/jgalgo/graph/IndexIdMaps$IndexToIdIterator" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;Lcom/jgalgo/graph/IndexIdMap;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexIt" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="100"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="109"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="119"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="24"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Char" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsChar;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsChar;" line="1219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)C" line="1224"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IC)V" line="1229"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()C" line="1234"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Double" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsDouble;Lcom/jgalgo/graph/IndexIdMap;)V" line="897"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsDouble;" line="902"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)D" line="907"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ID)V" line="912"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()D" line="917"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphArrayUndirected$EdgeSetOut" sourcefilename="GraphArrayUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayUndirected;I)V" line="237"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="243"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="248"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="253"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexIterator" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="195"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="200"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="205"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;II)V" line="41"><counter type="INSTRUCTION" missed="16" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IndexGraphFactory;Z)V" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="92"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(I)V" line="98"><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(I)V" line="109"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="115"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="120"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(II)I" line="125"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(II)Lcom/jgalgo/graph/IEdgeSet;" line="133"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="141"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(III)V" line="149"><counter type="INSTRUCTION" missed="12" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(I)V" line="162"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="168"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="174"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="179"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(I)I" line="184"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(I)I" line="191"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(II)I" line="198"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="211"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="217"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="227"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="233"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="proneRemovedVerticesWeights" desc="()V" line="238"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="247"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="258"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="266"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="273"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="279"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="proneRemovedEdgesWeights" desc="()V" line="284"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="371"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowSelfEdges" desc="()Z" line="376"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowParallelEdges" desc="()Z" line="381"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$proneRemovedEdgesWeights$3" desc="(Ljava/util/List;Lcom/jgalgo/graph/WeightsImpl$Index;)Z" line="287"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEdgesIWeights$2" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$IntMapped;" line="252"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$proneRemovedVerticesWeights$1" desc="(Ljava/util/List;Lcom/jgalgo/graph/WeightsImpl$Index;)Z" line="241"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getVerticesIWeights$0" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$IntMapped;" line="222"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="544"/><counter type="BRANCH" missed="8" covered="18"/><counter type="LINE" missed="4" covered="119"/><counter type="COMPLEXITY" missed="6" covered="51"/><counter type="METHOD" missed="0" covered="44"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplDouble$IndexMutable" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;D)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplDouble$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ID)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="71"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Bool" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsBool;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="1187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsBool;" line="1192"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Z" line="1197"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IZ)V" line="1202"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()Z" line="1207"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplChar$IntImmutableView" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsChar;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsChar;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)C" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IC)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()C" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixAbstract$EdgeIterInUndirected" sourcefilename="GraphMatrixAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphMatrixAbstract;I)V" line="289"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="302"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="307"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="315"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advanceUntilNext" desc="(I)V" line="320"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="332"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="337"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="342"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphElementSet" sourcefilename="GraphElementSet.java"><method name="&lt;init&gt;" desc="(IZ)V" line="32"><counter type="INSTRUCTION" missed="6" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="56"><counter type="INSTRUCTION" missed="5" covered="19"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIdx" desc="(I)V" line="70"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="188"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="68"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplLong$ObjImmutableView" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsLong;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsLong;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)J" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;J)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()J" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphCSRBase$EdgeIterAbstract" sourcefilename="GraphCSRBase.java"><method name="&lt;init&gt;" desc="([III)V" line="215"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="225"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="230"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="236"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirectedReindexed$EdgeIterOutAbstract" sourcefilename="GraphCSRDirectedReindexed.java"><method name="&lt;init&gt;" desc="(III)V" line="158"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="166"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="171"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="177"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="183"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs" sourcefilename="Graphs.java"><method name="immutableView" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraph;" line="530"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableView" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/graph/IntGraph;" line="534"><counter type="INSTRUCTION" missed="4" covered="13"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableView" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/graph/Graph;" line="541"><counter type="INSTRUCTION" missed="14" covered="10"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseView" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IndexGraph;" line="1048"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseView" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/graph/IntGraph;" line="1052"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseView" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/graph/Graph;" line="1059"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getIndexGraphImpl" desc="(Lcom/jgalgo/graph/IndexGraph;)Ljava/lang/String;" line="1068"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subGraph" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;)Lcom/jgalgo/graph/Graph;" line="1209"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subGraph" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;Ljava/util/Collection;)Lcom/jgalgo/graph/Graph;" line="1248"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subGraph" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;Ljava/util/Collection;ZZ)Lcom/jgalgo/graph/Graph;" line="1295"><counter type="INSTRUCTION" missed="201" covered="29"/><counter type="BRANCH" missed="35" covered="5"/><counter type="LINE" missed="36" covered="7"/><counter type="COMPLEXITY" missed="19" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subGraph" desc="(Lcom/jgalgo/graph/IntGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;ZZ)Lcom/jgalgo/graph/IntGraph;" line="1389"><counter type="INSTRUCTION" missed="111" covered="88"/><counter type="BRANCH" missed="17" covered="13"/><counter type="LINE" missed="18" covered="17"/><counter type="COMPLEXITY" missed="12" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyWeights" desc="(Lcom/jgalgo/graph/Weights;Lcom/jgalgo/graph/Weights;Ljava/lang/Class;Ljava/util/Collection;)V" line="1437"><counter type="INSTRUCTION" missed="239" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="copyWeights" desc="(Lcom/jgalgo/graph/IWeights;Lcom/jgalgo/graph/IWeights;Ljava/lang/Class;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="1489"><counter type="INSTRUCTION" missed="257" covered="0"/><counter type="BRANCH" missed="36" covered="0"/><counter type="LINE" missed="48" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWeightsType" desc="(Lcom/jgalgo/graph/Weights;)Ljava/lang/Class;" line="1540"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="randVertex" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Random;)Ljava/lang/Object;" line="1570"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randVertex" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)I" line="1581"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randEdge" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Random;)Ljava/lang/Object;" line="1593"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randEdge" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Random;)I" line="1604"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1086"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="917" covered="263"/><counter type="BRANCH" missed="157" covered="41"/><counter type="LINE" missed="180" covered="54"/><counter type="COMPLEXITY" missed="93" covered="25"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirectedReindexed$EdgeSetOut" sourcefilename="GraphCSRDirectedReindexed.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirectedReindexed;I)V" line="105"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="118"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="123"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="40"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IntIdToIndexWeights$Obj" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsObj;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="998"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/IWeightsObj;" line="1003"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="1008"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ILjava/lang/Object;)V" line="1013"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()Ljava/lang/Object;" line="1018"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexGraphBuilderImpl$EdgesSetProvidedIdx$1" sourcefilename="IndexGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$EdgesSetProvidedIdx;)V" line="338"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="344"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextInt" desc="()I" line="349"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IWeightsDouble" sourcefilename="IWeightsDouble.java"><method name="get" desc="(Ljava/lang/Integer;)D" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(I)Ljava/lang/Double;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;D)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(ILjava/lang/Double;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Double;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Double;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(I)D" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(Ljava/lang/Integer;)D" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRUndirected$EdgeSetOut" sourcefilename="GraphCSRUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRUndirected;I)V" line="47"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="65"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="43"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedDirected$EdgeSetOut" sourcefilename="GraphLinkedDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedDirected;I)V" line="265"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="271"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="276"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixUndirected$EdgeSetOut" sourcefilename="GraphMatrixUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphMatrixUndirected;I)V" line="177"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="183"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="188"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Short" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsShort;Lcom/jgalgo/graph/IndexIdMap;)V" line="789"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsShort;" line="794"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)S" line="799"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IS)V" line="804"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()S" line="809"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplLong$IndexImpl" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;J)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)J" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()J" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ImmutableGraphView" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;)V" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertices" desc="()Ljava/util/Set;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edges" desc="()Ljava/util/Set;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVertex" desc="(Ljava/lang/Object;)V" line="67"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVertex" desc="(Ljava/lang/Object;)V" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="87"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="92"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEdge" desc="(Ljava/lang/Object;)V" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reverseEdge" desc="(Ljava/lang/Object;)V" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edgeSource" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edgeTarget" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="112"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="117"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearEdges" desc="()V" line="122"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="128"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="144"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="150"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="156"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="161"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="166"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isDirected" desc="()Z" line="171"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAllowSelfEdges" desc="()Z" line="176"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAllowParallelEdges" desc="()Z" line="181"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="186"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="191"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="196"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="157" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="30" covered="0"/><counter type="METHOD" missed="29" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplBool$IntImmutableView" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsBool;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsBool;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Z" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IZ)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Z" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesDirected" sourcefilename="GraphCSRBase.java"><method name="valueOf" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;)Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesDirected;" line="337"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesDirected;" line="341"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;)V" line="344"><counter type="INSTRUCTION" missed="29" covered="327"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="1" covered="51"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="331"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="35" covered="334"/><counter type="BRANCH" missed="6" covered="20"/><counter type="LINE" missed="2" covered="53"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightsChar" sourcefilename="IWeightsChar.java"><method name="get" desc="(Ljava/lang/Integer;)C" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAsObj" desc="(I)Ljava/lang/Character;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;C)V" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsObj" desc="(ILjava/lang/Character;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Character;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Character;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="19"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ImmutableIEdgeIter" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IEdgeIter;)V" line="499"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="505"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="510"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="515"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="520"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="525"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirected$EdgeIterIn" sourcefilename="GraphCSRDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirected;I[III)V" line="134"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="141"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixUndirected" sourcefilename="GraphMatrixUndirected.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="50"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="56"><counter type="INSTRUCTION" missed="7" covered="60"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Undirected;)V" line="71"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdge" desc="(II)I" line="85"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="97"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="109"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="122"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="128"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="132"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="142"><counter type="INSTRUCTION" missed="26" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="154"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="165"><counter type="INSTRUCTION" missed="22" covered="49"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([I)V" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([I)V" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([I)V" line="60"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([I)V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="122" covered="341"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="17" covered="63"/><counter type="COMPLEXITY" missed="10" covered="22"/><counter type="METHOD" missed="4" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBase$Capabilities" sourcefilename="IndexGraphBase.java"><method name="&lt;init&gt;" desc="(ZZZ)V" line="34"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(ZZZ)Lcom/jgalgo/graph/IndexGraphBase$Capabilities;" line="41"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Int" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsInt;Lcom/jgalgo/graph/IndexIdMap;)V" line="816"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsInt;" line="821"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)I" line="826"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(II)V" line="831"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()I" line="836"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/Graphs$ReversedEdgeSet" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/EdgeSet;)V" line="907"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="913"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="918"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="923"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="928"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/EdgeIter;" line="933"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplShort$IntMapped" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)S" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IS)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()S" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$EdgeSetSourceTargetSingleton" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;III)V" line="1107"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Z" line="1116"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="1125"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="1130"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="1135"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="1143"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="51"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$IndexMutable$Manager" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(I)V" line="133"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImpl$IndexMutable$Manager;Lcom/jgalgo/graph/GraphElementSet;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addWeights" desc="(Ljava/lang/String;Lcom/jgalgo/graph/WeightsImpl$IndexMutable;)V" line="147"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeWeights" desc="(Ljava/lang/String;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="160"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightsKeys" desc="()Ljava/util/Set;" line="164"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="168"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swapElements" desc="(II)V" line="177"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearElement" desc="(I)V" line="182"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearContainers" desc="()V" line="187"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="162"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRUndirected" sourcefilename="GraphCSRUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl;Lcom/jgalgo/graph/GraphCSRBase$BuilderProcessEdgesUndirected;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="29"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="35"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBuilderImpl$Directed" sourcefilename="IntGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilder;)V" line="347"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="351"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Z)V" line="355"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/graph/IntGraph;" line="361"><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMutable" desc="()Lcom/jgalgo/graph/IntGraph;" line="372"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="90"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBuilder$ReIndexedGraph" sourcefilename="IndexGraphBuilder.java"/><class name="com/jgalgo/graph/IndexIdMaps$IndexToIdEdgeIter" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/IEdgeIter;)V" line="246"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexIt" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="252"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eiMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="256"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekNext" desc="()Ljava/lang/Object;" line="261"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="source" desc="()Ljava/lang/Object;" line="266"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="()Ljava/lang/Object;" line="271"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="10"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeights" sourcefilename="IWeights.java"><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createExternalVerticesWeights" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/lang/Class;)Lcom/jgalgo/graph/IWeights;" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExternalVerticesWeights" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/IWeights;" line="163"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExternalEdgesWeights" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/lang/Class;)Lcom/jgalgo/graph/IWeights;" line="190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createExternalEdgesWeights" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/IWeights;" line="211"><counter type="INSTRUCTION" missed="5" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="54"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphHashmapDirected$EdgeSetIn" sourcefilename="GraphHashmapDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphHashmapDirected;I[Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="377"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="384"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="389"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="394"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;II)V" line="35"><counter type="INSTRUCTION" missed="16" covered="35"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/IndexIdMap;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/IndexGraphFactory;Z)V" line="55"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Ljava/util/Set;" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Ljava/util/Set;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Ljava/lang/Object;)V" line="86"><counter type="INSTRUCTION" missed="11" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(Ljava/lang/Object;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="103"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="108"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="121"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="137"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Object;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(Ljava/lang/Object;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(Ljava/lang/Object;)V" line="162"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeInEdgesOf" desc="(Ljava/lang/Object;)V" line="167"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edgeSource" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="172"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="186"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="194"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearEdges" desc="()V" line="199"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="205"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="215"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="221"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="proneRemovedVerticesWeights" desc="()V" line="226"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="235"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="246"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="253"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="260"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="266"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="proneRemovedEdgesWeights" desc="()V" line="271"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="360"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowSelfEdges" desc="()Z" line="365"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAllowParallelEdges" desc="()Z" line="370"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$proneRemovedEdgesWeights$3" desc="(Ljava/util/List;Lcom/jgalgo/graph/WeightsImpl$Index;)Z" line="274"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getEdgesWeights$2" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$ObjMapped;" line="240"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$proneRemovedVerticesWeights$1" desc="(Ljava/util/List;Lcom/jgalgo/graph/WeightsImpl$Index;)Z" line="229"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getVerticesWeights$0" desc="(Lcom/jgalgo/graph/WeightsImpl$Index;)Lcom/jgalgo/graph/WeightsImpl$ObjMapped;" line="210"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="114" covered="438"/><counter type="BRANCH" missed="12" covered="14"/><counter type="LINE" missed="24" covered="93"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="9" covered="33"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graph" sourcefilename="Graph.java"><method name="getEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="229"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeEdgesOf" desc="(Ljava/lang/Object;)V" line="279"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeOutEdgesOf" desc="(Ljava/lang/Object;)V" line="290"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeInEdgesOf" desc="(Ljava/lang/Object;)V" line="303"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edgeEndpoint" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="361"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;)Lcom/jgalgo/graph/Weights;" line="440"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;)Lcom/jgalgo/graph/Weights;" line="551"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lcom/jgalgo/graph/Graph;" line="711"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Z)Lcom/jgalgo/graph/Graph;" line="732"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableCopy" desc="()Lcom/jgalgo/graph/Graph;" line="756"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="immutableCopy" desc="(Z)Lcom/jgalgo/graph/Graph;" line="782"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="immutableView" desc="()Lcom/jgalgo/graph/Graph;" line="810"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseView" desc="()Lcom/jgalgo/graph/Graph;" line="827"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subGraphCopy" desc="(Ljava/util/Collection;Ljava/util/Collection;)Lcom/jgalgo/graph/Graph;" line="859"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/Graph;" line="874"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/Graph;" line="889"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="161" covered="34"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="39" covered="8"/><counter type="COMPLEXITY" missed="17" covered="8"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl$Directed" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;II)V" line="376"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/IndexIdMap;)V" line="381"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/IndexGraphFactory;Z)V" line="387"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(Ljava/lang/Object;)V" line="394"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="27"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBuilderImpl" sourcefilename="IndexGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="35"><counter type="INSTRUCTION" missed="44" covered="80"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IndexGraphBuilderImpl;" line="81"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDefaultImpls" desc="()V" line="86"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMutableImpl" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl$Impl;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setImmutableImpl" desc="(Lcom/jgalgo/graph/IndexGraphFactoryImpl$Impl;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="106"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="120"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAddEdgeWithoutId" desc="()Z" line="126"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canAddEdgeWithId" desc="()Z" line="130"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="135"><counter type="INSTRUCTION" missed="24" covered="61"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(III)V" line="155"><counter type="INSTRUCTION" missed="22" covered="102"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="4" covered="17"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedVerticesNum" desc="(I)V" line="180"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expectedEdgesNum" desc="(I)V" line="185"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="194"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(I)I" line="205"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(I)I" line="209"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(II)I" line="213"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEdgeSource" desc="(II)V" line="224"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdgeTarget" desc="(II)V" line="228"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSourceIndex" desc="(I)I" line="232"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTargetIndex" desc="(I)I" line="236"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateUserProvidedIdsBeforeBuild" desc="()V" line="240"><counter type="INSTRUCTION" missed="34" covered="100"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/graph/IndexGraph;" line="280"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMutable" desc="()Lcom/jgalgo/graph/IndexGraph;" line="286"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="292"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="298"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="307"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdgesIWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/IWeights;" line="312"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="318"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="327"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$validateUserProvidedIdsBeforeBuild$0" desc="(I)Z" line="275"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="167" covered="650"/><counter type="BRANCH" missed="27" covered="47"/><counter type="LINE" missed="23" covered="142"/><counter type="COMPLEXITY" missed="24" covered="47"/><counter type="METHOD" missed="4" covered="30"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraphBuilderImpl$ReIndexedGraphImpl" sourcefilename="IndexGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Ljava/util/Optional;Ljava/util/Optional;)V" line="411"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="419"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verticesReIndexing" desc="()Ljava/util/Optional;" line="424"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgesReIndexing" desc="()Ljava/util/Optional;" line="429"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedUndirected$EdgeSetOut" sourcefilename="GraphLinkedUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedUndirected;I)V" line="292"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="298"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="303"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBuilderImpl$Undirected" sourcefilename="IntGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilder;)V" line="309"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="313"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Z)V" line="317"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/graph/IntGraph;" line="323"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMutable" desc="()Lcom/jgalgo/graph/IntGraph;" line="334"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="87"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBuilderImpl" sourcefilename="IntGraphBuilderImpl.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IntGraph;Z)Lcom/jgalgo/graph/IntGraphBuilder;" line="33"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplDouble$ObjImmutableView" sourcefilename="WeightsImplDouble.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsDouble;)V" line="209"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsDouble;" line="214"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)D" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;D)V" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()D" line="229"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IntGraphBuilder" sourcefilename="IntGraphBuilder.java"><method name="addVertex" desc="(Ljava/lang/Integer;)V" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdge" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V" line="107"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/IntGraphBuilder;" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/IntGraphBuilder;" line="169"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/graph/IntGraphBuilder;" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/IntGraph;Z)Lcom/jgalgo/graph/IntGraphBuilder;" line="198"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexCollection" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;Lcom/jgalgo/graph/IndexIdMap;)V" line="496"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="503"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="508"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="513"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="518"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="523"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rem" desc="(I)Z" line="528"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="30"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayUndirected" sourcefilename="GraphArrayUndirected.java"><method name="&lt;init&gt;" desc="(II)V" line="52"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="62"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Undirected;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertexImpl" desc="(I)V" line="117"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="125"><counter type="INSTRUCTION" missed="18" covered="65"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="152"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="158"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="167"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="176"><counter type="INSTRUCTION" missed="7" covered="96"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="203"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="210"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="215"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="221"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clearEdges" desc="()V" line="225"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="231"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([I)V" line="99"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$6" desc="([[I)V" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$5" desc="([I)V" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([[I)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([[I)V" line="67"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([I)V" line="55"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([[I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="563"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="3" covered="110"/><counter type="COMPLEXITY" missed="4" covered="37"/><counter type="METHOD" missed="1" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedUndirected$EdgeIterOut" sourcefilename="GraphLinkedUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphLinkedUndirected;ILcom/jgalgo/graph/GraphLinkedUndirected$Edge;)V" line="327"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextEdge" desc="(Lcom/jgalgo/graph/GraphLinkedAbstract$Edge;)Lcom/jgalgo/graph/GraphLinkedUndirected$Edge;" line="334"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="339"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="344"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightFunctionInt" sourcefilename="WeightFunctionInt.java"><method name="weight" desc="(Ljava/lang/Object;)D" line="72"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="77"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weightSum" desc="(Ljava/lang/Iterable;)D" line="82"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphBase$EdgeSetInDirected" sourcefilename="IntGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphBase;I)V" line="226"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="232"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="237"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphHashmapDirected" sourcefilename="GraphHashmapDirected.java"><method name="&lt;init&gt;" desc="(II)V" line="36"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Z)V" line="47"><counter type="INSTRUCTION" missed="16" covered="183"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="32"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilderImpl$Directed;)V" line="96"><counter type="INSTRUCTION" missed="88" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeVertexImpl" desc="(I)V" line="118"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="128"><counter type="INSTRUCTION" missed="304" covered="203"/><counter type="BRANCH" missed="50" covered="16"/><counter type="LINE" missed="39" covered="46"/><counter type="COMPLEXITY" missed="29" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(II)I" line="234"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="241"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="247"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="253"><counter type="INSTRUCTION" missed="7" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="266"><counter type="INSTRUCTION" missed="14" covered="28"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="276"><counter type="INSTRUCTION" missed="75" covered="62"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="296"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="304"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge" desc="(I)V" line="312"><counter type="INSTRUCTION" missed="35" covered="56"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="334"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="344"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$7" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$6" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$5" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$4" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$2" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="547" covered="741"/><counter type="BRANCH" missed="90" covered="42"/><counter type="LINE" missed="58" covered="161"/><counter type="COMPLEXITY" missed="54" covered="37"/><counter type="METHOD" missed="3" covered="22"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplLong" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsLong" sourcefilename="WeightsLong.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Long;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Long;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Long;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weight" desc="(Ljava/lang/Object;)D" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/DataContainer$Int" sourcefilename="DataContainer.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;ILjava/util/function/Consumer;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(II)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()I" line="151"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="capacity" desc="()I" line="156"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="161"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="169"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="([III)V" line="175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="179"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="([II)V" line="183"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="187"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="([I)V" line="191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Lcom/jgalgo/graph/GraphElementSet;Ljava/util/function/Consumer;)Lcom/jgalgo/graph/DataContainer$Int;" line="195"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="125"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="139"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="38"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl$EdgeIterMapped" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphImpl;Lcom/jgalgo/graph/IEdgeIter;)V" line="319"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="325"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="330"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNext" desc="()Ljava/lang/Object;" line="336"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="342"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="target" desc="()Ljava/lang/Object;" line="347"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Ljava/lang/Object;" line="353"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="43"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplShort" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/IndexGraphBase" sourcefilename="IndexGraphBase.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowSelfEdges" desc="()Z" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowParallelEdges" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(II)Lcom/jgalgo/graph/IEdgeSet;" line="67"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightsObj" sourcefilename="IWeightsObj.java"><method name="get" desc="(Ljava/lang/Integer;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(I)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(ILjava/lang/Object;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAsObj" desc="(Ljava/lang/Integer;)Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Integer;Ljava/lang/Object;)V" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexIterator" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;Lcom/jgalgo/graph/IndexIdMap;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="169"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="174"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="179"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="24"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$IdIdxMapCustom" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;IZLjava/util/function/ToIntFunction;)V" line="667"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexIntIdMap;Lcom/jgalgo/graph/GraphElementSet;ZLjava/util/function/ToIntFunction;)V" line="672"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextID" desc="()I" line="678"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/GraphCSRBase$BuilderProcessEdges" sourcefilename="GraphCSRBase.java"><method name="&lt;init&gt;" desc="()V" line="241"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRDirected$EdgeSetOut" sourcefilename="GraphCSRDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRDirected;I)V" line="64"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="77"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="43"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphLinkedAbstract$Edge" sourcefilename="GraphLinkedAbstract.java"><method name="&lt;init&gt;" desc="(III)V" line="155"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphCSRUndirected$EdgeIterIn" sourcefilename="GraphCSRUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphCSRUndirected;I[III)V" line="117"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IdToIndexWeights$Long" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsLong;Lcom/jgalgo/graph/IndexIdMap;)V" line="843"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idxWeights" desc="()Lcom/jgalgo/graph/WeightsLong;" line="848"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)J" line="853"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IJ)V" line="858"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()J" line="863"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplBool$ObjMapped" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Z" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;Z)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()Z" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImpl$IndexImmutable$Builder" sourcefilename="WeightsImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="255"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyAndAddWeights" desc="(Ljava/lang/String;Lcom/jgalgo/graph/IWeights;)V" line="261"><counter type="INSTRUCTION" missed="6" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyAndAddWeightsReindexed" desc="(Ljava/lang/String;Lcom/jgalgo/graph/IWeights;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="268"><counter type="INSTRUCTION" missed="6" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Ljava/util/Map;" line="275"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplLong$IntMapped" sourcefilename="WeightsImplLong.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplLong$IndexImpl;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)J" line="141"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IJ)V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()J" line="151"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphMatrixAbstract" sourcefilename="GraphMatrixAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;II)V" line="34"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraph;Z)V" line="45"><counter type="INSTRUCTION" missed="8" covered="165"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBase$Capabilities;Lcom/jgalgo/graph/IndexGraphBuilderImpl;)V" line="89"><counter type="INSTRUCTION" missed="196" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVertex" desc="()I" line="134"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertexImpl" desc="(I)V" line="146"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSwap" desc="(II)V" line="159"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(II)I" line="168"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(II)Lcom/jgalgo/graph/IEdgeSet;" line="173"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="179"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeImpl" desc="(I)V" line="188"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSwap" desc="(II)V" line="194"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseEdge0" desc="(I)V" line="199"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoints" desc="()[J" line="204"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="209"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="220"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$3" desc="([J)V" line="126"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$2" desc="([J)V" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$1" desc="([J)V" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="([J)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="213" covered="408"/><counter type="BRANCH" missed="24" covered="20"/><counter type="LINE" missed="35" covered="86"/><counter type="COMPLEXITY" missed="15" covered="27"/><counter type="METHOD" missed="2" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsShort" sourcefilename="WeightsShort.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Short;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Short;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Short;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightInt" desc="(Ljava/lang/Object;)I" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayUndirected$EdgeIterIn" sourcefilename="GraphArrayUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayUndirected;I[II)V" line="292"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="298"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphImpl$EdgeSetMapped" sourcefilename="GraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphImpl;Lcom/jgalgo/graph/IEdgeSet;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="288"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="295"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="301"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="306"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/EdgeIter;" line="311"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="24"/><counter type="LINE" missed="6" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$IndexGraphMapIdentify" sourcefilename="Graphs.java"><method name="indexToIdInt" desc="(I)I" line="1091"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(I)I" line="1096"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexGraph" sourcefilename="IndexGraph.java"><method name="addVertex" desc="(I)V" line="88"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(III)V" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="134"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="146"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="216"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="227"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="238"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lcom/jgalgo/graph/IndexGraph;" line="243"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Z)Lcom/jgalgo/graph/IndexGraph;" line="248"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="immutableCopy" desc="()Lcom/jgalgo/graph/IndexGraph;" line="253"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableCopy" desc="(Z)Lcom/jgalgo/graph/IndexGraph;" line="258"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableView" desc="()Lcom/jgalgo/graph/IndexGraph;" line="267"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reverseView" desc="()Lcom/jgalgo/graph/IndexGraph;" line="272"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newUndirected" desc="()Lcom/jgalgo/graph/IndexGraph;" line="285"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newDirected" desc="()Lcom/jgalgo/graph/IndexGraph;" line="298"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ReversedIEdgeSet" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IEdgeSet;)V" line="941"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="947"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="952"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(I)Z" line="957"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="962"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="967"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="24"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphHashmapAbstract$EdgeIterIn" sourcefilename="GraphHashmapAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphHashmapAbstract;ILit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="229"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="235"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="240"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplShort$IndexMutable" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;S)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IS)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphBuilderImpl" sourcefilename="GraphBuilderImpl.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newFrom" desc="(Lcom/jgalgo/graph/Graph;Z)Lcom/jgalgo/graph/GraphBuilder;" line="32"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/graph/WeightsImplInt$ObjMapped" sourcefilename="WeightsImplInt.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplInt$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)I" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;I)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()I" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplChar$IndexImmutable" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IC)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplByte$IndexImmutable" sourcefilename="WeightsImplByte.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplByte$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IB)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphElementSet$FixedSize" sourcefilename="GraphElementSet.java"><method name="&lt;init&gt;" desc="(IZ)V" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addIdSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIdSwapListener" desc="(Lcom/jgalgo/graph/IndexSwapListener;)V" line="93"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addIdAddRemoveListener" desc="(Lcom/jgalgo/graph/GraphElementSet$IdAddRemoveListener;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeIdAddRemoveListener" desc="(Lcom/jgalgo/graph/GraphElementSet$IdAddRemoveListener;)V" line="101"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphBuilderImpl$Directed" sourcefilename="GraphBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraphBuilder;)V" line="283"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="287"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Z)V" line="291"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/jgalgo/graph/Graph;" line="297"><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildMutable" desc="()Lcom/jgalgo/graph/Graph;" line="308"><counter type="INSTRUCTION" missed="12" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="83"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="18"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplChar$ObjMapped" sourcefilename="WeightsImplChar.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;Lcom/jgalgo/graph/IndexIdMap;)V" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/WeightsImplChar$IndexImpl;" line="162"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)C" line="167"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;C)V" line="172"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()C" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/DataContainer$Manager" sourcefilename="DataContainer.java"><method name="&lt;init&gt;" desc="(I)V" line="293"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addContainer" desc="(Lcom/jgalgo/graph/DataContainer;)V" line="301"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureCapacity" desc="(I)V" line="307"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplBool$IndexImmutable" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;Lcom/jgalgo/graph/GraphElementSet$FixedSize;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IZ)V" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ImmutableIndexGraphView" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="376"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IndexGraphImpl;" line="383"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="()Lcom/jgalgo/graph/IndexGraph;" line="388"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertices" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="393"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lcom/jgalgo/graph/GraphElementSet;" line="398"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(I)V" line="404"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addEdge" desc="(III)V" line="410"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/Graphs$ReversedIEdgeIter" sourcefilename="Graphs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IEdgeIter;)V" line="1012"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="1018"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="1023"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="1028"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="1033"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="1038"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="1043"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplFloat$IntImmutableView" sourcefilename="WeightsImplFloat.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsFloat;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weights" desc="()Lcom/jgalgo/graph/IWeightsFloat;" line="188"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)F" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IF)V" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()F" line="203"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IWeightFunction" sourcefilename="IWeightFunction.java"><method name="weight" desc="(Ljava/lang/Integer;)D" line="93"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compare" desc="(II)I" line="101"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)I" line="107"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="weightSum" desc="(Ljava/lang/Iterable;)D" line="112"><counter type="INSTRUCTION" missed="18" covered="27"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightSum" desc="(Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntIterable;)D" line="135"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(I)I" line="153"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="40"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="12" covered="7"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/DataContainer$Long" sourcefilename="DataContainer.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;JLjava/util/function/Consumer;)V" line="211"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/DataContainer$Long;Lcom/jgalgo/graph/GraphElementSet;Ljava/util/function/Consumer;)V" line="220"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)J" line="231"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(IJ)V" line="236"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultWeight" desc="()J" line="241"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="capacity" desc="()I" line="246"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="251"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="([JII)V" line="265"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="([JI)V" line="275"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="([J)V" line="283"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copy" desc="(Lcom/jgalgo/graph/GraphElementSet;Ljava/util/function/Consumer;)Lcom/jgalgo/graph/DataContainer$Long;" line="287"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="204"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="110"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="7" covered="30"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplBool$IndexMutable" sourcefilename="WeightsImplBool.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;Z)V" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplBool$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IZ)V" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="capacity" desc="()I" line="100"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(I)V" line="105"><counter type="INSTRUCTION" missed="7" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="swap" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="(I)V" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="125"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIntIdMap" sourcefilename="IndexIntIdMap.java"><method name="indexToId" desc="(I)Ljava/lang/Integer;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(Ljava/lang/Integer;)I" line="84"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsImplShort$IndexImpl" sourcefilename="WeightsImplShort.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphElementSet;S)V" line="30"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsImplShort$IndexImpl;Lcom/jgalgo/graph/GraphElementSet;Lcom/jgalgo/graph/IndexGraphBuilder$ReIndexingMap;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)S" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()S" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IntGraphImpl$EdgeIterMapped" sourcefilename="IntGraphImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraphImpl;Lcom/jgalgo/graph/IEdgeIter;)V" line="330"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="336"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="341"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="347"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="353"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="358"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="364"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/EdgeSet" sourcefilename="EdgeSet.java"/><class name="com/jgalgo/graph/IndexIdMaps$IndexToIntIdIterator" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexIt" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="138"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="143"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="148"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="153"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="24"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/WeightsInt" sourcefilename="WeightsInt.java"><method name="getAsObj" desc="(Ljava/lang/Object;)Ljava/lang/Integer;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAsObj" desc="(Ljava/lang/Object;Ljava/lang/Integer;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeightAsObj" desc="()Ljava/lang/Integer;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="weightInt" desc="(Ljava/lang/Object;)I" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/IndexIdMaps$IndexToIdList" sourcefilename="IndexIdMaps.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntList;Lcom/jgalgo/graph/IndexIdMap;)V" line="607"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="614"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="619"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="624"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="629"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="634"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="639"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="644"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="649"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)Ljava/lang/Object;" line="654"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="25"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="7" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphHashmapUndirected$EdgeSetOut" sourcefilename="GraphHashmapUndirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphHashmapUndirected;I[Lit/unimi/dsi/fastutil/ints/Int2IntMap;)V" line="277"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="284"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="289"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="294"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/graph/GraphArrayDirected$EdgeSetIn" sourcefilename="GraphArrayDirected.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/GraphArrayDirected;I)V" line="297"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="303"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="308"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="313"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="41"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GraphImpl.java"><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="8" ci="1" mb="2" cb="0"/><line nr="40" mi="8" ci="1" mb="2" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="1" cb="1"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="1" cb="1"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="10" ci="0" mb="2" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="1" cb="1"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="1" cb="1"/><line nr="140" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="7" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="7" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="4" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="223" mi="1" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="12" mb="0" cb="2"/><line nr="228" mi="0" ci="8" mb="0" cb="0"/><line nr="229" mi="2" ci="13" mb="1" cb="1"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="2"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="2" ci="0" mb="0" cb="0"/><line nr="268" mi="1" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="12" mb="0" cb="2"/><line nr="273" mi="0" ci="8" mb="0" cb="0"/><line nr="274" mi="2" ci="13" mb="1" cb="1"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="6" ci="0" mb="0" cb="0"/><line nr="289" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="6" ci="0" mb="0" cb="0"/><line nr="296" mi="5" ci="0" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="0" ci="9" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="6" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="343" mi="1" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="6" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="378" mi="0" ci="1" mb="0" cb="0"/><line nr="381" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="1" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="5" mb="0" cb="0"/><line nr="403" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="5" mb="0" cb="0"/><line nr="408" mi="0" ci="2" mb="0" cb="0"/><line nr="409" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="0"/><line nr="416" mi="0" ci="1" mb="0" cb="0"/><line nr="420" mi="5" ci="0" mb="0" cb="0"/><line nr="421" mi="4" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="0" ci="1" mb="0" cb="0"/><line nr="430" mi="0" ci="6" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="434" mi="0" ci="6" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="0"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="443" mi="0" ci="3" mb="0" cb="2"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="446" mi="0" ci="4" mb="0" cb="0"/><line nr="447" mi="0" ci="8" mb="0" cb="0"/><line nr="448" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="7" mb="0" cb="0"/><line nr="450" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="0" ci="7" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="2"/><line nr="453" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="11" mb="0" cb="2"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="1" cb="1"/><line nr="457" mi="5" ci="0" mb="0" cb="0"/><line nr="458" mi="0" ci="5" mb="1" cb="1"/><line nr="459" mi="6" ci="0" mb="0" cb="0"/><line nr="460" mi="0" ci="5" mb="0" cb="0"/><line nr="462" mi="0" ci="6" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="1" cb="1"/><line nr="464" mi="6" ci="0" mb="0" cb="0"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="0"/><line nr="469" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="7" mb="0" cb="0"/><line nr="478" mi="0" ci="7" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="0"/><line nr="483" mi="0" ci="5" mb="0" cb="0"/><line nr="484" mi="0" ci="5" mb="0" cb="0"/><line nr="485" mi="0" ci="5" mb="0" cb="0"/><line nr="486" mi="0" ci="5" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="6" mb="0" cb="0"/><line nr="489" mi="7" ci="1" mb="2" cb="0"/><line nr="490" mi="7" ci="1" mb="2" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="0" ci="13" mb="0" cb="0"/><line nr="495" mi="0" ci="5" mb="0" cb="0"/><line nr="500" mi="0" ci="6" mb="0" cb="0"/><line nr="501" mi="0" ci="4" mb="0" cb="0"/><line nr="502" mi="0" ci="6" mb="0" cb="0"/><line nr="503" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="10" ci="1" mb="2" cb="0"/><line nr="508" mi="0" ci="4" mb="1" cb="1"/><line nr="509" mi="5" ci="0" mb="0" cb="0"/><line nr="511" mi="0" ci="4" mb="0" cb="0"/><line nr="512" mi="0" ci="7" mb="0" cb="0"/><line nr="513" mi="7" ci="1" mb="2" cb="0"/><line nr="515" mi="0" ci="5" mb="0" cb="2"/><line nr="516" mi="0" ci="10" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="4" ci="0" mb="0" cb="0"/><line nr="525" mi="3" ci="0" mb="0" cb="0"/><line nr="526" mi="1" ci="0" mb="0" cb="0"/><line nr="528" mi="0" ci="1" mb="0" cb="0"/><line nr="532" mi="0" ci="5" mb="0" cb="0"/><line nr="537" mi="0" ci="5" mb="0" cb="0"/><line nr="538" mi="0" ci="2" mb="1" cb="1"/><line nr="539" mi="12" ci="0" mb="2" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="544" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="0" ci="6" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="556" mi="0" ci="2" mb="0" cb="0"/><line nr="557" mi="0" ci="7" mb="0" cb="0"/><line nr="558" mi="0" ci="1" mb="0" cb="0"/><line nr="562" mi="0" ci="4" mb="0" cb="0"/><line nr="563" mi="0" ci="3" mb="0" cb="2"/><line nr="564" mi="0" ci="11" mb="0" cb="0"/><line nr="566" mi="0" ci="11" mb="0" cb="0"/><line nr="572" mi="0" ci="3" mb="0" cb="2"/><line nr="573" mi="0" ci="8" mb="0" cb="0"/><line nr="575" mi="0" ci="8" mb="0" cb="0"/><line nr="581" mi="4" ci="0" mb="0" cb="0"/><line nr="582" mi="9" ci="0" mb="2" cb="0"/><line nr="583" mi="4" ci="0" mb="0" cb="0"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="589" mi="0" ci="2" mb="0" cb="0"/><line nr="594" mi="5" ci="0" mb="0" cb="0"/><line nr="595" mi="2" ci="0" mb="0" cb="0"/><line nr="600" mi="5" ci="0" mb="0" cb="0"/><line nr="601" mi="2" ci="0" mb="0" cb="0"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="607" mi="2" ci="0" mb="0" cb="0"/><line nr="612" mi="5" ci="0" mb="0" cb="0"/><line nr="613" mi="2" ci="0" mb="0" cb="0"/><line nr="618" mi="5" ci="0" mb="0" cb="0"/><line nr="619" mi="2" ci="0" mb="0" cb="0"/><line nr="624" mi="5" ci="0" mb="0" cb="0"/><line nr="625" mi="2" ci="0" mb="0" cb="0"/><line nr="630" mi="0" ci="6" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="306" covered="934"/><counter type="BRANCH" missed="29" covered="31"/><counter type="LINE" missed="63" covered="213"/><counter type="COMPLEXITY" missed="44" covered="78"/><counter type="METHOD" missed="24" covered="68"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="WeightsImplFloat.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="235"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="7" covered="31"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="IWeightsDouble.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IWeightsInt.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="39"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphBuilderImpl.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="10" ci="0" mb="2" cb="0"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="5" ci="5" mb="0" cb="0"/><line nr="48" mi="5" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="8" ci="1" mb="2" cb="0"/><line nr="52" mi="8" ci="1" mb="2" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="79" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="2" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="2" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="9" ci="1" mb="2" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="1" cb="1"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="1" cb="1"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="1" cb="1"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="9" ci="1" mb="2" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="1" cb="1"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="1" cb="1"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="1" cb="1"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="3" ci="0" mb="0" cb="0"/><line nr="195" mi="3" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="1" cb="1"/><line nr="221" mi="12" ci="0" mb="2" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="15" mb="0" cb="0"/><line nr="231" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="8" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="4" ci="0" mb="0" cb="0"/><line nr="254" mi="2" ci="0" mb="0" cb="0"/><line nr="255" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="6" ci="7" mb="1" cb="1"/><line nr="264" mi="6" ci="7" mb="1" cb="1"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="6" ci="7" mb="1" cb="1"/><line nr="275" mi="6" ci="7" mb="1" cb="1"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="6" ci="7" mb="1" cb="1"/><line nr="302" mi="3" ci="10" mb="1" cb="1"/><line nr="303" mi="0" ci="7" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="6" ci="7" mb="1" cb="1"/><line nr="313" mi="6" ci="7" mb="1" cb="1"/><line nr="314" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="327" covered="454"/><counter type="BRANCH" missed="31" covered="15"/><counter type="LINE" missed="51" covered="104"/><counter type="COMPLEXITY" missed="33" covered="27"/><counter type="METHOD" missed="10" covered="27"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="IntGraphFactory.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Graph.java"><line nr="229" mi="8" ci="0" mb="2" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="231" mi="5" ci="0" mb="2" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="3" ci="0" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="8" ci="0" mb="2" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="8" ci="0" mb="2" cb="0"/><line nr="304" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="4" ci="0" mb="0" cb="0"/><line nr="363" mi="4" ci="0" mb="2" cb="0"/><line nr="364" mi="2" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="2" cb="0"/><line nr="366" mi="2" ci="0" mb="0" cb="0"/><line nr="368" mi="8" ci="0" mb="0" cb="0"/><line nr="440" mi="0" ci="6" mb="0" cb="0"/><line nr="551" mi="0" ci="6" mb="0" cb="0"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="732" mi="0" ci="6" mb="0" cb="0"/><line nr="756" mi="4" ci="0" mb="0" cb="0"/><line nr="782" mi="3" ci="0" mb="0" cb="0"/><line nr="783" mi="3" ci="0" mb="0" cb="0"/><line nr="784" mi="3" ci="0" mb="2" cb="0"/><line nr="785" mi="1" ci="0" mb="0" cb="0"/><line nr="786" mi="4" ci="0" mb="0" cb="0"/><line nr="787" mi="3" ci="0" mb="0" cb="0"/><line nr="788" mi="3" ci="0" mb="0" cb="0"/><line nr="789" mi="3" ci="0" mb="0" cb="0"/><line nr="790" mi="11" ci="0" mb="2" cb="0"/><line nr="791" mi="11" ci="0" mb="2" cb="0"/><line nr="792" mi="7" ci="0" mb="0" cb="0"/><line nr="794" mi="7" ci="0" mb="0" cb="0"/><line nr="795" mi="7" ci="0" mb="0" cb="0"/><line nr="810" mi="0" ci="3" mb="0" cb="0"/><line nr="827" mi="0" ci="3" mb="0" cb="0"/><line nr="859" mi="5" ci="0" mb="0" cb="0"/><line nr="874" mi="0" ci="3" mb="0" cb="0"/><line nr="889" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="161" covered="34"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="39" covered="8"/><counter type="COMPLEXITY" missed="17" covered="8"/><counter type="METHOD" missed="8" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsImplShort.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="235"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="7" covered="31"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="GraphFactory.java"><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="16" mb="0" cb="0"/><line nr="177" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="54"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IntGraphImpl.java"><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="8" ci="1" mb="2" cb="0"/><line nr="46" mi="8" ci="1" mb="2" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="1" cb="1"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="12" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="2"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="1" cb="1"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="1" cb="1"/><line nr="152" mi="6" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="6" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="2"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="222" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="12" mb="0" cb="2"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="15" mb="0" cb="2"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="2"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="8" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="12" mb="0" cb="2"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="0" ci="15" mb="0" cb="2"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="307" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="9" mb="0" cb="0"/><line nr="330" mi="0" ci="5" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="2" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="2" mb="0" cb="0"/><line nr="394" mi="0" ci="1" mb="0" cb="0"/><line nr="398" mi="0" ci="5" mb="0" cb="0"/><line nr="399" mi="0" ci="2" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="406" mi="0" ci="4" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="2" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="424" mi="0" ci="5" mb="0" cb="0"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="426" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="1" mb="0" cb="0"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="1" ci="0" mb="0" cb="0"/><line nr="449" mi="11" ci="2" mb="0" cb="0"/><line nr="452" mi="11" ci="0" mb="0" cb="0"/><line nr="457" mi="11" ci="0" mb="0" cb="0"/><line nr="460" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="1" cb="1"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="0" ci="3" mb="1" cb="1"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="9" mb="2" cb="1"/><line nr="468" mi="0" ci="7" mb="0" cb="0"/><line nr="472" mi="0" ci="7" mb="0" cb="0"/><line nr="477" mi="0" ci="7" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="5" ci="0" mb="0" cb="0"/><line nr="484" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="3" ci="0" mb="0" cb="0"/><line nr="487" mi="3" ci="0" mb="0" cb="0"/><line nr="488" mi="7" ci="0" mb="4" cb="0"/><line nr="491" mi="2" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="1" ci="0" mb="0" cb="0"/><line nr="498" mi="5" ci="0" mb="0" cb="0"/><line nr="501" mi="3" ci="1" mb="2" cb="0"/><line nr="503" mi="3" ci="0" mb="0" cb="0"/><line nr="504" mi="5" ci="0" mb="0" cb="0"/><line nr="505" mi="1" ci="0" mb="0" cb="0"/><line nr="506" mi="6" ci="0" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="518" mi="0" ci="4" mb="0" cb="0"/><line nr="519" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="7" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="1" mb="0" cb="0"/><line nr="525" mi="0" ci="2" mb="0" cb="0"/><line nr="526" mi="0" ci="3" mb="0" cb="2"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="528" mi="0" ci="7" mb="0" cb="0"/><line nr="529" mi="0" ci="4" mb="0" cb="0"/><line nr="530" mi="0" ci="8" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="532" mi="0" ci="7" mb="0" cb="0"/><line nr="533" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="7" mb="0" cb="0"/><line nr="535" mi="0" ci="3" mb="0" cb="2"/><line nr="536" mi="0" ci="6" mb="0" cb="0"/><line nr="537" mi="0" ci="11" mb="0" cb="2"/><line nr="538" mi="0" ci="4" mb="0" cb="0"/><line nr="539" mi="0" ci="6" mb="1" cb="1"/><line nr="540" mi="6" ci="0" mb="0" cb="0"/><line nr="541" mi="0" ci="2" mb="1" cb="1"/><line nr="542" mi="6" ci="0" mb="0" cb="0"/><line nr="543" mi="0" ci="5" mb="0" cb="0"/><line nr="545" mi="0" ci="6" mb="0" cb="0"/><line nr="546" mi="0" ci="3" mb="1" cb="1"/><line nr="547" mi="6" ci="0" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="551" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="6" mb="0" cb="0"/><line nr="553" mi="0" ci="3" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="557" mi="0" ci="6" mb="0" cb="0"/><line nr="561" mi="0" ci="6" mb="0" cb="0"/><line nr="565" mi="0" ci="4" mb="0" cb="0"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="567" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="5" mb="0" cb="0"/><line nr="569" mi="0" ci="5" mb="0" cb="0"/><line nr="570" mi="0" ci="6" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="0"/><line nr="572" mi="7" ci="1" mb="2" cb="0"/><line nr="573" mi="7" ci="1" mb="2" cb="0"/><line nr="574" mi="0" ci="1" mb="0" cb="0"/><line nr="575" mi="0" ci="13" mb="0" cb="0"/><line nr="578" mi="0" ci="5" mb="0" cb="0"/><line nr="583" mi="0" ci="6" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="585" mi="0" ci="6" mb="0" cb="0"/><line nr="586" mi="0" ci="1" mb="0" cb="0"/><line nr="590" mi="10" ci="1" mb="2" cb="0"/><line nr="591" mi="0" ci="13" mb="0" cb="2"/><line nr="592" mi="6" ci="1" mb="2" cb="0"/><line nr="594" mi="0" ci="7" mb="0" cb="0"/><line nr="595" mi="7" ci="1" mb="2" cb="0"/><line nr="597" mi="0" ci="5" mb="0" cb="2"/><line nr="598" mi="0" ci="10" mb="0" cb="0"/><line nr="599" mi="0" ci="6" mb="0" cb="0"/><line nr="601" mi="0" ci="4" mb="0" cb="0"/><line nr="602" mi="0" ci="1" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="0" cb="0"/><line nr="607" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="1" mb="0" cb="0"/><line nr="610" mi="0" ci="1" mb="0" cb="0"/><line nr="616" mi="0" ci="5" mb="0" cb="0"/><line nr="621" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="2" mb="0" cb="2"/><line nr="623" mi="1" ci="11" mb="1" cb="1"/><line nr="624" mi="0" ci="2" mb="0" cb="0"/><line nr="628" mi="0" ci="3" mb="0" cb="0"/><line nr="638" mi="0" ci="5" mb="0" cb="0"/><line nr="640" mi="0" ci="3" mb="0" cb="0"/><line nr="641" mi="0" ci="1" mb="0" cb="0"/><line nr="644" mi="0" ci="5" mb="0" cb="0"/><line nr="645" mi="0" ci="3" mb="0" cb="2"/><line nr="646" mi="0" ci="6" mb="0" cb="0"/><line nr="648" mi="0" ci="3" mb="0" cb="0"/><line nr="650" mi="0" ci="1" mb="0" cb="0"/><line nr="655" mi="0" ci="8" mb="0" cb="0"/><line nr="656" mi="0" ci="5" mb="1" cb="1"/><line nr="657" mi="0" ci="2" mb="0" cb="0"/><line nr="658" mi="1" ci="0" mb="0" cb="0"/><line nr="667" mi="5" ci="0" mb="0" cb="0"/><line nr="668" mi="5" ci="0" mb="0" cb="0"/><line nr="669" mi="1" ci="0" mb="0" cb="0"/><line nr="672" mi="5" ci="0" mb="0" cb="0"/><line nr="673" mi="5" ci="0" mb="0" cb="0"/><line nr="674" mi="1" ci="0" mb="0" cb="0"/><line nr="678" mi="6" ci="0" mb="0" cb="0"/><line nr="685" mi="0" ci="2" mb="0" cb="0"/><line nr="686" mi="0" ci="6" mb="0" cb="0"/><line nr="687" mi="0" ci="1" mb="0" cb="0"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="7" mb="0" cb="0"/><line nr="691" mi="0" ci="1" mb="0" cb="0"/><line nr="695" mi="0" ci="4" mb="0" cb="0"/><line nr="696" mi="0" ci="3" mb="0" cb="2"/><line nr="697" mi="0" ci="11" mb="0" cb="0"/><line nr="699" mi="0" ci="11" mb="0" cb="0"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="0" ci="3" mb="0" cb="2"/><line nr="707" mi="0" ci="8" mb="0" cb="0"/><line nr="709" mi="0" ci="8" mb="0" cb="0"/><line nr="715" mi="4" ci="0" mb="0" cb="0"/><line nr="716" mi="10" ci="0" mb="2" cb="0"/><line nr="717" mi="4" ci="0" mb="0" cb="0"/><line nr="722" mi="0" ci="5" mb="0" cb="0"/><line nr="723" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="5" ci="0" mb="0" cb="0"/><line nr="729" mi="2" ci="0" mb="0" cb="0"/><line nr="734" mi="5" ci="0" mb="0" cb="0"/><line nr="735" mi="2" ci="0" mb="0" cb="0"/><line nr="740" mi="0" ci="5" mb="0" cb="0"/><line nr="741" mi="0" ci="2" mb="0" cb="0"/><line nr="746" mi="0" ci="5" mb="0" cb="0"/><line nr="747" mi="0" ci="2" mb="0" cb="0"/><line nr="752" mi="5" ci="0" mb="0" cb="0"/><line nr="753" mi="2" ci="0" mb="0" cb="0"/><line nr="758" mi="5" ci="0" mb="0" cb="0"/><line nr="759" mi="2" ci="0" mb="0" cb="0"/><line nr="764" mi="0" ci="6" mb="0" cb="0"/><line nr="765" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="258" covered="1224"/><counter type="BRANCH" missed="35" covered="44"/><counter type="LINE" missed="43" covered="285"/><counter type="COMPLEXITY" missed="38" covered="111"/><counter type="METHOD" missed="14" covered="95"/><counter type="CLASS" missed="2" covered="10"/></sourcefile><sourcefile name="GraphArrayDirected.java"><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="14" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="14" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="13" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="13" mb="0" cb="0"/><line nr="91" mi="0" ci="13" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="11" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="14" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="14" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="2"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="2"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="2"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="14" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="14" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="2"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="2" ci="5" mb="1" cb="1"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="2" ci="5" mb="1" cb="1"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="2"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="2"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="8" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="7" ci="1" mb="2" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="0" ci="10" mb="0" cb="0"/><line nr="222" mi="0" ci="10" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="8" mb="0" cb="0"/><line nr="225" mi="0" ci="8" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="2"/><line nr="238" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="2"/><line nr="245" mi="0" ci="9" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="7" mb="0" cb="0"/><line nr="287" mi="1" ci="6" mb="1" cb="1"/><line nr="292" mi="0" ci="20" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="7" mb="0" cb="0"/><line nr="308" mi="1" ci="6" mb="1" cb="1"/><line nr="313" mi="0" ci="20" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="6" mb="0" cb="0"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="967"/><counter type="BRANCH" missed="6" covered="30"/><counter type="LINE" missed="2" covered="168"/><counter type="COMPLEXITY" missed="5" covered="57"/><counter type="METHOD" missed="0" covered="44"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="IWeightsChar.java"><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="19"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphBaseIndexMutable.java"><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="1" cb="1"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="2"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="11" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="6" ci="1" mb="2" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="6" ci="1" mb="2" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="445"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="1" covered="111"/><counter type="COMPLEXITY" missed="3" covered="37"/><counter type="METHOD" missed="0" covered="30"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Weights.java"><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="1" cb="1"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="1" cb="1"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="1" cb="1"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="82"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IWeightsLong.java"><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EdgeSet.java"/><sourcefile name="WeightsByte.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphBuilder.java"><line nr="117" mi="6" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EdgeEndpointsContainer.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="148"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="41"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DataContainer.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="1" cb="1"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="7" ci="1" mb="2" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="1" cb="1"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="7" ci="1" mb="2" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="1" cb="1"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="1" cb="1"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="7" ci="1" mb="2" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="7" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="2"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="307" mi="0" ci="4" mb="0" cb="2"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="9" mb="0" cb="0"/><line nr="310" mi="0" ci="11" mb="0" cb="2"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="77" covered="455"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="15" covered="124"/><counter type="COMPLEXITY" missed="13" covered="42"/><counter type="METHOD" missed="6" covered="39"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="IndexGraphBase.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="2"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="104" mi="1" ci="19" mb="3" cb="5"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="1" ci="17" mb="2" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="2"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="255"/><counter type="BRANCH" missed="7" covered="19"/><counter type="LINE" missed="4" covered="60"/><counter type="COMPLEXITY" missed="7" covered="31"/><counter type="METHOD" missed="1" covered="24"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="IndexGraphBuilder.java"><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IWeightsBool.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphBase.java"><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="1" cb="1"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="1" cb="1"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="1" cb="1"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="1" cb="1"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="2"/><line nr="41" mi="0" ci="10" mb="0" cb="2"/><line nr="42" mi="0" ci="18" mb="2" cb="2"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="2"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="8" ci="8" mb="6" cb="2"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="1" cb="1"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="2"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="1" cb="1"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="1" cb="1"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="10" ci="0" mb="2" cb="0"/><line nr="78" mi="16" ci="0" mb="0" cb="0"/><line nr="80" mi="10" ci="0" mb="2" cb="0"/><line nr="81" mi="13" ci="0" mb="0" cb="0"/><line nr="83" mi="11" ci="0" mb="2" cb="0"/><line nr="84" mi="10" ci="0" mb="0" cb="0"/><line nr="85" mi="11" ci="0" mb="2" cb="0"/><line nr="86" mi="10" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="10" ci="0" mb="2" cb="0"/><line nr="98" mi="7" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="10" ci="0" mb="2" cb="0"/><line nr="103" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="10" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="10" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="10" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="2" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="8" ci="0" mb="2" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="2" cb="0"/><line nr="149" mi="3" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="12" ci="0" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="2" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="385" covered="161"/><counter type="BRANCH" missed="51" covered="23"/><counter type="LINE" missed="82" covered="26"/><counter type="COMPLEXITY" missed="36" covered="7"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexSwapListener.java"/><sourcefile name="WeightFunctions.java"><line nr="51" mi="0" ci="5" mb="0" cb="4"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="2"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="2" cb="2"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="11" ci="0" mb="2" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="1" cb="5"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="2" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="92"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="9" covered="11"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphCSRBase.java"><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="11" ci="1" mb="2" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="1" cb="1"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="2"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="1" cb="1"/><line nr="59" mi="11" ci="0" mb="2" cb="0"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="11" mb="0" cb="2"/><line nr="63" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="13" mb="0" cb="2"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="2"/><line nr="71" mi="0" ci="13" mb="0" cb="2"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="13" mb="0" cb="2"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="11" mb="0" cb="2"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="2"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="2"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="14" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="6" ci="0" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="1" cb="1"/><line nr="265" mi="6" ci="0" mb="0" cb="0"/><line nr="266" mi="7" ci="0" mb="2" cb="0"/><line nr="267" mi="8" ci="0" mb="0" cb="0"/><line nr="268" mi="8" ci="0" mb="0" cb="0"/><line nr="269" mi="3" ci="0" mb="2" cb="0"/><line nr="270" mi="8" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="274" mi="0" ci="7" mb="0" cb="2"/><line nr="275" mi="0" ci="8" mb="0" cb="0"/><line nr="276" mi="0" ci="8" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="2"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="281" mi="0" ci="2" mb="0" cb="2"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="7" mb="0" cb="2"/><line nr="285" mi="0" ci="7" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="2"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="12" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="1" cb="1"/><line nr="301" mi="6" ci="0" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="2" cb="0"/><line nr="303" mi="8" ci="0" mb="0" cb="0"/><line nr="304" mi="10" ci="0" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="2" cb="0"/><line nr="307" mi="10" ci="0" mb="0" cb="0"/><line nr="308" mi="5" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="6" mb="0" cb="0"/><line nr="313" mi="0" ci="7" mb="0" cb="2"/><line nr="314" mi="0" ci="8" mb="0" cb="0"/><line nr="315" mi="0" ci="10" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="2"/><line nr="318" mi="0" ci="10" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="12" ci="1" mb="2" cb="0"/><line nr="324" mi="0" ci="8" mb="0" cb="2"/><line nr="325" mi="0" ci="10" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="6" mb="0" cb="0"/><line nr="341" mi="6" ci="0" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="0"/><line nr="351" mi="0" ci="6" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="2"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="2"/><line nr="357" mi="0" ci="10" mb="0" cb="0"/><line nr="358" mi="0" ci="10" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="7" mb="0" cb="2"/><line nr="363" mi="0" ci="10" mb="0" cb="0"/><line nr="364" mi="0" ci="10" mb="0" cb="0"/><line nr="367" mi="0" ci="10" mb="2" cb="2"/><line nr="368" mi="5" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="2"/><line nr="370" mi="0" ci="1" mb="0" cb="0"/><line nr="376" mi="0" ci="10" mb="0" cb="0"/><line nr="377" mi="0" ci="10" mb="0" cb="0"/><line nr="378" mi="0" ci="7" mb="0" cb="2"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="381" mi="0" ci="12" mb="0" cb="0"/><line nr="382" mi="0" ci="12" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="10" mb="0" cb="0"/><line nr="387" mi="0" ci="4" mb="0" cb="2"/><line nr="388" mi="0" ci="6" mb="0" cb="0"/><line nr="389" mi="0" ci="7" mb="0" cb="2"/><line nr="390" mi="0" ci="12" mb="0" cb="0"/><line nr="391" mi="0" ci="12" mb="0" cb="0"/><line nr="392" mi="0" ci="5" mb="0" cb="0"/><line nr="393" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="0"/><line nr="397" mi="0" ci="7" mb="0" cb="2"/><line nr="398" mi="0" ci="12" mb="0" cb="0"/><line nr="399" mi="0" ci="12" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="401" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="12" ci="1" mb="2" cb="0"/><line nr="405" mi="12" ci="1" mb="2" cb="0"/><line nr="406" mi="0" ci="8" mb="0" cb="2"/><line nr="407" mi="0" ci="10" mb="0" cb="0"/><line nr="408" mi="0" ci="10" mb="0" cb="0"/><line nr="410" mi="0" ci="10" mb="0" cb="0"/><line nr="411" mi="0" ci="1" mb="0" cb="0"/><line nr="416" mi="0" ci="13" mb="0" cb="2"/><line nr="417" mi="0" ci="7" mb="0" cb="0"/><line nr="421" mi="0" ci="13" mb="0" cb="2"/><line nr="422" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="181" covered="1013"/><counter type="BRANCH" missed="24" covered="68"/><counter type="LINE" missed="22" covered="177"/><counter type="COMPLEXITY" missed="18" covered="65"/><counter type="METHOD" missed="3" covered="34"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="IEdgeSet.java"><line nr="57" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IWeightsObj.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphHashmapUndirected.java"><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="57" mi="0" ci="6" mb="1" cb="1"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="1" cb="1"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="7" ci="1" mb="2" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="11" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="11" ci="0" mb="2" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="2" cb="0"/><line nr="93" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="8" ci="0" mb="2" cb="0"/><line nr="97" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="10" ci="1" mb="2" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="7" ci="1" mb="2" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="7" ci="1" mb="2" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="1" cb="1"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="8" ci="0" mb="2" cb="0"/><line nr="127" mi="8" ci="0" mb="2" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="7" ci="1" mb="2" cb="0"/><line nr="138" mi="7" ci="1" mb="2" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="1" cb="1"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="8" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="2" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="8" ci="0" mb="0" cb="0"/><line nr="149" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="2" cb="0"/><line nr="151" mi="8" ci="0" mb="2" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="7" ci="1" mb="2" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="1" cb="1"/><line nr="186" mi="7" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="7" ci="1" mb="2" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="7" ci="1" mb="2" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="7" ci="1" mb="2" cb="0"/><line nr="213" mi="0" ci="8" mb="0" cb="0"/><line nr="214" mi="10" ci="1" mb="2" cb="0"/><line nr="215" mi="10" ci="1" mb="2" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="7" ci="1" mb="2" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="2"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="7" ci="1" mb="2" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="10" ci="1" mb="2" cb="0"/><line nr="225" mi="10" ci="1" mb="2" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="0"/><line nr="227" mi="7" ci="1" mb="2" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="2"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="7" ci="1" mb="2" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="2"/><line nr="263" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="10" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="347" covered="541"/><counter type="BRANCH" missed="61" covered="29"/><counter type="LINE" missed="35" covered="125"/><counter type="COMPLEXITY" missed="39" covered="36"/><counter type="METHOD" missed="5" covered="25"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="WeightsObj.java"><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphMatrixDirected.java"><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="7" ci="1" mb="2" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="13" mb="0" cb="0"/><line nr="65" mi="0" ci="13" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="0"/><line nr="70" mi="0" ci="14" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="2"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="14" ci="0" mb="0" cb="0"/><line nr="84" mi="14" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="2" cb="0"/><line nr="89" mi="10" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="2" ci="5" mb="1" cb="1"/><line nr="135" mi="8" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="12" mb="1" cb="3"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="5" ci="8" mb="1" cb="1"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="13" mb="0" cb="2"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="5" ci="8" mb="1" cb="1"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="13" mb="0" cb="2"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="8" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="486"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="16" covered="79"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="4" covered="23"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="GraphCSRDirected.java"><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="2"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="13" mb="0" cb="2"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="82" mi="0" ci="15" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="16" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="2" cb="0"/><line nr="108" mi="0" ci="25" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="245"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="2" covered="45"/><counter type="COMPLEXITY" missed="4" covered="19"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="WeightsImplByte.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="235"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="7" covered="31"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="GraphArrayAbstract.java"><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="10" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="2"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="13" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="2"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="1" cb="1"/><line nr="95" mi="0" ci="5" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="2"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="14" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="1" cb="1"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="366"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="84"/><counter type="COMPLEXITY" missed="2" covered="31"/><counter type="METHOD" missed="0" covered="25"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="GraphLinkedUndirected.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="15" mb="0" cb="0"/><line nr="50" mi="0" ci="14" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="15" mb="0" cb="0"/><line nr="59" mi="0" ci="14" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="15" ci="0" mb="0" cb="0"/><line nr="72" mi="14" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="7" ci="1" mb="2" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="3" ci="7" mb="1" cb="1"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="10" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="3" ci="7" mb="1" cb="1"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="7" mb="0" cb="2"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="2"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="2" mb="0" cb="2"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="10" mb="0" cb="2"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="2"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="231" mi="2" ci="9" mb="1" cb="1"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="12" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="12" ci="1" mb="4" cb="0"/><line nr="251" mi="0" ci="10" mb="0" cb="2"/><line nr="255" mi="0" ci="4" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="8" ci="1" mb="2" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="8" ci="1" mb="2" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="4" mb="0" cb="2"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="8" ci="1" mb="2" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="2"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="8" ci="1" mb="2" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="14" mb="0" cb="0"/><line nr="303" mi="0" ci="7" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="14" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="8" mb="0" cb="0"/><line nr="345" mi="0" ci="8" mb="0" cb="2"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><line nr="365" mi="0" ci="8" mb="0" cb="0"/><line nr="366" mi="0" ci="8" mb="0" cb="2"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="170" covered="643"/><counter type="BRANCH" missed="27" covered="41"/><counter type="LINE" missed="22" covered="143"/><counter type="COMPLEXITY" missed="19" covered="61"/><counter type="METHOD" missed="4" covered="42"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="IndexIdMaps.java"><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="1" cb="1"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="266" mi="7" ci="0" mb="0" cb="0"/><line nr="271" mi="7" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="289" mi="3" ci="0" mb="0" cb="0"/><line nr="294" mi="7" ci="0" mb="0" cb="0"/><line nr="299" mi="7" ci="0" mb="0" cb="0"/><line nr="304" mi="7" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="1" cb="1"/><line nr="320" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="0" ci="6" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="3" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="366" mi="0" ci="9" mb="0" cb="0"/><line nr="371" mi="0" ci="8" mb="0" cb="0"/><line nr="376" mi="8" ci="0" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="3" ci="0" mb="0" cb="0"/><line nr="403" mi="1" ci="0" mb="0" cb="0"/><line nr="407" mi="0" ci="9" mb="0" cb="0"/><line nr="412" mi="0" ci="8" mb="0" cb="0"/><line nr="417" mi="8" ci="0" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="1" cb="1"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="434" mi="0" ci="6" mb="0" cb="0"/><line nr="446" mi="0" ci="6" mb="0" cb="0"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="452" mi="0" ci="1" mb="0" cb="0"/><line nr="457" mi="0" ci="4" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="9" ci="0" mb="0" cb="0"/><line nr="469" mi="4" ci="0" mb="0" cb="0"/><line nr="483" mi="0" ci="3" mb="0" cb="2"/><line nr="484" mi="0" ci="8" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="497" mi="0" ci="5" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="503" mi="0" ci="4" mb="0" cb="0"/><line nr="508" mi="0" ci="4" mb="0" cb="0"/><line nr="513" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="1" ci="0" mb="0" cb="0"/><line nr="518" mi="0" ci="9" mb="0" cb="0"/><line nr="523" mi="8" ci="0" mb="0" cb="0"/><line nr="528" mi="8" ci="0" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="539" mi="0" ci="5" mb="0" cb="0"/><line nr="540" mi="0" ci="1" mb="0" cb="0"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="4" mb="0" cb="0"/><line nr="554" mi="3" ci="0" mb="0" cb="0"/><line nr="555" mi="1" ci="0" mb="0" cb="0"/><line nr="559" mi="0" ci="9" mb="0" cb="0"/><line nr="564" mi="8" ci="0" mb="0" cb="0"/><line nr="569" mi="8" ci="0" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="1" cb="1"/><line nr="584" mi="5" ci="0" mb="0" cb="0"/><line nr="586" mi="0" ci="6" mb="0" cb="0"/><line nr="598" mi="0" ci="6" mb="0" cb="0"/><line nr="607" mi="0" ci="2" mb="0" cb="0"/><line nr="608" mi="0" ci="5" mb="0" cb="0"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="1" mb="0" cb="0"/><line nr="614" mi="0" ci="4" mb="0" cb="0"/><line nr="619" mi="4" ci="0" mb="0" cb="0"/><line nr="624" mi="3" ci="0" mb="0" cb="0"/><line nr="625" mi="1" ci="0" mb="0" cb="0"/><line nr="629" mi="8" ci="0" mb="0" cb="0"/><line nr="634" mi="8" ci="0" mb="0" cb="0"/><line nr="639" mi="0" ci="8" mb="0" cb="0"/><line nr="644" mi="8" ci="0" mb="0" cb="0"/><line nr="649" mi="8" ci="0" mb="0" cb="0"/><line nr="654" mi="8" ci="0" mb="0" cb="0"/><line nr="663" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="0" ci="5" mb="0" cb="0"/><line nr="665" mi="0" ci="5" mb="0" cb="0"/><line nr="666" mi="0" ci="1" mb="0" cb="0"/><line nr="670" mi="0" ci="4" mb="0" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="680" mi="3" ci="0" mb="0" cb="0"/><line nr="681" mi="1" ci="0" mb="0" cb="0"/><line nr="685" mi="8" ci="0" mb="0" cb="0"/><line nr="690" mi="8" ci="0" mb="0" cb="0"/><line nr="695" mi="0" ci="8" mb="0" cb="0"/><line nr="700" mi="8" ci="0" mb="0" cb="0"/><line nr="705" mi="8" ci="0" mb="0" cb="0"/><line nr="710" mi="8" ci="0" mb="0" cb="0"/><line nr="719" mi="2" ci="0" mb="0" cb="0"/><line nr="720" mi="5" ci="0" mb="0" cb="0"/><line nr="721" mi="5" ci="0" mb="0" cb="0"/><line nr="722" mi="1" ci="0" mb="0" cb="0"/><line nr="725" mi="3" ci="0" mb="0" cb="0"/><line nr="729" mi="5" ci="0" mb="0" cb="0"/><line nr="735" mi="4" ci="0" mb="0" cb="0"/><line nr="736" mi="1" ci="0" mb="0" cb="0"/><line nr="740" mi="4" ci="0" mb="0" cb="0"/><line nr="745" mi="7" ci="0" mb="0" cb="0"/><line nr="750" mi="7" ci="0" mb="0" cb="0"/><line nr="751" mi="1" ci="0" mb="0" cb="0"/><line nr="755" mi="4" ci="0" mb="0" cb="0"/><line nr="762" mi="4" ci="0" mb="0" cb="0"/><line nr="763" mi="1" ci="0" mb="0" cb="0"/><line nr="767" mi="4" ci="0" mb="0" cb="0"/><line nr="772" mi="7" ci="0" mb="0" cb="0"/><line nr="777" mi="7" ci="0" mb="0" cb="0"/><line nr="778" mi="1" ci="0" mb="0" cb="0"/><line nr="782" mi="4" ci="0" mb="0" cb="0"/><line nr="789" mi="4" ci="0" mb="0" cb="0"/><line nr="790" mi="1" ci="0" mb="0" cb="0"/><line nr="794" mi="4" ci="0" mb="0" cb="0"/><line nr="799" mi="7" ci="0" mb="0" cb="0"/><line nr="804" mi="7" ci="0" mb="0" cb="0"/><line nr="805" mi="1" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="816" mi="4" ci="0" mb="0" cb="0"/><line nr="817" mi="1" ci="0" mb="0" cb="0"/><line nr="821" mi="4" ci="0" mb="0" cb="0"/><line nr="826" mi="7" ci="0" mb="0" cb="0"/><line nr="831" mi="7" ci="0" mb="0" cb="0"/><line nr="832" mi="1" ci="0" mb="0" cb="0"/><line nr="836" mi="4" ci="0" mb="0" cb="0"/><line nr="843" mi="4" ci="0" mb="0" cb="0"/><line nr="844" mi="1" ci="0" mb="0" cb="0"/><line nr="848" mi="4" ci="0" mb="0" cb="0"/><line nr="853" mi="7" ci="0" mb="0" cb="0"/><line nr="858" mi="7" ci="0" mb="0" cb="0"/><line nr="859" mi="1" ci="0" mb="0" cb="0"/><line nr="863" mi="4" ci="0" mb="0" cb="0"/><line nr="870" mi="4" ci="0" mb="0" cb="0"/><line nr="871" mi="1" ci="0" mb="0" cb="0"/><line nr="875" mi="4" ci="0" mb="0" cb="0"/><line nr="880" mi="7" ci="0" mb="0" cb="0"/><line nr="885" mi="7" ci="0" mb="0" cb="0"/><line nr="886" mi="1" ci="0" mb="0" cb="0"/><line nr="890" mi="4" ci="0" mb="0" cb="0"/><line nr="897" mi="4" ci="0" mb="0" cb="0"/><line nr="898" mi="1" ci="0" mb="0" cb="0"/><line nr="902" mi="4" ci="0" mb="0" cb="0"/><line nr="907" mi="7" ci="0" mb="0" cb="0"/><line nr="912" mi="7" ci="0" mb="0" cb="0"/><line nr="913" mi="1" ci="0" mb="0" cb="0"/><line nr="917" mi="4" ci="0" mb="0" cb="0"/><line nr="924" mi="4" ci="0" mb="0" cb="0"/><line nr="925" mi="1" ci="0" mb="0" cb="0"/><line nr="929" mi="4" ci="0" mb="0" cb="0"/><line nr="934" mi="7" ci="0" mb="0" cb="0"/><line nr="939" mi="7" ci="0" mb="0" cb="0"/><line nr="940" mi="1" ci="0" mb="0" cb="0"/><line nr="944" mi="4" ci="0" mb="0" cb="0"/><line nr="951" mi="4" ci="0" mb="0" cb="0"/><line nr="952" mi="1" ci="0" mb="0" cb="0"/><line nr="956" mi="4" ci="0" mb="0" cb="0"/><line nr="961" mi="7" ci="0" mb="0" cb="0"/><line nr="966" mi="7" ci="0" mb="0" cb="0"/><line nr="967" mi="1" ci="0" mb="0" cb="0"/><line nr="971" mi="4" ci="0" mb="0" cb="0"/><line nr="982" mi="2" ci="0" mb="0" cb="0"/><line nr="983" mi="5" ci="0" mb="0" cb="0"/><line nr="984" mi="5" ci="0" mb="0" cb="0"/><line nr="985" mi="1" ci="0" mb="0" cb="0"/><line nr="988" mi="3" ci="0" mb="0" cb="0"/><line nr="992" mi="5" ci="0" mb="0" cb="0"/><line nr="998" mi="4" ci="0" mb="0" cb="0"/><line nr="999" mi="1" ci="0" mb="0" cb="0"/><line nr="1003" mi="4" ci="0" mb="0" cb="0"/><line nr="1008" mi="7" ci="0" mb="0" cb="0"/><line nr="1013" mi="7" ci="0" mb="0" cb="0"/><line nr="1014" mi="1" ci="0" mb="0" cb="0"/><line nr="1018" mi="4" ci="0" mb="0" cb="0"/><line nr="1025" mi="4" ci="0" mb="0" cb="0"/><line nr="1026" mi="1" ci="0" mb="0" cb="0"/><line nr="1030" mi="4" ci="0" mb="0" cb="0"/><line nr="1035" mi="7" ci="0" mb="0" cb="0"/><line nr="1040" mi="7" ci="0" mb="0" cb="0"/><line nr="1041" mi="1" ci="0" mb="0" cb="0"/><line nr="1045" mi="4" ci="0" mb="0" cb="0"/><line nr="1052" mi="4" ci="0" mb="0" cb="0"/><line nr="1053" mi="1" ci="0" mb="0" cb="0"/><line nr="1057" mi="4" ci="0" mb="0" cb="0"/><line nr="1062" mi="7" ci="0" mb="0" cb="0"/><line nr="1067" mi="7" ci="0" mb="0" cb="0"/><line nr="1068" mi="1" ci="0" mb="0" cb="0"/><line nr="1072" mi="4" ci="0" mb="0" cb="0"/><line nr="1079" mi="4" ci="0" mb="0" cb="0"/><line nr="1080" mi="1" ci="0" mb="0" cb="0"/><line nr="1084" mi="4" ci="0" mb="0" cb="0"/><line nr="1089" mi="7" ci="0" mb="0" cb="0"/><line nr="1094" mi="7" ci="0" mb="0" cb="0"/><line nr="1095" mi="1" ci="0" mb="0" cb="0"/><line nr="1099" mi="4" ci="0" mb="0" cb="0"/><line nr="1106" mi="4" ci="0" mb="0" cb="0"/><line nr="1107" mi="1" ci="0" mb="0" cb="0"/><line nr="1111" mi="4" ci="0" mb="0" cb="0"/><line nr="1116" mi="7" ci="0" mb="0" cb="0"/><line nr="1121" mi="7" ci="0" mb="0" cb="0"/><line nr="1122" mi="1" ci="0" mb="0" cb="0"/><line nr="1126" mi="4" ci="0" mb="0" cb="0"/><line nr="1133" mi="4" ci="0" mb="0" cb="0"/><line nr="1134" mi="1" ci="0" mb="0" cb="0"/><line nr="1138" mi="4" ci="0" mb="0" cb="0"/><line nr="1143" mi="7" ci="0" mb="0" cb="0"/><line nr="1148" mi="7" ci="0" mb="0" cb="0"/><line nr="1149" mi="1" ci="0" mb="0" cb="0"/><line nr="1153" mi="4" ci="0" mb="0" cb="0"/><line nr="1160" mi="4" ci="0" mb="0" cb="0"/><line nr="1161" mi="1" ci="0" mb="0" cb="0"/><line nr="1165" mi="4" ci="0" mb="0" cb="0"/><line nr="1170" mi="7" ci="0" mb="0" cb="0"/><line nr="1175" mi="7" ci="0" mb="0" cb="0"/><line nr="1176" mi="1" ci="0" mb="0" cb="0"/><line nr="1180" mi="4" ci="0" mb="0" cb="0"/><line nr="1187" mi="4" ci="0" mb="0" cb="0"/><line nr="1188" mi="1" ci="0" mb="0" cb="0"/><line nr="1192" mi="4" ci="0" mb="0" cb="0"/><line nr="1197" mi="7" ci="0" mb="0" cb="0"/><line nr="1202" mi="7" ci="0" mb="0" cb="0"/><line nr="1203" mi="1" ci="0" mb="0" cb="0"/><line nr="1207" mi="4" ci="0" mb="0" cb="0"/><line nr="1214" mi="4" ci="0" mb="0" cb="0"/><line nr="1215" mi="1" ci="0" mb="0" cb="0"/><line nr="1219" mi="4" ci="0" mb="0" cb="0"/><line nr="1224" mi="7" ci="0" mb="0" cb="0"/><line nr="1229" mi="7" ci="0" mb="0" cb="0"/><line nr="1230" mi="1" ci="0" mb="0" cb="0"/><line nr="1234" mi="4" ci="0" mb="0" cb="0"/><line nr="1243" mi="6" ci="0" mb="4" cb="0"/><line nr="1244" mi="3" ci="0" mb="0" cb="0"/><line nr="1245" mi="3" ci="0" mb="0" cb="0"/><line nr="1246" mi="3" ci="0" mb="2" cb="0"/><line nr="1247" mi="7" ci="0" mb="0" cb="0"/><line nr="1248" mi="3" ci="0" mb="2" cb="0"/><line nr="1249" mi="7" ci="0" mb="0" cb="0"/><line nr="1250" mi="3" ci="0" mb="2" cb="0"/><line nr="1251" mi="7" ci="0" mb="0" cb="0"/><line nr="1252" mi="3" ci="0" mb="2" cb="0"/><line nr="1253" mi="7" ci="0" mb="0" cb="0"/><line nr="1254" mi="3" ci="0" mb="2" cb="0"/><line nr="1255" mi="7" ci="0" mb="0" cb="0"/><line nr="1256" mi="3" ci="0" mb="2" cb="0"/><line nr="1257" mi="7" ci="0" mb="0" cb="0"/><line nr="1258" mi="3" ci="0" mb="2" cb="0"/><line nr="1259" mi="7" ci="0" mb="0" cb="0"/><line nr="1260" mi="3" ci="0" mb="2" cb="0"/><line nr="1261" mi="7" ci="0" mb="0" cb="0"/><line nr="1262" mi="3" ci="0" mb="2" cb="0"/><line nr="1263" mi="7" ci="0" mb="0" cb="0"/><line nr="1265" mi="4" ci="0" mb="2" cb="0"/><line nr="1266" mi="7" ci="0" mb="0" cb="0"/><line nr="1267" mi="3" ci="0" mb="2" cb="0"/><line nr="1268" mi="7" ci="0" mb="0" cb="0"/><line nr="1269" mi="3" ci="0" mb="2" cb="0"/><line nr="1270" mi="7" ci="0" mb="0" cb="0"/><line nr="1271" mi="3" ci="0" mb="2" cb="0"/><line nr="1272" mi="7" ci="0" mb="0" cb="0"/><line nr="1273" mi="3" ci="0" mb="2" cb="0"/><line nr="1274" mi="7" ci="0" mb="0" cb="0"/><line nr="1275" mi="3" ci="0" mb="2" cb="0"/><line nr="1276" mi="7" ci="0" mb="0" cb="0"/><line nr="1277" mi="3" ci="0" mb="2" cb="0"/><line nr="1278" mi="7" ci="0" mb="0" cb="0"/><line nr="1279" mi="3" ci="0" mb="2" cb="0"/><line nr="1280" mi="7" ci="0" mb="0" cb="0"/><line nr="1281" mi="3" ci="0" mb="2" cb="0"/><line nr="1282" mi="7" ci="0" mb="0" cb="0"/><line nr="1284" mi="8" ci="0" mb="0" cb="0"/><line nr="1307" mi="0" ci="2" mb="0" cb="0"/><line nr="1308" mi="0" ci="3" mb="1" cb="1"/><line nr="1309" mi="4" ci="0" mb="0" cb="0"/><line nr="1310" mi="3" ci="0" mb="0" cb="0"/><line nr="1314" mi="0" ci="3" mb="0" cb="2"/><line nr="1315" mi="0" ci="5" mb="1" cb="1"/><line nr="1316" mi="5" ci="0" mb="0" cb="0"/><line nr="1317" mi="0" ci="5" mb="0" cb="0"/><line nr="1319" mi="0" ci="3" mb="1" cb="1"/><line nr="1320" mi="0" ci="5" mb="1" cb="1"/><line nr="1321" mi="5" ci="0" mb="0" cb="0"/><line nr="1322" mi="0" ci="5" mb="0" cb="0"/><line nr="1325" mi="4" ci="0" mb="0" cb="0"/><line nr="1328" mi="0" ci="2" mb="1" cb="1"/><line nr="1329" mi="3" ci="0" mb="0" cb="0"/><line nr="1330" mi="0" ci="2" mb="0" cb="0"/><line nr="1343" mi="0" ci="8" mb="2" cb="4"/><line nr="1345" mi="0" ci="2" mb="0" cb="0"/><line nr="1347" mi="0" ci="3" mb="0" cb="2"/><line nr="1350" mi="0" ci="6" mb="0" cb="0"/><line nr="1352" mi="3" ci="3" mb="3" cb="1"/><line nr="1354" mi="3" ci="0" mb="0" cb="0"/><line nr="1355" mi="3" ci="0" mb="0" cb="0"/><line nr="1356" mi="10" ci="0" mb="0" cb="0"/><line nr="1357" mi="2" ci="0" mb="0" cb="0"/><line nr="1359" mi="0" ci="6" mb="1" cb="3"/><line nr="1361" mi="0" ci="3" mb="0" cb="0"/><line nr="1362" mi="0" ci="3" mb="0" cb="0"/><line nr="1363" mi="0" ci="10" mb="0" cb="0"/><line nr="1364" mi="0" ci="2" mb="0" cb="0"/><line nr="1366" mi="0" ci="3" mb="1" cb="1"/><line nr="1368" mi="3" ci="0" mb="0" cb="0"/><line nr="1369" mi="10" ci="0" mb="0" cb="0"/><line nr="1370" mi="2" ci="0" mb="0" cb="0"/><line nr="1374" mi="0" ci="10" mb="0" cb="0"/><line nr="1387" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1111" covered="500"/><counter type="BRANCH" missed="58" covered="26"/><counter type="LINE" missed="254" covered="116"/><counter type="COMPLEXITY" missed="182" covered="60"/><counter type="METHOD" missed="146" covered="54"/><counter type="CLASS" missed="20" covered="15"/></sourcefile><sourcefile name="IWeightFunctionInt.java"><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="12" mb="0" cb="2"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="10" mb="0" cb="2"/><line nr="113" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="67"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntGraphBuilder.java"><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphCSRAbstractUnindexed.java"><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="2"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="2"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="13" mb="0" cb="2"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="2"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="128"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntGraph.java"><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="8" mb="0" cb="2"/><line nr="249" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="2"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="7" mb="0" cb="0"/><line nr="260" mi="0" ci="8" mb="0" cb="2"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="8" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="343" mi="0" ci="4" mb="0" cb="0"/><line nr="344" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="2"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="355" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="372" mi="0" ci="8" mb="0" cb="2"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="1" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="6" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="3" mb="0" cb="2"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="1" cb="1"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="8" ci="0" mb="0" cb="0"/><line nr="469" mi="0" ci="8" mb="0" cb="0"/><line nr="477" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="4" mb="0" cb="0"/><line nr="496" mi="0" ci="4" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="506" mi="0" ci="4" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="0" ci="3" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="0" cb="2"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="4" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="517" mi="0" ci="3" mb="0" cb="0"/><line nr="518" mi="0" ci="3" mb="0" cb="0"/><line nr="519" mi="0" ci="5" mb="1" cb="1"/><line nr="520" mi="5" ci="1" mb="0" cb="0"/><line nr="521" mi="2" ci="3" mb="1" cb="1"/><line nr="522" mi="0" ci="6" mb="0" cb="0"/><line nr="523" mi="0" ci="7" mb="0" cb="0"/><line nr="525" mi="0" ci="7" mb="0" cb="0"/><line nr="526" mi="0" ci="7" mb="0" cb="0"/><line nr="532" mi="0" ci="4" mb="0" cb="0"/><line nr="537" mi="0" ci="4" mb="0" cb="0"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="561" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="272"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="72"/><counter type="COMPLEXITY" missed="3" covered="38"/><counter type="METHOD" missed="0" covered="31"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphLinkedAbstract.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="15" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="15" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="2"/><line nr="39" mi="0" ci="13" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="15" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="11" ci="0" mb="2" cb="0"/><line nr="48" mi="13" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="1" cb="1"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="8" ci="1" mb="2" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="9" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="70" covered="244"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="8" covered="58"/><counter type="COMPLEXITY" missed="6" covered="22"/><counter type="METHOD" missed="2" covered="19"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="IWeightsFloat.java"><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphMatrixAbstract.java"><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="2"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="13" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="3" ci="3" mb="3" cb="1"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="10" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="11" ci="0" mb="2" cb="0"/><line nr="94" mi="8" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="11" ci="0" mb="4" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="12" ci="0" mb="2" cb="0"/><line nr="103" mi="8" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="11" ci="0" mb="2" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="4" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="10" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="11" ci="0" mb="2" cb="0"/><line nr="129" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="2"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="2"/><line nr="162" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="174" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="9" mb="1" cb="1"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="2"/><line nr="212" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="2"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="9" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="2"/><line nr="261" mi="0" ci="6" mb="0" cb="2"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="7" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="0" ci="8" mb="0" cb="2"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="9" mb="0" cb="0"/><line nr="309" mi="0" ci="6" mb="0" cb="0"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="5" mb="0" cb="2"/><line nr="322" mi="0" ci="6" mb="0" cb="2"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="8" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="8" mb="0" cb="2"/><line nr="366" mi="0" ci="2" mb="0" cb="0"/><line nr="367" mi="0" ci="14" mb="0" cb="0"/><line nr="368" mi="0" ci="6" mb="0" cb="0"/><line nr="369" mi="0" ci="2" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="375" mi="0" ci="11" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="2"/><line nr="381" mi="0" ci="11" mb="0" cb="2"/><line nr="382" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="13" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="213" covered="717"/><counter type="BRANCH" missed="24" covered="38"/><counter type="LINE" missed="35" covered="160"/><counter type="COMPLEXITY" missed="15" covered="60"/><counter type="METHOD" missed="2" covered="42"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="IndexIntIdMap.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsImplBool.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="235"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="7" covered="31"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="GraphElementSet.java"><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="1" cb="1"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="1" cb="3"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="1" cb="1"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="1" ci="8" mb="1" cb="1"/><line nr="66" mi="10" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="10" ci="1" mb="2" cb="0"/><line nr="121" mi="7" ci="1" mb="2" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="11" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="11" mb="0" cb="2"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="11" mb="0" cb="2"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="235"/><counter type="BRANCH" missed="8" covered="16"/><counter type="LINE" missed="9" covered="62"/><counter type="COMPLEXITY" missed="11" covered="30"/><counter type="METHOD" missed="5" covered="24"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="WeightsDouble.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Graphs.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="11" ci="0" mb="2" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="9" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="5" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="0" cb="0"/><line nr="355" mi="3" ci="8" mb="1" cb="1"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="1" cb="1"/><line nr="378" mi="5" ci="0" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="404" mi="3" ci="0" mb="0" cb="0"/><line nr="405" mi="1" ci="0" mb="0" cb="0"/><line nr="410" mi="5" ci="0" mb="0" cb="0"/><line nr="411" mi="1" ci="0" mb="0" cb="0"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="5" ci="0" mb="0" cb="0"/><line nr="421" mi="1" ci="0" mb="0" cb="0"/><line nr="425" mi="5" ci="0" mb="0" cb="0"/><line nr="430" mi="4" ci="0" mb="0" cb="0"/><line nr="435" mi="7" ci="0" mb="0" cb="0"/><line nr="443" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="5" mb="0" cb="0"/><line nr="445" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="7" mb="0" cb="0"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="467" mi="5" ci="0" mb="0" cb="0"/><line nr="468" mi="1" ci="0" mb="0" cb="0"/><line nr="472" mi="4" ci="0" mb="0" cb="0"/><line nr="477" mi="4" ci="0" mb="0" cb="0"/><line nr="482" mi="4" ci="0" mb="0" cb="0"/><line nr="487" mi="4" ci="0" mb="0" cb="0"/><line nr="492" mi="4" ci="0" mb="0" cb="0"/><line nr="499" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="1" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="4" mb="0" cb="0"/><line nr="515" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="4" mb="0" cb="0"/><line nr="530" mi="0" ci="10" mb="0" cb="2"/><line nr="534" mi="0" ci="3" mb="1" cb="1"/><line nr="535" mi="4" ci="0" mb="0" cb="0"/><line nr="536" mi="0" ci="10" mb="0" cb="2"/><line nr="541" mi="0" ci="3" mb="1" cb="1"/><line nr="542" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="0" ci="3" mb="1" cb="1"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="545" mi="10" ci="0" mb="2" cb="0"/><line nr="552" mi="0" ci="2" mb="0" cb="0"/><line nr="553" mi="0" ci="5" mb="0" cb="0"/><line nr="554" mi="0" ci="1" mb="0" cb="0"/><line nr="558" mi="4" ci="0" mb="0" cb="0"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="568" mi="4" ci="0" mb="0" cb="0"/><line nr="569" mi="1" ci="0" mb="0" cb="0"/><line nr="573" mi="4" ci="0" mb="0" cb="0"/><line nr="574" mi="1" ci="0" mb="0" cb="0"/><line nr="578" mi="8" ci="0" mb="0" cb="0"/><line nr="583" mi="8" ci="0" mb="0" cb="0"/><line nr="588" mi="9" ci="0" mb="0" cb="0"/><line nr="593" mi="6" ci="0" mb="0" cb="0"/><line nr="594" mi="1" ci="0" mb="0" cb="0"/><line nr="598" mi="4" ci="0" mb="0" cb="0"/><line nr="599" mi="1" ci="0" mb="0" cb="0"/><line nr="603" mi="4" ci="0" mb="0" cb="0"/><line nr="604" mi="1" ci="0" mb="0" cb="0"/><line nr="608" mi="5" ci="0" mb="0" cb="0"/><line nr="613" mi="5" ci="0" mb="0" cb="0"/><line nr="618" mi="3" ci="0" mb="0" cb="0"/><line nr="619" mi="1" ci="0" mb="0" cb="0"/><line nr="623" mi="3" ci="0" mb="0" cb="0"/><line nr="624" mi="1" ci="0" mb="0" cb="0"/><line nr="628" mi="5" ci="0" mb="0" cb="0"/><line nr="634" mi="7" ci="0" mb="0" cb="0"/><line nr="639" mi="4" ci="0" mb="0" cb="0"/><line nr="640" mi="1" ci="0" mb="0" cb="0"/><line nr="644" mi="4" ci="0" mb="0" cb="0"/><line nr="649" mi="5" ci="0" mb="0" cb="0"/><line nr="655" mi="7" ci="0" mb="0" cb="0"/><line nr="660" mi="4" ci="0" mb="0" cb="0"/><line nr="661" mi="1" ci="0" mb="0" cb="0"/><line nr="665" mi="4" ci="0" mb="0" cb="0"/><line nr="670" mi="4" ci="0" mb="0" cb="0"/><line nr="675" mi="4" ci="0" mb="0" cb="0"/><line nr="680" mi="4" ci="0" mb="0" cb="0"/><line nr="685" mi="3" ci="8" mb="1" cb="1"/><line nr="690" mi="0" ci="4" mb="0" cb="0"/><line nr="695" mi="0" ci="4" mb="0" cb="0"/><line nr="704" mi="0" ci="2" mb="0" cb="0"/><line nr="705" mi="0" ci="5" mb="0" cb="0"/><line nr="706" mi="0" ci="1" mb="0" cb="0"/><line nr="709" mi="0" ci="3" mb="0" cb="0"/><line nr="714" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="4" mb="0" cb="0"/><line nr="724" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="4" mb="0" cb="0"/><line nr="730" mi="0" ci="1" mb="0" cb="0"/><line nr="734" mi="0" ci="4" mb="0" cb="0"/><line nr="735" mi="0" ci="1" mb="0" cb="0"/><line nr="739" mi="0" ci="8" mb="0" cb="0"/><line nr="744" mi="0" ci="8" mb="0" cb="0"/><line nr="749" mi="0" ci="9" mb="0" cb="0"/><line nr="754" mi="0" ci="6" mb="0" cb="0"/><line nr="759" mi="0" ci="6" mb="0" cb="0"/><line nr="760" mi="0" ci="1" mb="0" cb="0"/><line nr="764" mi="0" ci="4" mb="0" cb="0"/><line nr="765" mi="0" ci="1" mb="0" cb="0"/><line nr="769" mi="0" ci="5" mb="0" cb="0"/><line nr="774" mi="0" ci="5" mb="0" cb="0"/><line nr="779" mi="0" ci="3" mb="0" cb="0"/><line nr="780" mi="0" ci="1" mb="0" cb="0"/><line nr="784" mi="0" ci="3" mb="0" cb="0"/><line nr="785" mi="0" ci="1" mb="0" cb="0"/><line nr="789" mi="0" ci="6" mb="0" cb="0"/><line nr="794" mi="0" ci="4" mb="0" cb="0"/><line nr="799" mi="0" ci="4" mb="0" cb="0"/><line nr="800" mi="0" ci="1" mb="0" cb="0"/><line nr="804" mi="0" ci="6" mb="0" cb="0"/><line nr="809" mi="0" ci="4" mb="0" cb="0"/><line nr="814" mi="0" ci="4" mb="0" cb="0"/><line nr="815" mi="0" ci="1" mb="0" cb="0"/><line nr="819" mi="0" ci="4" mb="0" cb="0"/><line nr="824" mi="0" ci="4" mb="0" cb="0"/><line nr="829" mi="0" ci="4" mb="0" cb="0"/><line nr="834" mi="0" ci="4" mb="0" cb="0"/><line nr="835" mi="0" ci="1" mb="0" cb="0"/><line nr="840" mi="0" ci="7" mb="0" cb="0"/><line nr="846" mi="0" ci="7" mb="0" cb="0"/><line nr="851" mi="3" ci="8" mb="1" cb="1"/><line nr="856" mi="0" ci="4" mb="0" cb="0"/><line nr="861" mi="0" ci="4" mb="0" cb="0"/><line nr="869" mi="0" ci="3" mb="0" cb="0"/><line nr="870" mi="0" ci="3" mb="1" cb="1"/><line nr="871" mi="5" ci="0" mb="0" cb="0"/><line nr="872" mi="0" ci="1" mb="0" cb="0"/><line nr="876" mi="0" ci="4" mb="0" cb="0"/><line nr="881" mi="0" ci="4" mb="0" cb="0"/><line nr="886" mi="0" ci="4" mb="0" cb="0"/><line nr="892" mi="3" ci="0" mb="0" cb="0"/><line nr="893" mi="1" ci="0" mb="0" cb="0"/><line nr="898" mi="5" ci="0" mb="0" cb="0"/><line nr="899" mi="1" ci="0" mb="0" cb="0"/><line nr="907" mi="2" ci="0" mb="0" cb="0"/><line nr="908" mi="5" ci="0" mb="0" cb="0"/><line nr="909" mi="1" ci="0" mb="0" cb="0"/><line nr="913" mi="5" ci="0" mb="0" cb="0"/><line nr="918" mi="4" ci="0" mb="0" cb="0"/><line nr="923" mi="5" ci="0" mb="0" cb="0"/><line nr="928" mi="3" ci="0" mb="0" cb="0"/><line nr="929" mi="1" ci="0" mb="0" cb="0"/><line nr="933" mi="7" ci="0" mb="0" cb="0"/><line nr="941" mi="0" ci="2" mb="0" cb="0"/><line nr="942" mi="0" ci="5" mb="0" cb="0"/><line nr="943" mi="0" ci="1" mb="0" cb="0"/><line nr="947" mi="0" ci="5" mb="0" cb="0"/><line nr="952" mi="0" ci="4" mb="0" cb="0"/><line nr="957" mi="5" ci="0" mb="0" cb="0"/><line nr="962" mi="3" ci="0" mb="0" cb="0"/><line nr="963" mi="1" ci="0" mb="0" cb="0"/><line nr="967" mi="0" ci="7" mb="0" cb="0"/><line nr="974" mi="2" ci="0" mb="0" cb="0"/><line nr="975" mi="3" ci="0" mb="0" cb="0"/><line nr="976" mi="1" ci="0" mb="0" cb="0"/><line nr="980" mi="4" ci="0" mb="0" cb="0"/><line nr="985" mi="4" ci="0" mb="0" cb="0"/><line nr="990" mi="4" ci="0" mb="0" cb="0"/><line nr="995" mi="4" ci="0" mb="0" cb="0"/><line nr="1000" mi="4" ci="0" mb="0" cb="0"/><line nr="1005" mi="3" ci="0" mb="0" cb="0"/><line nr="1006" mi="1" ci="0" mb="0" cb="0"/><line nr="1012" mi="0" ci="2" mb="0" cb="0"/><line nr="1013" mi="0" ci="3" mb="0" cb="0"/><line nr="1014" mi="0" ci="1" mb="0" cb="0"/><line nr="1018" mi="0" ci="4" mb="0" cb="0"/><line nr="1023" mi="0" ci="4" mb="0" cb="0"/><line nr="1028" mi="0" ci="4" mb="0" cb="0"/><line nr="1033" mi="0" ci="4" mb="0" cb="0"/><line nr="1038" mi="0" ci="4" mb="0" cb="0"/><line nr="1043" mi="0" ci="3" mb="0" cb="0"/><line nr="1044" mi="0" ci="1" mb="0" cb="0"/><line nr="1048" mi="5" ci="8" mb="1" cb="1"/><line nr="1052" mi="0" ci="3" mb="1" cb="1"/><line nr="1053" mi="4" ci="0" mb="0" cb="0"/><line nr="1054" mi="4" ci="8" mb="1" cb="1"/><line nr="1059" mi="0" ci="3" mb="1" cb="1"/><line nr="1060" mi="4" ci="0" mb="0" cb="0"/><line nr="1061" mi="0" ci="3" mb="0" cb="2"/><line nr="1062" mi="0" ci="4" mb="0" cb="0"/><line nr="1063" mi="4" ci="8" mb="1" cb="1"/><line nr="1068" mi="0" ci="2" mb="0" cb="0"/><line nr="1069" mi="0" ci="3" mb="1" cb="1"/><line nr="1070" mi="4" ci="0" mb="0" cb="0"/><line nr="1071" mi="0" ci="3" mb="1" cb="1"/><line nr="1072" mi="4" ci="0" mb="0" cb="0"/><line nr="1073" mi="0" ci="3" mb="0" cb="2"/><line nr="1074" mi="0" ci="2" mb="0" cb="0"/><line nr="1075" mi="0" ci="3" mb="0" cb="2"/><line nr="1076" mi="0" ci="2" mb="0" cb="0"/><line nr="1077" mi="0" ci="3" mb="0" cb="2"/><line nr="1078" mi="0" ci="2" mb="0" cb="0"/><line nr="1079" mi="0" ci="3" mb="1" cb="1"/><line nr="1080" mi="0" ci="2" mb="0" cb="0"/><line nr="1081" mi="3" ci="0" mb="2" cb="0"/><line nr="1082" mi="2" ci="0" mb="0" cb="0"/><line nr="1083" mi="1" ci="0" mb="0" cb="0"/><line nr="1086" mi="0" ci="5" mb="0" cb="0"/><line nr="1091" mi="0" ci="2" mb="0" cb="0"/><line nr="1096" mi="0" ci="2" mb="0" cb="0"/><line nr="1107" mi="0" ci="2" mb="0" cb="0"/><line nr="1108" mi="0" ci="3" mb="0" cb="0"/><line nr="1109" mi="0" ci="3" mb="0" cb="0"/><line nr="1110" mi="0" ci="3" mb="0" cb="0"/><line nr="1111" mi="0" ci="3" mb="0" cb="0"/><line nr="1112" mi="0" ci="1" mb="0" cb="0"/><line nr="1116" mi="0" ci="4" mb="1" cb="1"/><line nr="1117" mi="2" ci="0" mb="0" cb="0"/><line nr="1118" mi="0" ci="4" mb="0" cb="0"/><line nr="1119" mi="0" ci="3" mb="0" cb="0"/><line nr="1120" mi="0" ci="2" mb="0" cb="0"/><line nr="1125" mi="1" ci="11" mb="2" cb="2"/><line nr="1130" mi="1" ci="7" mb="1" cb="1"/><line nr="1135" mi="4" ci="0" mb="2" cb="0"/><line nr="1136" mi="5" ci="0" mb="0" cb="0"/><line nr="1137" mi="3" ci="0" mb="0" cb="0"/><line nr="1139" mi="1" ci="0" mb="0" cb="0"/><line nr="1143" mi="0" ci="10" mb="0" cb="0"/><line nr="1145" mi="1" ci="10" mb="1" cb="1"/><line nr="1149" mi="0" ci="3" mb="0" cb="0"/><line nr="1154" mi="0" ci="2" mb="0" cb="0"/><line nr="1155" mi="0" ci="3" mb="0" cb="0"/><line nr="1156" mi="0" ci="4" mb="0" cb="0"/><line nr="1161" mi="0" ci="2" mb="0" cb="0"/><line nr="1162" mi="0" ci="4" mb="0" cb="0"/><line nr="1167" mi="0" ci="4" mb="0" cb="0"/><line nr="1172" mi="0" ci="4" mb="0" cb="0"/><line nr="1177" mi="3" ci="0" mb="2" cb="0"/><line nr="1178" mi="4" ci="0" mb="0" cb="0"/><line nr="1179" mi="7" ci="0" mb="0" cb="0"/><line nr="1180" mi="4" ci="0" mb="0" cb="0"/><line nr="1181" mi="1" ci="0" mb="0" cb="0"/><line nr="1209" mi="7" ci="0" mb="0" cb="0"/><line nr="1248" mi="0" ci="7" mb="0" cb="0"/><line nr="1295" mi="0" ci="3" mb="1" cb="1"/><line nr="1296" mi="0" ci="4" mb="1" cb="1"/><line nr="1297" mi="6" ci="0" mb="2" cb="0"/><line nr="1298" mi="4" ci="1" mb="0" cb="0"/><line nr="1299" mi="2" ci="2" mb="1" cb="1"/><line nr="1300" mi="0" ci="6" mb="0" cb="2"/><line nr="1301" mi="0" ci="5" mb="0" cb="0"/><line nr="1302" mi="0" ci="8" mb="0" cb="0"/><line nr="1305" mi="4" ci="0" mb="4" cb="0"/><line nr="1306" mi="4" ci="0" mb="0" cb="0"/><line nr="1307" mi="7" ci="0" mb="2" cb="0"/><line nr="1309" mi="2" ci="0" mb="2" cb="0"/><line nr="1310" mi="4" ci="0" mb="0" cb="0"/><line nr="1311" mi="9" ci="0" mb="2" cb="0"/><line nr="1312" mi="6" ci="0" mb="0" cb="0"/><line nr="1313" mi="6" ci="0" mb="0" cb="0"/><line nr="1314" mi="1" ci="0" mb="0" cb="0"/><line nr="1316" mi="4" ci="0" mb="0" cb="0"/><line nr="1317" mi="9" ci="0" mb="2" cb="0"/><line nr="1318" mi="4" ci="0" mb="0" cb="0"/><line nr="1320" mi="2" ci="0" mb="2" cb="0"/><line nr="1321" mi="10" ci="0" mb="2" cb="0"/><line nr="1322" mi="8" ci="0" mb="0" cb="0"/><line nr="1323" mi="10" ci="0" mb="4" cb="0"/><line nr="1324" mi="5" ci="0" mb="0" cb="0"/><line nr="1325" mi="2" ci="0" mb="0" cb="0"/><line nr="1327" mi="9" ci="0" mb="2" cb="0"/><line nr="1328" mi="10" ci="0" mb="0" cb="0"/><line nr="1331" mi="2" ci="0" mb="2" cb="0"/><line nr="1332" mi="11" ci="0" mb="2" cb="0"/><line nr="1333" mi="5" ci="0" mb="0" cb="0"/><line nr="1334" mi="3" ci="0" mb="0" cb="0"/><line nr="1335" mi="7" ci="0" mb="0" cb="0"/><line nr="1336" mi="6" ci="0" mb="0" cb="0"/><line nr="1337" mi="1" ci="0" mb="0" cb="0"/><line nr="1339" mi="2" ci="0" mb="2" cb="0"/><line nr="1340" mi="11" ci="0" mb="2" cb="0"/><line nr="1341" mi="5" ci="0" mb="0" cb="0"/><line nr="1342" mi="3" ci="0" mb="0" cb="0"/><line nr="1343" mi="7" ci="0" mb="0" cb="0"/><line nr="1344" mi="6" ci="0" mb="0" cb="0"/><line nr="1345" mi="1" ci="0" mb="0" cb="0"/><line nr="1348" mi="3" ci="0" mb="0" cb="0"/><line nr="1389" mi="0" ci="4" mb="2" cb="2"/><line nr="1390" mi="4" ci="0" mb="0" cb="0"/><line nr="1391" mi="2" ci="5" mb="1" cb="1"/><line nr="1393" mi="0" ci="2" mb="1" cb="1"/><line nr="1394" mi="0" ci="4" mb="0" cb="0"/><line nr="1395" mi="0" ci="11" mb="0" cb="2"/><line nr="1396" mi="0" ci="6" mb="0" cb="0"/><line nr="1397" mi="0" ci="6" mb="0" cb="0"/><line nr="1398" mi="0" ci="1" mb="0" cb="0"/><line nr="1400" mi="0" ci="4" mb="0" cb="0"/><line nr="1401" mi="0" ci="11" mb="0" cb="2"/><line nr="1402" mi="0" ci="4" mb="0" cb="0"/><line nr="1404" mi="0" ci="2" mb="1" cb="1"/><line nr="1405" mi="12" ci="0" mb="2" cb="0"/><line nr="1406" mi="8" ci="0" mb="0" cb="0"/><line nr="1407" mi="10" ci="0" mb="4" cb="0"/><line nr="1408" mi="5" ci="0" mb="0" cb="0"/><line nr="1409" mi="2" ci="0" mb="0" cb="0"/><line nr="1411" mi="0" ci="11" mb="0" cb="2"/><line nr="1412" mi="0" ci="10" mb="0" cb="0"/><line nr="1415" mi="0" ci="2" mb="1" cb="1"/><line nr="1416" mi="11" ci="0" mb="2" cb="0"/><line nr="1417" mi="5" ci="0" mb="0" cb="0"/><line nr="1418" mi="3" ci="0" mb="0" cb="0"/><line nr="1419" mi="8" ci="0" mb="0" cb="0"/><line nr="1420" mi="6" ci="0" mb="0" cb="0"/><line nr="1421" mi="1" ci="0" mb="0" cb="0"/><line nr="1423" mi="0" ci="2" mb="1" cb="1"/><line nr="1424" mi="11" ci="0" mb="2" cb="0"/><line nr="1425" mi="5" ci="0" mb="0" cb="0"/><line nr="1426" mi="3" ci="0" mb="0" cb="0"/><line nr="1427" mi="8" ci="0" mb="0" cb="0"/><line nr="1428" mi="6" ci="0" mb="0" cb="0"/><line nr="1429" mi="1" ci="0" mb="0" cb="0"/><line nr="1432" mi="0" ci="3" mb="0" cb="0"/><line nr="1437" mi="3" ci="0" mb="2" cb="0"/><line nr="1438" mi="3" ci="0" mb="0" cb="0"/><line nr="1439" mi="3" ci="0" mb="0" cb="0"/><line nr="1440" mi="9" ci="0" mb="2" cb="0"/><line nr="1441" mi="7" ci="0" mb="0" cb="0"/><line nr="1442" mi="4" ci="0" mb="2" cb="0"/><line nr="1443" mi="3" ci="0" mb="0" cb="0"/><line nr="1444" mi="3" ci="0" mb="0" cb="0"/><line nr="1445" mi="9" ci="0" mb="2" cb="0"/><line nr="1446" mi="7" ci="0" mb="0" cb="0"/><line nr="1447" mi="4" ci="0" mb="2" cb="0"/><line nr="1448" mi="3" ci="0" mb="0" cb="0"/><line nr="1449" mi="3" ci="0" mb="0" cb="0"/><line nr="1450" mi="9" ci="0" mb="2" cb="0"/><line nr="1451" mi="7" ci="0" mb="0" cb="0"/><line nr="1452" mi="4" ci="0" mb="2" cb="0"/><line nr="1453" mi="3" ci="0" mb="0" cb="0"/><line nr="1454" mi="3" ci="0" mb="0" cb="0"/><line nr="1455" mi="9" ci="0" mb="2" cb="0"/><line nr="1456" mi="7" ci="0" mb="0" cb="0"/><line nr="1457" mi="4" ci="0" mb="2" cb="0"/><line nr="1458" mi="3" ci="0" mb="0" cb="0"/><line nr="1459" mi="3" ci="0" mb="0" cb="0"/><line nr="1460" mi="9" ci="0" mb="2" cb="0"/><line nr="1461" mi="7" ci="0" mb="0" cb="0"/><line nr="1462" mi="4" ci="0" mb="2" cb="0"/><line nr="1463" mi="3" ci="0" mb="0" cb="0"/><line nr="1464" mi="3" ci="0" mb="0" cb="0"/><line nr="1465" mi="9" ci="0" mb="2" cb="0"/><line nr="1466" mi="7" ci="0" mb="0" cb="0"/><line nr="1467" mi="4" ci="0" mb="2" cb="0"/><line nr="1468" mi="3" ci="0" mb="0" cb="0"/><line nr="1469" mi="3" ci="0" mb="0" cb="0"/><line nr="1470" mi="9" ci="0" mb="2" cb="0"/><line nr="1471" mi="7" ci="0" mb="0" cb="0"/><line nr="1472" mi="4" ci="0" mb="2" cb="0"/><line nr="1473" mi="3" ci="0" mb="0" cb="0"/><line nr="1474" mi="3" ci="0" mb="0" cb="0"/><line nr="1475" mi="9" ci="0" mb="2" cb="0"/><line nr="1476" mi="7" ci="0" mb="0" cb="0"/><line nr="1477" mi="4" ci="0" mb="2" cb="0"/><line nr="1478" mi="3" ci="0" mb="0" cb="0"/><line nr="1479" mi="3" ci="0" mb="0" cb="0"/><line nr="1480" mi="9" ci="0" mb="2" cb="0"/><line nr="1481" mi="7" ci="0" mb="0" cb="0"/><line nr="1482" mi="1" ci="0" mb="0" cb="0"/><line nr="1483" mi="4" ci="0" mb="0" cb="0"/><line nr="1485" mi="1" ci="0" mb="0" cb="0"/><line nr="1489" mi="3" ci="0" mb="2" cb="0"/><line nr="1490" mi="3" ci="0" mb="0" cb="0"/><line nr="1491" mi="3" ci="0" mb="0" cb="0"/><line nr="1492" mi="11" ci="0" mb="2" cb="0"/><line nr="1493" mi="7" ci="0" mb="0" cb="0"/><line nr="1494" mi="4" ci="0" mb="2" cb="0"/><line nr="1495" mi="3" ci="0" mb="0" cb="0"/><line nr="1496" mi="3" ci="0" mb="0" cb="0"/><line nr="1497" mi="11" ci="0" mb="2" cb="0"/><line nr="1498" mi="7" ci="0" mb="0" cb="0"/><line nr="1499" mi="4" ci="0" mb="2" cb="0"/><line nr="1500" mi="3" ci="0" mb="0" cb="0"/><line nr="1501" mi="3" ci="0" mb="0" cb="0"/><line nr="1502" mi="11" ci="0" mb="2" cb="0"/><line nr="1503" mi="7" ci="0" mb="0" cb="0"/><line nr="1504" mi="4" ci="0" mb="2" cb="0"/><line nr="1505" mi="3" ci="0" mb="0" cb="0"/><line nr="1506" mi="3" ci="0" mb="0" cb="0"/><line nr="1507" mi="11" ci="0" mb="2" cb="0"/><line nr="1508" mi="7" ci="0" mb="0" cb="0"/><line nr="1509" mi="4" ci="0" mb="2" cb="0"/><line nr="1510" mi="3" ci="0" mb="0" cb="0"/><line nr="1511" mi="3" ci="0" mb="0" cb="0"/><line nr="1512" mi="11" ci="0" mb="2" cb="0"/><line nr="1513" mi="7" ci="0" mb="0" cb="0"/><line nr="1514" mi="4" ci="0" mb="2" cb="0"/><line nr="1515" mi="3" ci="0" mb="0" cb="0"/><line nr="1516" mi="3" ci="0" mb="0" cb="0"/><line nr="1517" mi="11" ci="0" mb="2" cb="0"/><line nr="1518" mi="7" ci="0" mb="0" cb="0"/><line nr="1519" mi="4" ci="0" mb="2" cb="0"/><line nr="1520" mi="3" ci="0" mb="0" cb="0"/><line nr="1521" mi="3" ci="0" mb="0" cb="0"/><line nr="1522" mi="11" ci="0" mb="2" cb="0"/><line nr="1523" mi="7" ci="0" mb="0" cb="0"/><line nr="1524" mi="4" ci="0" mb="2" cb="0"/><line nr="1525" mi="3" ci="0" mb="0" cb="0"/><line nr="1526" mi="3" ci="0" mb="0" cb="0"/><line nr="1527" mi="11" ci="0" mb="2" cb="0"/><line nr="1528" mi="7" ci="0" mb="0" cb="0"/><line nr="1529" mi="4" ci="0" mb="2" cb="0"/><line nr="1530" mi="3" ci="0" mb="0" cb="0"/><line nr="1531" mi="3" ci="0" mb="0" cb="0"/><line nr="1532" mi="11" ci="0" mb="2" cb="0"/><line nr="1533" mi="7" ci="0" mb="0" cb="0"/><line nr="1534" mi="1" ci="0" mb="0" cb="0"/><line nr="1535" mi="4" ci="0" mb="0" cb="0"/><line nr="1537" mi="1" ci="0" mb="0" cb="0"/><line nr="1540" mi="3" ci="0" mb="2" cb="0"/><line nr="1541" mi="2" ci="0" mb="0" cb="0"/><line nr="1542" mi="3" ci="0" mb="2" cb="0"/><line nr="1543" mi="2" ci="0" mb="0" cb="0"/><line nr="1544" mi="3" ci="0" mb="2" cb="0"/><line nr="1545" mi="2" ci="0" mb="0" cb="0"/><line nr="1546" mi="3" ci="0" mb="2" cb="0"/><line nr="1547" mi="2" ci="0" mb="0" cb="0"/><line nr="1548" mi="3" ci="0" mb="2" cb="0"/><line nr="1549" mi="2" ci="0" mb="0" cb="0"/><line nr="1550" mi="3" ci="0" mb="2" cb="0"/><line nr="1551" mi="2" ci="0" mb="0" cb="0"/><line nr="1552" mi="3" ci="0" mb="2" cb="0"/><line nr="1553" mi="2" ci="0" mb="0" cb="0"/><line nr="1554" mi="3" ci="0" mb="2" cb="0"/><line nr="1555" mi="2" ci="0" mb="0" cb="0"/><line nr="1556" mi="3" ci="0" mb="2" cb="0"/><line nr="1557" mi="2" ci="0" mb="0" cb="0"/><line nr="1558" mi="4" ci="0" mb="0" cb="0"/><line nr="1570" mi="0" ci="9" mb="0" cb="0"/><line nr="1581" mi="0" ci="9" mb="0" cb="0"/><line nr="1593" mi="0" ci="9" mb="0" cb="0"/><line nr="1604" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1418" covered="861"/><counter type="BRANCH" missed="173" covered="51"/><counter type="LINE" missed="304" covered="202"/><counter type="COMPLEXITY" missed="194" covered="134"/><counter type="METHOD" missed="92" covered="124"/><counter type="CLASS" missed="5" covered="13"/></sourcefile><sourcefile name="IWeights.java"><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="1" cb="1"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="2"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="54"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsImplDouble.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="244"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="65"/><counter type="COMPLEXITY" missed="7" covered="33"/><counter type="METHOD" missed="6" covered="32"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="IWeightsShort.java"><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsImplChar.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="235"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="7" covered="31"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="WeightsLong.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexGraphBuilderImpl.java"><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="2"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="1" cb="1"/><line nr="70" mi="11" ci="0" mb="2" cb="0"/><line nr="71" mi="7" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="11" ci="0" mb="2" cb="0"/><line nr="74" mi="11" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="2"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="1" ci="9" mb="1" cb="3"/><line nr="130" mi="1" ci="9" mb="1" cb="3"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="1" cb="1"/><line nr="139" mi="6" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="1" cb="1"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="7" ci="1" mb="2" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="12" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="1" cb="1"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="1" cb="1"/><line nr="158" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="1" cb="1"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="1" cb="1"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="2"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="0" cb="2"/><line nr="168" mi="0" ci="18" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="2"/><line nr="170" mi="0" ci="16" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="2"/><line nr="187" mi="0" ci="16" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="2"/><line nr="189" mi="0" ci="14" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="2" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="2"/><line nr="245" mi="0" ci="6" mb="0" cb="2"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="1" cb="1"/><line nr="249" mi="8" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="2"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="1" cb="1"/><line nr="261" mi="6" ci="0" mb="0" cb="0"/><line nr="262" mi="0" ci="4" mb="1" cb="1"/><line nr="263" mi="8" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="22" ci="1" mb="4" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="4" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="10" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="344" mi="11" ci="0" mb="2" cb="0"/><line nr="349" mi="2" ci="0" mb="0" cb="0"/><line nr="350" mi="13" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="8" mb="0" cb="0"/><line nr="373" mi="0" ci="8" mb="0" cb="0"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="383" mi="0" ci="4" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="389" mi="0" ci="2" mb="1" cb="1"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="8" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="8" mb="0" cb="0"/><line nr="411" mi="0" ci="2" mb="0" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="2" mb="0" cb="0"/><line nr="439" mi="0" ci="5" mb="0" cb="0"/><line nr="440" mi="0" ci="5" mb="0" cb="0"/><line nr="441" mi="0" ci="1" mb="0" cb="0"/><line nr="445" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="215" covered="761"/><counter type="BRANCH" missed="30" covered="48"/><counter type="LINE" missed="29" covered="172"/><counter type="COMPLEXITY" missed="30" covered="64"/><counter type="METHOD" missed="8" covered="47"/><counter type="CLASS" missed="1" covered="6"/></sourcefile><sourcefile name="WeightsImplInt.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="244"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="7" covered="65"/><counter type="COMPLEXITY" missed="7" covered="33"/><counter type="METHOD" missed="6" covered="32"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="WeightsChar.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsInt.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsShort.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphLinkedDirected.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="15" mb="0" cb="0"/><line nr="55" mi="0" ci="15" mb="0" cb="0"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><line nr="57" mi="0" ci="14" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="15" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="14" mb="0" cb="0"/><line nr="70" mi="0" ci="14" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="2"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="15" ci="0" mb="0" cb="0"/><line nr="85" mi="15" ci="0" mb="0" cb="0"/><line nr="86" mi="14" ci="0" mb="0" cb="0"/><line nr="87" mi="14" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="2" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="4" ci="7" mb="1" cb="1"/><line nr="108" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="4" ci="7" mb="1" cb="1"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="11" mb="0" cb="2"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="11" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="2"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="2"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="2"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="2"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="2"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="9" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="2"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="2"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="9" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="2"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="11" mb="0" cb="2"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="12" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="12" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="12" mb="0" cb="0"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="739"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="15" covered="153"/><counter type="COMPLEXITY" missed="8" covered="53"/><counter type="METHOD" missed="5" covered="40"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="GraphMatrixUndirected.java"><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="14" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="7" ci="1" mb="2" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="14" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="2"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="14" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="11" ci="0" mb="2" cb="0"/><line nr="76" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="2" ci="5" mb="1" cb="1"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="145" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="5" ci="8" mb="1" cb="1"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="13" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="5" ci="8" mb="1" cb="1"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="122" covered="387"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="17" covered="73"/><counter type="COMPLEXITY" missed="10" covered="28"/><counter type="METHOD" missed="4" covered="22"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="IWeightFunction.java"><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="0" ci="12" mb="0" cb="2"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="10" ci="0" mb="2" cb="0"/><line nr="118" mi="8" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="4" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="11" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="40"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="12" covered="7"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IntGraphBuilderImpl.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="10" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="8" ci="1" mb="2" cb="0"/><line nr="55" mi="8" ci="1" mb="2" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="11" ci="0" mb="4" cb="0"/><line nr="113" mi="1" ci="10" mb="1" cb="3"/><line nr="117" mi="1" ci="10" mb="1" cb="3"/><line nr="121" mi="1" ci="10" mb="1" cb="3"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="10" ci="0" mb="2" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="10" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="1" cb="1"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="9" ci="1" mb="2" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="1" cb="1"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="1" cb="1"/><line nr="156" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="1" cb="1"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="1" cb="1"/><line nr="163" mi="6" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="9" ci="1" mb="2" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="9" ci="1" mb="2" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="1" cb="1"/><line nr="177" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="1" cb="1"/><line nr="182" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="1" cb="1"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="9" ci="1" mb="2" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="1" cb="1"/><line nr="192" mi="6" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="1" cb="1"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="1" cb="1"/><line nr="237" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="251" mi="4" ci="0" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="3" ci="0" mb="0" cb="0"/><line nr="258" mi="3" ci="0" mb="0" cb="0"/><line nr="259" mi="3" ci="0" mb="0" cb="0"/><line nr="260" mi="3" ci="0" mb="0" cb="0"/><line nr="261" mi="3" ci="0" mb="0" cb="0"/><line nr="262" mi="3" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="1" cb="1"/><line nr="285" mi="12" ci="0" mb="2" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="15" mb="0" cb="0"/><line nr="295" mi="0" ci="8" mb="0" cb="0"/><line nr="300" mi="8" ci="0" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="0"/><line nr="327" mi="6" ci="7" mb="1" cb="1"/><line nr="328" mi="6" ci="7" mb="1" cb="1"/><line nr="329" mi="0" ci="7" mb="0" cb="0"/><line nr="334" mi="0" ci="6" mb="0" cb="0"/><line nr="335" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="3" mb="0" cb="0"/><line nr="338" mi="6" ci="7" mb="1" cb="1"/><line nr="339" mi="6" ci="7" mb="1" cb="1"/><line nr="340" mi="0" ci="7" mb="0" cb="0"/><line nr="347" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="0" cb="0"/><line nr="356" mi="0" ci="2" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="6" ci="7" mb="1" cb="1"/><line nr="366" mi="3" ci="10" mb="1" cb="1"/><line nr="367" mi="0" ci="7" mb="0" cb="0"/><line nr="372" mi="0" ci="6" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="6" ci="7" mb="1" cb="1"/><line nr="377" mi="6" ci="7" mb="1" cb="1"/><line nr="378" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="274" covered="711"/><counter type="BRANCH" missed="47" covered="35"/><counter type="LINE" missed="36" covered="155"/><counter type="COMPLEXITY" missed="44" covered="40"/><counter type="METHOD" missed="9" covered="34"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="IWeightsByte.java"><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="19"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EdgeIter.java"/><sourcefile name="WeightFunction.java"><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="2"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="2" cb="4"/><line nr="120" mi="0" ci="3" mb="1" cb="1"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="9" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="2" ci="3" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="43"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="6" covered="9"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightFunctionInt.java"><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsBool.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightsImplObj.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="235"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="7" covered="31"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="GraphCSRUndirected.java"><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="2" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="2" cb="0"/><line nr="91" mi="0" ci="15" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="164"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="34"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="GraphHashmapDirected.java"><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="2"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="2"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="2"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="2"/><line nr="77" mi="0" ci="8" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="1" cb="1"/><line nr="81" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="1" cb="1"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="11" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="11" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="2" cb="0"/><line nr="106" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="8" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="8" ci="0" mb="2" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="7" ci="1" mb="2" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="0" ci="3" mb="1" cb="1"/><line nr="140" mi="7" ci="0" mb="0" cb="0"/><line nr="141" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="0" ci="3" mb="1" cb="1"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="7" ci="1" mb="2" cb="0"/><line nr="152" mi="0" ci="9" mb="1" cb="1"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="3" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="8" ci="0" mb="0" cb="0"/><line nr="160" mi="8" ci="0" mb="2" cb="0"/><line nr="161" mi="8" ci="0" mb="2" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="1" cb="1"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="7" ci="0" mb="0" cb="0"/><line nr="170" mi="8" ci="0" mb="0" cb="0"/><line nr="171" mi="8" ci="0" mb="2" cb="0"/><line nr="172" mi="8" ci="0" mb="2" cb="0"/><line nr="173" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="7" ci="1" mb="2" cb="0"/><line nr="183" mi="7" ci="1" mb="2" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="9" mb="0" cb="2"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="7" ci="1" mb="2" cb="0"/><line nr="194" mi="7" ci="1" mb="2" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="1" cb="1"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="8" ci="0" mb="0" cb="0"/><line nr="201" mi="8" ci="0" mb="2" cb="0"/><line nr="202" mi="8" ci="0" mb="2" cb="0"/><line nr="204" mi="0" ci="3" mb="1" cb="1"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="8" ci="0" mb="0" cb="0"/><line nr="207" mi="8" ci="0" mb="0" cb="0"/><line nr="208" mi="8" ci="0" mb="2" cb="0"/><line nr="209" mi="8" ci="0" mb="2" cb="0"/><line nr="211" mi="0" ci="3" mb="1" cb="1"/><line nr="212" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="8" ci="0" mb="0" cb="0"/><line nr="214" mi="8" ci="0" mb="0" cb="0"/><line nr="215" mi="8" ci="0" mb="2" cb="0"/><line nr="216" mi="8" ci="0" mb="2" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="2"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="222" mi="7" ci="1" mb="2" cb="0"/><line nr="223" mi="7" ci="1" mb="2" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="8" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="8" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="1" cb="1"/><line nr="254" mi="7" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="8" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="7" ci="1" mb="2" cb="0"/><line nr="270" mi="7" ci="1" mb="2" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="7" ci="1" mb="2" cb="0"/><line nr="277" mi="0" ci="8" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="279" mi="10" ci="1" mb="2" cb="0"/><line nr="280" mi="10" ci="1" mb="2" cb="0"/><line nr="281" mi="10" ci="1" mb="2" cb="0"/><line nr="282" mi="10" ci="1" mb="2" cb="0"/><line nr="283" mi="0" ci="8" mb="0" cb="0"/><line nr="284" mi="0" ci="8" mb="0" cb="0"/><line nr="285" mi="0" ci="8" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="7" ci="1" mb="2" cb="0"/><line nr="288" mi="7" ci="1" mb="2" cb="0"/><line nr="289" mi="7" ci="1" mb="2" cb="0"/><line nr="290" mi="7" ci="1" mb="2" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="6" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="2"/><line nr="299" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="2"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="8" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="2"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="6" mb="1" cb="1"/><line nr="316" mi="7" ci="0" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="320" mi="0" ci="7" mb="0" cb="0"/><line nr="321" mi="7" ci="1" mb="2" cb="0"/><line nr="322" mi="7" ci="1" mb="2" cb="0"/><line nr="324" mi="0" ci="8" mb="0" cb="0"/><line nr="325" mi="0" ci="8" mb="0" cb="0"/><line nr="326" mi="7" ci="1" mb="2" cb="0"/><line nr="327" mi="7" ci="1" mb="2" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="7" mb="0" cb="2"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="1" mb="0" cb="0"/><line nr="353" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="360" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="4" ci="0" mb="0" cb="0"/><line nr="370" mi="0" ci="10" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="5" mb="0" cb="0"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="4" ci="0" mb="0" cb="0"/><line nr="394" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="555" covered="795"/><counter type="BRANCH" missed="90" covered="42"/><counter type="LINE" missed="60" covered="173"/><counter type="COMPLEXITY" missed="56" covered="43"/><counter type="METHOD" missed="5" covered="28"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="IndexIdMap.java"/><sourcefile name="GraphHashmapAbstract.java"><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="10" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="13" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="10" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="2" cb="0"/><line nr="65" mi="9" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="1" cb="1"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="3" mb="0" cb="2"/><line nr="180" mi="0" ci="7" mb="0" cb="2"/><line nr="181" mi="0" ci="10" mb="0" cb="0"/><line nr="182" mi="10" ci="1" mb="4" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="7" ci="1" mb="2" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="2"/><line nr="187" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="10" ci="1" mb="4" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="2"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="10" ci="1" mb="4" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="2"/><line nr="197" mi="0" ci="7" mb="0" cb="0"/><line nr="198" mi="10" ci="1" mb="4" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="2"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="2"/><line nr="246" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="439"/><counter type="BRANCH" missed="21" covered="31"/><counter type="LINE" missed="9" covered="110"/><counter type="COMPLEXITY" missed="13" covered="42"/><counter type="METHOD" missed="2" covered="27"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="IntGraphBase.java"><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="1" cb="1"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="1" cb="1"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="1" cb="1"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="1" cb="1"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="1" cb="1"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="12" mb="0" cb="2"/><line nr="43" mi="0" ci="16" mb="2" cb="2"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="2"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="6" ci="6" mb="6" cb="2"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="1" cb="1"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="2"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="1" cb="1"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="1" cb="1"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="2"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="1" cb="1"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="12" ci="0" mb="2" cb="0"/><line nr="79" mi="14" ci="0" mb="0" cb="0"/><line nr="81" mi="12" ci="0" mb="2" cb="0"/><line nr="82" mi="11" ci="0" mb="0" cb="0"/><line nr="84" mi="11" ci="0" mb="2" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="11" ci="0" mb="2" cb="0"/><line nr="87" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="10" ci="0" mb="2" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="6" ci="0" mb="0" cb="0"/><line nr="103" mi="10" ci="0" mb="2" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="2" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="8" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="12" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="2" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="1" cb="1"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="18" mb="0" cb="4"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="18" mb="0" cb="4"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="0" ci="11" mb="0" cb="2"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="11" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="349" covered="299"/><counter type="BRANCH" missed="48" covered="36"/><counter type="LINE" missed="72" covered="54"/><counter type="COMPLEXITY" missed="34" covered="27"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="WeightsImplLong.java"><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="2"/><line nr="49" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="7" ci="1" mb="2" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="0" mb="0" cb="0"/><line nr="214" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="235"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="63"/><counter type="COMPLEXITY" missed="8" covered="32"/><counter type="METHOD" missed="7" covered="31"/><counter type="CLASS" missed="2" covered="6"/></sourcefile><sourcefile name="IndexGraphImpl.java"><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IEdgeIter.java"><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphCSRDirectedReindexed.java"><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="8" ci="1" mb="2" cb="0"/><line nr="40" mi="9" ci="1" mb="2" cb="0"/><line nr="41" mi="11" ci="1" mb="2" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="2"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="7" ci="0" mb="2" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="7" ci="0" mb="2" cb="0"/><line nr="149" mi="0" ci="15" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="9" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="345"/><counter type="BRANCH" missed="10" covered="12"/><counter type="LINE" missed="2" covered="74"/><counter type="COMPLEXITY" missed="7" covered="29"/><counter type="METHOD" missed="2" covered="23"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="IndexGraph.java"><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="2"/><line nr="259" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexGraphFactoryImpl.java"><line nr="28" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="4" ci="7" mb="1" cb="1"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="14" mb="0" cb="2"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="11" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="14" mb="0" cb="2"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="11" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="14" mb="0" cb="2"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="6" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="14" mb="0" cb="2"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="0" ci="11" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="2"/><line nr="207" mi="0" ci="9" mb="1" cb="4"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="7" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="8" mb="1" cb="3"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="6" ci="7" mb="5" cb="1"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="5" mb="3" cb="1"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="0" ci="14" mb="0" cb="2"/><line nr="245" mi="6" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="11" mb="0" cb="0"/><line nr="258" mi="6" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="3" ci="0" mb="0" cb="0"/><line nr="281" mi="2" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="292" mi="0" ci="2" mb="1" cb="1"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="1" cb="1"/><line nr="301" mi="6" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="5" ci="0" mb="0" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="0" ci="8" mb="1" cb="1"/><line nr="322" mi="0" ci="4" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="6" ci="0" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="111" covered="414"/><counter type="BRANCH" missed="14" covered="25"/><counter type="LINE" missed="21" covered="79"/><counter type="COMPLEXITY" missed="23" covered="52"/><counter type="METHOD" missed="12" covered="42"/><counter type="CLASS" missed="1" covered="11"/></sourcefile><sourcefile name="WeightsFloat.java"><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IndexGraphFactory.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphArrayUndirected.java"><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="14" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="14" mb="0" cb="0"/><line nr="68" mi="0" ci="13" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="14" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="14" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="2" ci="5" mb="1" cb="1"/><line nr="132" mi="7" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="2" ci="5" mb="1" cb="1"/><line nr="136" mi="7" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="2"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="2"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="7" ci="1" mb="2" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="2"/><line nr="205" mi="0" ci="9" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="7" mb="0" cb="0"/><line nr="248" mi="0" ci="7" mb="0" cb="2"/><line nr="253" mi="0" ci="20" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="1" ci="6" mb="1" cb="1"/><line nr="274" mi="0" ci="20" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="294" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="682"/><counter type="BRANCH" missed="5" covered="31"/><counter type="LINE" missed="3" covered="130"/><counter type="COMPLEXITY" missed="5" covered="50"/><counter type="METHOD" missed="1" covered="36"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="WeightsImpl.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="8" mb="0" cb="2"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="2"/><line nr="78" mi="0" ci="8" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="8" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="2"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="94" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="1" cb="1"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="1" cb="1"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="12" mb="0" cb="2"/><line nr="143" mi="0" ci="13" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="1" cb="1"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="12" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="12" mb="0" cb="2"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="12" mb="0" cb="2"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="12" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="1" cb="1"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="2"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="2"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="7" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="2"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="2"/><line nr="214" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="1" cb="1"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="2"/><line nr="227" mi="0" ci="8" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="2"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="8" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="2"/><line nr="233" mi="0" ci="8" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="2"/><line nr="235" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="237" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="0" ci="3" mb="0" cb="2"/><line nr="240" mi="0" ci="8" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="8" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="1" cb="1"/><line nr="244" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="7" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="9" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="1" cb="1"/><line nr="263" mi="6" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="9" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="1" cb="1"/><line nr="271" mi="6" ci="0" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="2"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="2"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="2"/><line nr="302" mi="0" ci="7" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="2"/><line nr="304" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="2"/><line nr="306" mi="0" ci="7" mb="0" cb="0"/><line nr="307" mi="0" ci="3" mb="0" cb="2"/><line nr="308" mi="0" ci="7" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="2"/><line nr="310" mi="0" ci="7" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="2"/><line nr="312" mi="0" ci="7" mb="0" cb="0"/><line nr="314" mi="0" ci="7" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="3" mb="1" cb="1"/><line nr="347" mi="2" ci="0" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="2"/><line nr="349" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="2"/><line nr="351" mi="0" ci="6" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="2"/><line nr="353" mi="0" ci="6" mb="0" cb="0"/><line nr="354" mi="0" ci="3" mb="0" cb="2"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="2"/><line nr="357" mi="0" ci="6" mb="0" cb="0"/><line nr="358" mi="0" ci="3" mb="0" cb="2"/><line nr="359" mi="0" ci="6" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="2"/><line nr="361" mi="0" ci="6" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="2"/><line nr="363" mi="0" ci="6" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="1" cb="1"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="7" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="1" cb="1"/><line nr="372" mi="9" ci="0" mb="0" cb="0"/><line nr="373" mi="0" ci="1" mb="0" cb="0"/><line nr="377" mi="0" ci="3" mb="0" cb="2"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="6" mb="1" cb="3"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="1" cb="3"/><line nr="382" mi="0" ci="11" mb="0" cb="2"/><line nr="383" mi="0" ci="11" mb="1" cb="1"/><line nr="384" mi="2" ci="0" mb="0" cb="0"/><line nr="385" mi="0" ci="2" mb="0" cb="0"/><line nr="386" mi="0" ci="6" mb="1" cb="3"/><line nr="387" mi="0" ci="11" mb="0" cb="2"/><line nr="388" mi="0" ci="10" mb="1" cb="1"/><line nr="389" mi="2" ci="0" mb="0" cb="0"/><line nr="390" mi="0" ci="2" mb="0" cb="0"/><line nr="391" mi="0" ci="6" mb="1" cb="3"/><line nr="392" mi="0" ci="11" mb="0" cb="2"/><line nr="393" mi="0" ci="10" mb="1" cb="1"/><line nr="394" mi="2" ci="0" mb="0" cb="0"/><line nr="395" mi="0" ci="2" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="1" cb="3"/><line nr="397" mi="0" ci="11" mb="0" cb="2"/><line nr="398" mi="0" ci="10" mb="1" cb="1"/><line nr="399" mi="2" ci="0" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="1" cb="3"/><line nr="402" mi="0" ci="11" mb="0" cb="2"/><line nr="403" mi="0" ci="11" mb="1" cb="1"/><line nr="404" mi="2" ci="0" mb="0" cb="0"/><line nr="405" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="1" cb="3"/><line nr="407" mi="0" ci="11" mb="0" cb="2"/><line nr="408" mi="0" ci="11" mb="1" cb="1"/><line nr="409" mi="2" ci="0" mb="0" cb="0"/><line nr="410" mi="0" ci="2" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="1" cb="3"/><line nr="412" mi="0" ci="11" mb="0" cb="2"/><line nr="413" mi="0" ci="11" mb="1" cb="1"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="2" mb="0" cb="0"/><line nr="416" mi="0" ci="6" mb="1" cb="3"/><line nr="417" mi="0" ci="11" mb="0" cb="2"/><line nr="418" mi="0" ci="10" mb="1" cb="1"/><line nr="419" mi="2" ci="0" mb="0" cb="0"/><line nr="420" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="0" ci="6" mb="2" cb="2"/><line nr="422" mi="0" ci="11" mb="0" cb="2"/><line nr="423" mi="0" ci="10" mb="1" cb="1"/><line nr="424" mi="2" ci="0" mb="0" cb="0"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="1" ci="0" mb="0" cb="0"/><line nr="428" mi="0" ci="6" mb="1" cb="3"/><line nr="429" mi="0" ci="9" mb="0" cb="2"/><line nr="430" mi="0" ci="11" mb="1" cb="1"/><line nr="431" mi="2" ci="0" mb="0" cb="0"/><line nr="432" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="6" mb="1" cb="3"/><line nr="434" mi="0" ci="9" mb="0" cb="2"/><line nr="435" mi="0" ci="10" mb="1" cb="1"/><line nr="436" mi="2" ci="0" mb="0" cb="0"/><line nr="437" mi="0" ci="2" mb="0" cb="0"/><line nr="438" mi="0" ci="6" mb="1" cb="3"/><line nr="439" mi="0" ci="9" mb="0" cb="2"/><line nr="440" mi="0" ci="10" mb="1" cb="1"/><line nr="441" mi="2" ci="0" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="443" mi="0" ci="6" mb="1" cb="3"/><line nr="444" mi="0" ci="9" mb="0" cb="2"/><line nr="445" mi="0" ci="10" mb="1" cb="1"/><line nr="446" mi="2" ci="0" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="448" mi="0" ci="6" mb="1" cb="3"/><line nr="449" mi="0" ci="9" mb="0" cb="2"/><line nr="450" mi="0" ci="11" mb="1" cb="1"/><line nr="451" mi="2" ci="0" mb="0" cb="0"/><line nr="452" mi="0" ci="2" mb="0" cb="0"/><line nr="453" mi="0" ci="6" mb="1" cb="3"/><line nr="454" mi="0" ci="9" mb="0" cb="2"/><line nr="455" mi="0" ci="11" mb="1" cb="1"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="457" mi="0" ci="2" mb="0" cb="0"/><line nr="458" mi="0" ci="6" mb="1" cb="3"/><line nr="459" mi="0" ci="9" mb="0" cb="2"/><line nr="460" mi="0" ci="11" mb="1" cb="1"/><line nr="461" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="463" mi="0" ci="6" mb="1" cb="3"/><line nr="464" mi="0" ci="9" mb="0" cb="2"/><line nr="465" mi="0" ci="10" mb="1" cb="1"/><line nr="466" mi="2" ci="0" mb="0" cb="0"/><line nr="467" mi="0" ci="2" mb="0" cb="0"/><line nr="468" mi="0" ci="6" mb="2" cb="2"/><line nr="469" mi="0" ci="9" mb="0" cb="2"/><line nr="470" mi="0" ci="10" mb="1" cb="1"/><line nr="471" mi="2" ci="0" mb="0" cb="0"/><line nr="472" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="2" ci="0" mb="0" cb="0"/><line nr="480" mi="2" ci="0" mb="0" cb="0"/><line nr="481" mi="3" ci="0" mb="2" cb="0"/><line nr="482" mi="3" ci="0" mb="0" cb="0"/><line nr="483" mi="3" ci="0" mb="2" cb="0"/><line nr="484" mi="11" ci="0" mb="2" cb="0"/><line nr="485" mi="10" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="2" cb="0"/><line nr="487" mi="11" ci="0" mb="2" cb="0"/><line nr="488" mi="9" ci="0" mb="0" cb="0"/><line nr="489" mi="3" ci="0" mb="2" cb="0"/><line nr="490" mi="11" ci="0" mb="2" cb="0"/><line nr="491" mi="9" ci="0" mb="0" cb="0"/><line nr="492" mi="3" ci="0" mb="2" cb="0"/><line nr="493" mi="11" ci="0" mb="2" cb="0"/><line nr="494" mi="9" ci="0" mb="0" cb="0"/><line nr="495" mi="3" ci="0" mb="2" cb="0"/><line nr="496" mi="11" ci="0" mb="2" cb="0"/><line nr="497" mi="5" ci="0" mb="0" cb="0"/><line nr="498" mi="9" ci="0" mb="0" cb="0"/><line nr="499" mi="2" ci="0" mb="0" cb="0"/><line nr="500" mi="3" ci="0" mb="2" cb="0"/><line nr="501" mi="11" ci="0" mb="2" cb="0"/><line nr="502" mi="10" ci="0" mb="0" cb="0"/><line nr="503" mi="3" ci="0" mb="2" cb="0"/><line nr="504" mi="11" ci="0" mb="2" cb="0"/><line nr="505" mi="6" ci="0" mb="0" cb="0"/><line nr="506" mi="9" ci="0" mb="0" cb="0"/><line nr="507" mi="2" ci="0" mb="0" cb="0"/><line nr="508" mi="3" ci="0" mb="2" cb="0"/><line nr="509" mi="11" ci="0" mb="2" cb="0"/><line nr="510" mi="13" ci="0" mb="2" cb="0"/><line nr="511" mi="3" ci="0" mb="2" cb="0"/><line nr="512" mi="11" ci="0" mb="2" cb="0"/><line nr="513" mi="9" ci="0" mb="0" cb="0"/><line nr="515" mi="7" ci="0" mb="0" cb="0"/><line nr="517" mi="1" ci="0" mb="0" cb="0"/><line nr="518" mi="3" ci="0" mb="2" cb="0"/><line nr="519" mi="9" ci="0" mb="2" cb="0"/><line nr="520" mi="10" ci="0" mb="0" cb="0"/><line nr="521" mi="3" ci="0" mb="2" cb="0"/><line nr="522" mi="9" ci="0" mb="2" cb="0"/><line nr="523" mi="9" ci="0" mb="0" cb="0"/><line nr="524" mi="3" ci="0" mb="2" cb="0"/><line nr="525" mi="9" ci="0" mb="2" cb="0"/><line nr="526" mi="9" ci="0" mb="0" cb="0"/><line nr="527" mi="3" ci="0" mb="2" cb="0"/><line nr="528" mi="9" ci="0" mb="2" cb="0"/><line nr="529" mi="9" ci="0" mb="0" cb="0"/><line nr="530" mi="3" ci="0" mb="2" cb="0"/><line nr="531" mi="9" ci="0" mb="2" cb="0"/><line nr="532" mi="5" ci="0" mb="0" cb="0"/><line nr="533" mi="9" ci="0" mb="0" cb="0"/><line nr="534" mi="2" ci="0" mb="0" cb="0"/><line nr="535" mi="3" ci="0" mb="2" cb="0"/><line nr="536" mi="9" ci="0" mb="2" cb="0"/><line nr="537" mi="10" ci="0" mb="0" cb="0"/><line nr="538" mi="3" ci="0" mb="2" cb="0"/><line nr="539" mi="9" ci="0" mb="2" cb="0"/><line nr="540" mi="6" ci="0" mb="0" cb="0"/><line nr="541" mi="9" ci="0" mb="0" cb="0"/><line nr="542" mi="2" ci="0" mb="0" cb="0"/><line nr="543" mi="3" ci="0" mb="2" cb="0"/><line nr="544" mi="9" ci="0" mb="2" cb="0"/><line nr="545" mi="13" ci="0" mb="2" cb="0"/><line nr="546" mi="3" ci="0" mb="2" cb="0"/><line nr="547" mi="9" ci="0" mb="2" cb="0"/><line nr="548" mi="9" ci="0" mb="0" cb="0"/><line nr="550" mi="7" ci="0" mb="0" cb="0"/><line nr="554" mi="2" ci="0" mb="0" cb="0"/><line nr="562" mi="0" ci="2" mb="0" cb="0"/><line nr="563" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="568" mi="0" ci="3" mb="0" cb="0"/><line nr="573" mi="0" ci="3" mb="0" cb="2"/><line nr="574" mi="0" ci="7" mb="0" cb="0"/><line nr="575" mi="0" ci="3" mb="0" cb="2"/><line nr="576" mi="0" ci="7" mb="0" cb="0"/><line nr="577" mi="0" ci="3" mb="0" cb="2"/><line nr="578" mi="0" ci="7" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="2"/><line nr="580" mi="0" ci="7" mb="0" cb="0"/><line nr="581" mi="0" ci="3" mb="0" cb="2"/><line nr="582" mi="0" ci="7" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="2"/><line nr="584" mi="0" ci="7" mb="0" cb="0"/><line nr="585" mi="0" ci="3" mb="0" cb="2"/><line nr="586" mi="0" ci="7" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="2"/><line nr="588" mi="0" ci="7" mb="0" cb="0"/><line nr="590" mi="0" ci="7" mb="0" cb="0"/><line nr="599" mi="3" ci="0" mb="0" cb="0"/><line nr="600" mi="1" ci="0" mb="0" cb="0"/><line nr="604" mi="3" ci="0" mb="2" cb="0"/><line nr="605" mi="2" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="2" cb="0"/><line nr="607" mi="6" ci="0" mb="0" cb="0"/><line nr="608" mi="3" ci="0" mb="2" cb="0"/><line nr="609" mi="6" ci="0" mb="0" cb="0"/><line nr="610" mi="3" ci="0" mb="2" cb="0"/><line nr="611" mi="6" ci="0" mb="0" cb="0"/><line nr="612" mi="3" ci="0" mb="2" cb="0"/><line nr="613" mi="6" ci="0" mb="0" cb="0"/><line nr="614" mi="3" ci="0" mb="2" cb="0"/><line nr="615" mi="6" ci="0" mb="0" cb="0"/><line nr="616" mi="3" ci="0" mb="2" cb="0"/><line nr="617" mi="6" ci="0" mb="0" cb="0"/><line nr="618" mi="3" ci="0" mb="2" cb="0"/><line nr="619" mi="6" ci="0" mb="0" cb="0"/><line nr="620" mi="3" ci="0" mb="2" cb="0"/><line nr="621" mi="6" ci="0" mb="0" cb="0"/><line nr="622" mi="3" ci="0" mb="2" cb="0"/><line nr="623" mi="6" ci="0" mb="0" cb="0"/><line nr="624" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="668" covered="1499"/><counter type="BRANCH" missed="149" covered="265"/><counter type="LINE" missed="124" covered="284"/><counter type="COMPLEXITY" missed="103" covered="141"/><counter type="METHOD" missed="3" covered="34"/><counter type="CLASS" missed="1" covered="10"/></sourcefile><counter type="INSTRUCTION" missed="8710" covered="21698"/><counter type="BRANCH" missed="1072" covered="1172"/><counter type="LINE" missed="1582" covered="4784"/><counter type="COMPLEXITY" missed="1199" covered="2036"/><counter type="METHOD" missed="517" covered="1594"/><counter type="CLASS" missed="51" covered="271"/></package><package name="com/jgalgo/alg"><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ResFromSSSP$VerticesSubset" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;[I)V" line="291"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="distance" desc="(II)D" line="297"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="302"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/Matchings$ObjMatchingFromIndexMatching" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IMatching;)V" line="393"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVertexMatched" desc="(Ljava/lang/Object;)Z" line="401"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchedVertices" desc="()Ljava/util/Set;" line="406"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unmatchedVertices" desc="()Ljava/util/Set;" line="411"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchedEdge" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="416"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsEdge" desc="(Ljava/lang/Object;)Z" line="422"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edges" desc="()Ljava/util/Set;" line="427"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="432"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPerfect" desc="()Z" line="437"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VertexCoverUtils$ResultImpl" sourcefilename="VertexCoverUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/internal/util/Bitmap;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInCover" desc="(I)Z" line="83"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexPartitions$Impl$2" sourcefilename="VertexPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexPartitions$Impl;[IIIII)V" line="145"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="148"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="15"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexPartitions$Impl$1" sourcefilename="VertexPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexPartitions$Impl;[IIIII)V" line="100"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="103"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="15"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Path" sourcefilename="Path.java"><method name="isCycle" desc="()Z" line="95"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)Lcom/jgalgo/alg/Path;" line="160"><counter type="INSTRUCTION" missed="64" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPath" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/List;)Z" line="201"><counter type="INSTRUCTION" missed="16" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPath" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/alg/Path;" line="236"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="86" covered="67"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="18" covered="17"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowCirculationPushRelabel$WorkerInt" sourcefilename="FlowCirculationPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;Lcom/jgalgo/graph/IWeightFunctionInt;)V" line="231"><counter type="INSTRUCTION" missed="5" covered="175"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCirculation" desc="()V" line="276"><counter type="INSTRUCTION" missed="24" covered="307"/><counter type="BRANCH" missed="6" covered="42"/><counter type="LINE" missed="1" covered="61"/><counter type="COMPLEXITY" missed="4" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeCirculation$0" desc="(I)Z" line="357"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="224"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="483"/><counter type="BRANCH" missed="9" covered="59"/><counter type="LINE" missed="2" covered="93"/><counter type="COMPLEXITY" missed="7" covered="31"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$ActiveOrderPolicyImpl$FIFO" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;)V" line="1320"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreVerticesToDischarge" desc="()Z" line="1328"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextVertexToDischarge" desc="()I" line="1333"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterActivate" desc="(I)V" line="1338"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$DischargePolicyImpl$PartialAugmentDouble" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerDouble;)V" line="1007"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="worker" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerDouble;" line="1011"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushOnPathDirected" desc="(I)I" line="1016"><counter type="INSTRUCTION" missed="89" covered="177"/><counter type="BRANCH" missed="16" covered="22"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushOnPathUndirected" desc="(I)I" line="1070"><counter type="INSTRUCTION" missed="71" covered="187"/><counter type="BRANCH" missed="14" covered="22"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1004"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="160" covered="373"/><counter type="BRANCH" missed="30" covered="44"/><counter type="LINE" missed="0" covered="84"/><counter type="COMPLEXITY" missed="15" covered="27"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlow$Builder" sourcefilename="MinimumCostFlow.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumCostFlow$Builder;" line="375"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl" sourcefilename="LowestCommonAncestorDynamicGabowSimple.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)V" line="312"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Ljava/lang/Object;" line="320"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setData" desc="(Ljava/lang/Object;)V" line="325"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="330"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRoot" desc="()Z" line="334"><counter type="INSTRUCTION" missed="18" covered="8"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addChild" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)V" line="339"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPathApex" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;" line="345"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToPath" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)V" line="349"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRequireRecompress" desc="()Z" line="355"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ancestorTableInit" desc="(I)V" line="359"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="367"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="276"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="130"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="1" covered="25"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$IntResultFromIndexResult" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;)V" line="349"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(II)D" line="357"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="362"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="368"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="373"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TSPMetricUtils" sourcefilename="TSPMetricUtils.java"><method name="calcEulerianTourAndConvertToHamiltonianCycle" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexGraph;[I)Lcom/jgalgo/alg/IPath;" line="36"><counter type="INSTRUCTION" missed="50" covered="89"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidCycle" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IPath;)Z" line="73"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPathVisitEvery" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IPath;)Z" line="87"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$calcEulerianTourAndConvertToHamiltonianCycle$0" desc="(Lcom/jgalgo/graph/IndexGraph;I)Z" line="39"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="145" covered="90"/><counter type="BRANCH" missed="26" covered="8"/><counter type="LINE" missed="21" covered="27"/><counter type="COMPLEXITY" missed="16" covered="6"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils$ResultImpl$Int" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I)V" line="331"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I[I[I)V" line="341"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(I)D" line="350"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(I)Lcom/jgalgo/alg/IPath;" line="356"><counter type="INSTRUCTION" missed="8" covered="51"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="374"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="379"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="384"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="324"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="111"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/KEdgeConnectedComponentsAlgo" sourcefilename="KEdgeConnectedComponentsAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/KEdgeConnectedComponentsAlgo;" line="71"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/KEdgeConnectedComponentsAlgo$Builder;" line="83"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUnionFind" sourcefilename="LowestCommonAncestorOfflineUnionFind.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLCAs" desc="(Lcom/jgalgo/graph/IndexGraph;ILcom/jgalgo/alg/LowestCommonAncestorOffline$IQueries;)Lcom/jgalgo/alg/LowestCommonAncestorOffline$IResult;" line="34"><counter type="INSTRUCTION" missed="9" covered="317"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="66"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findLCAs$0" desc="([I[II)Lit/unimi/dsi/fastutil/ints/IntIterator;" line="65"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="329"/><counter type="BRANCH" missed="2" covered="26"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ArraysUtils" sourcefilename="ArraysUtils.java"><method name="getKthElement" desc="([Ljava/lang/Object;ILjava/util/Comparator;)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKthElement" desc="([IILit/unimi/dsi/fastutil/ints/IntComparator;)I" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKthElement" desc="([Ljava/lang/Object;IIILjava/util/Comparator;Z)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKthElement" desc="([IIIILit/unimi/dsi/fastutil/ints/IntComparator;Z)I" line="91"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKthElement0" desc="([Ljava/lang/Object;IIILjava/util/Comparator;)V" line="106"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKthElement0" desc="([IIIILit/unimi/dsi/fastutil/ints/IntComparator;)V" line="125"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pivotPartition" desc="([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I" line="161"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pivotPartition" desc="([IIIILit/unimi/dsi/fastutil/ints/IntComparator;)I" line="193"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pivotPartition0" desc="([Ljava/lang/Object;IIILjava/util/Comparator;)J" line="208"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pivotPartition0" desc="([IIIILit/unimi/dsi/fastutil/ints/IntComparator;)J" line="222"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcPivot" desc="([Ljava/lang/Object;IILjava/util/Comparator;)I" line="236"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcPivot" desc="([IIILit/unimi/dsi/fastutil/ints/IntComparator;)I" line="254"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partition5" desc="([Ljava/lang/Object;IILjava/util/Comparator;)I" line="272"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partition5" desc="([IIILit/unimi/dsi/fastutil/ints/IntComparator;)I" line="279"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bucketPartition" desc="([Ljava/lang/Object;IILjava/util/Comparator;I)V" line="299"><counter type="INSTRUCTION" missed="8" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bucketPartition" desc="([IIILit/unimi/dsi/fastutil/ints/IntComparator;I)V" line="319"><counter type="INSTRUCTION" missed="6" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bucketPartition0" desc="([Ljava/lang/Object;IILjava/util/Comparator;I)V" line="327"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bucketPartition0" desc="([IIILit/unimi/dsi/fastutil/ints/IntComparator;I)V" line="336"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="720"/><counter type="BRANCH" missed="13" covered="83"/><counter type="LINE" missed="6" covered="138"/><counter type="COMPLEXITY" missed="13" covered="53"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliquesBronKerbosch" sourcefilename="MaximalCliquesBronKerbosch.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterateMaximalCliques" desc="(Lcom/jgalgo/graph/IndexGraph;)Ljava/util/Iterator;" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaxima" sourcefilename="TreePathMaxima.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/TreePathMaxima;" line="295"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/TreePathMaxima$Builder;" line="307"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="verifyMST" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/util/Collection;Lcom/jgalgo/alg/TreePathMaxima;)Z" line="393"><counter type="INSTRUCTION" missed="13" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceBellmanFord" sourcefilename="ShortestPathSingleSourceBellmanFord.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="54"><counter type="INSTRUCTION" missed="2" covered="434"/><counter type="BRANCH" missed="1" covered="53"/><counter type="LINE" missed="1" covered="92"/><counter type="COMPLEXITY" missed="1" covered="27"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="437"/><counter type="BRANCH" missed="1" covered="53"/><counter type="LINE" missed="1" covered="93"/><counter type="COMPLEXITY" missed="1" covered="28"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingAlgo" sourcefilename="MatchingAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/MatchingAlgo;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MatchingAlgo$Builder;" line="146"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairs$Builder" sourcefilename="ShortestPathAllPairs.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathAllPairs$Builder;" line="318"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImpl$2" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImpl;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;)V" line="254"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="257"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="262"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="267"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(ID)V" line="272"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImpl$1" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImpl;Lcom/jgalgo/alg/IFlowNetworkInt;Lcom/jgalgo/graph/IWeightFunctionInt;)V" line="232"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(I)I" line="235"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="245"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(II)V" line="250"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="43"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgoImpl$ObjResultFromIndexResult" sourcefilename="CoresAlgoImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/CoresAlgo$IResult;)V" line="323"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexCoreNum" desc="(Ljava/lang/Object;)I" line="330"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxCore" desc="()I" line="335"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreVertices" desc="(I)Ljava/util/Set;" line="340"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreShell" desc="(I)Ljava/util/Set;" line="345"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreCrust" desc="(I)Ljava/util/Set;" line="350"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$5$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree$5;)V" line="2591"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2597"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2602"><counter type="INSTRUCTION" missed="32" covered="50"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="2591"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="71"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgoAbstract$IntResultFromIndexResult" sourcefilename="BiConnectedComponentsAlgoAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/BiConnectedComponentsAlgo$IResult;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexBiCcs" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="57"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfBiCcs" desc="()I" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBiCcVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="67"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBiCcEdges" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="72"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCutVertex" desc="(I)Z" line="77"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCutVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockGraph" desc="()Lcom/jgalgo/graph/IntGraph;" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/IFlowNetwork" sourcefilename="IFlowNetwork.java"><method name="getCapacity" desc="(Ljava/lang/Integer;)D" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(Ljava/lang/Integer;D)V" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlow" desc="(Ljava/lang/Integer;)D" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(Ljava/lang/Integer;D)V" line="111"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlowSum" desc="(Lcom/jgalgo/graph/IntGraph;I)D" line="122"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowSum" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Integer;)D" line="128"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlowSum" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Iterable;)D" line="133"><counter type="INSTRUCTION" missed="55" covered="67"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCostSum" desc="(Ljava/lang/Iterable;Lcom/jgalgo/graph/WeightFunction;)D" line="160"><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/alg/IFlowNetwork;" line="192"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/IWeightsDouble;Lcom/jgalgo/graph/IWeightsDouble;)Lcom/jgalgo/alg/IFlowNetwork;" line="210"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="145" covered="96"/><counter type="BRANCH" missed="16" covered="8"/><counter type="LINE" missed="25" covered="18"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStaticAbstract$ObjDsFromIndexDs" sourcefilename="LowestCommonAncestorStaticAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/LowestCommonAncestorStatic$IDataStructure;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLca" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/IMatching" sourcefilename="IMatching.java"><method name="isVertexMatched" desc="(Ljava/lang/Integer;)Z" line="54"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMatchedEdge" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="69"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsEdge" desc="(Ljava/lang/Integer;)Z" line="93"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMatching" desc="(Lcom/jgalgo/graph/IntGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;)Z" line="112"><counter type="INSTRUCTION" missed="121" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="137" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgoImpl$Res" sourcefilename="TopologicalOrderAlgoImpl.java"><method name="&lt;init&gt;" desc="([I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orderedVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexOrderIndex" desc="(I)I" line="82"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeUtils$ObjResultFromIndexResult" sourcefilename="MinimumSpanningTreeUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/MinimumSpanningTree$IResult;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Ljava/util/Collection;" line="123"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BfsIterImpl$Backward" sourcefilename="BfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I)V" line="130"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntIterator;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="139"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceDial" sourcefilename="ShortestPathSingleSourceDial.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="63"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;II)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="86"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="116"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCoverUtils$AbstractImpl" sourcefilename="VertexCoverUtils.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumVertexCover" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/VertexCover$Result;" line="40"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBase" sourcefilename="MinimumCostFlows.java"><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;)V" line="49"><counter type="INSTRUCTION" missed="24" covered="36"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;)V" line="70"><counter type="INSTRUCTION" missed="28" covered="41"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Ljava/util/Collection;Ljava/util/Collection;)V" line="94"><counter type="INSTRUCTION" missed="22" covered="36"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;Ljava/util/Collection;Ljava/util/Collection;)V" line="116"><counter type="INSTRUCTION" missed="26" covered="41"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="7" covered="11"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;)V" line="141"><counter type="INSTRUCTION" missed="18" covered="31"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;)V" line="161"><counter type="INSTRUCTION" missed="22" covered="36"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="140" covered="221"/><counter type="BRANCH" missed="18" covered="6"/><counter type="LINE" missed="32" covered="61"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetwork" sourcefilename="FlowNetwork.java"><method name="getFlowSum" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;)D" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlowSum" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Iterable;)D" line="148"><counter type="INSTRUCTION" missed="47" covered="54"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCostSum" desc="(Ljava/lang/Iterable;Lcom/jgalgo/graph/WeightFunction;)D" line="182"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/FlowNetwork;" line="214"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/WeightsDouble;Lcom/jgalgo/graph/WeightsDouble;)Lcom/jgalgo/alg/FlowNetwork;" line="234"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="99" covered="80"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="17" covered="14"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/IPath" sourcefilename="IPath.java"><method name="source" desc="()Ljava/lang/Integer;" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="()Ljava/lang/Integer;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCycle" desc="()Z" line="73"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/IntGraph;IILit/unimi/dsi/fastutil/ints/IntList;)Lcom/jgalgo/alg/IPath;" line="99"><counter type="INSTRUCTION" missed="9" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPath" desc="(Lcom/jgalgo/graph/IntGraph;IILit/unimi/dsi/fastutil/ints/IntList;)Z" line="132"><counter type="INSTRUCTION" missed="7" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPath" desc="(Lcom/jgalgo/graph/IntGraph;II)Lcom/jgalgo/alg/IPath;" line="158"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="118"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$ActiveOrderPolicyImpl$LowestFirst" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;)V" line="1372"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRecomputeLabels" desc="()V" line="1377"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterActivate" desc="(I)V" line="1382"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreVerticesToDischarge" desc="()Z" line="1388"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextVertexToDischarge" desc="()I" line="1397"><counter type="INSTRUCTION" missed="18" covered="16"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1367"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="66"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="()V" line="362"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="370"><counter type="INSTRUCTION" missed="0" covered="249"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="507"><counter type="INSTRUCTION" missed="26" covered="427"/><counter type="BRANCH" missed="5" covered="41"/><counter type="LINE" missed="0" covered="88"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;)V" line="742"><counter type="INSTRUCTION" missed="0" covered="241"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostFlow$5" desc="(ILcom/jgalgo/graph/IWeightFunction;I)D" line="886"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostFlow$4" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;I)I" line="883"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostMaxFlow$3" desc="(ILcom/jgalgo/graph/IWeightFunction;IDI)D" line="717"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostMaxFlow$2" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;III)I" line="702"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostMaxFlow$1" desc="(ILcom/jgalgo/graph/IWeightFunction;I)D" line="497"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostMaxFlow$0" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;I)I" line="494"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="362"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="985"/><counter type="BRANCH" missed="6" covered="100"/><counter type="LINE" missed="0" covered="206"/><counter type="COMPLEXITY" missed="4" covered="60"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$ActiveOrderPolicyImpl$MoveToFront" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;)V" line="1408"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRecomputeLabels" desc="()V" line="1419"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRecomputeLabels" desc="()V" line="1426"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRelabel" desc="(I)V" line="1433"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterVertexLabelReCompute" desc="(I)V" line="1443"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreVerticesToDischarge" desc="()Z" line="1450"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextVertexToDischarge" desc="()I" line="1459"><counter type="INSTRUCTION" missed="13" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1405"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="114"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeUtils$AbstractUndirected" sourcefilename="MinimumSpanningTreeUtils.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$Result;" line="42"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$AbstractMatchingImpl" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="()V" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="167"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="183"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMaximumPerfectMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="199"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumPerfectMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="215"><counter type="INSTRUCTION" missed="19" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="64"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="15" covered="18"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCoverCardinality" sourcefilename="EdgeCoverCardinality.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumEdgeCover" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/EdgeCover$IResult;" line="30"><counter type="INSTRUCTION" missed="45" covered="66"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="6" covered="13"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="75"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="6" covered="15"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingCardinalityGabow1976" sourcefilename="MatchingCardinalityGabow1976.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumCardinalityMatching" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IMatching;" line="54"><counter type="INSTRUCTION" missed="0" covered="471"/><counter type="BRANCH" missed="0" covered="46"/><counter type="LINE" missed="0" covered="102"/><counter type="COMPLEXITY" missed="0" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPath" desc="(Lcom/jgalgo/graph/IndexGraph;IILcom/jgalgo/internal/util/Bitmap;[I[I[I[II)I" line="207"><counter type="INSTRUCTION" missed="0" covered="106"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="580"/><counter type="BRANCH" missed="0" covered="50"/><counter type="LINE" missed="0" covered="116"/><counter type="COMPLEXITY" missed="0" covered="28"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TSPMetricMatchingAppx" sourcefilename="TSPMetricMatchingAppx.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestTour" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IPath;" line="48"><counter type="INSTRUCTION" missed="14" covered="226"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="2" covered="44"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeShortestTour$0" desc="([ILcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IndexGraph;I)D" line="79"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="255"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="2" covered="51"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSTBidirectionalBfs" sourcefilename="ShortestPathSTBidirectionalBfs.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPath" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;II)Lcom/jgalgo/alg/IPath;" line="35"><counter type="INSTRUCTION" missed="10" covered="322"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="2" covered="69"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="info" desc="(II)J" line="127"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="backtrack" desc="(J)I" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(J)I" line="135"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="335"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="2" covered="73"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/IFlowNetworkInt" sourcefilename="IFlowNetworkInt.java"><method name="getCapacity" desc="(I)D" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(Ljava/lang/Integer;)I" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(Ljava/lang/Integer;)D" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="82"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(Ljava/lang/Integer;I)V" line="88"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(Ljava/lang/Integer;D)V" line="94"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="119"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlowInt" desc="(Ljava/lang/Integer;)I" line="125"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlow" desc="(Ljava/lang/Integer;)D" line="131"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(ID)V" line="146"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(Ljava/lang/Integer;I)V" line="152"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(Ljava/lang/Integer;D)V" line="158"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowSum" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Iterable;)D" line="163"><counter type="INSTRUCTION" missed="57" covered="70"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCostSum" desc="(Ljava/lang/Iterable;Lcom/jgalgo/graph/WeightFunction;)D" line="190"><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/alg/IFlowNetworkInt;" line="224"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/IWeightsInt;Lcom/jgalgo/graph/IWeightsInt;)Lcom/jgalgo/alg/IFlowNetworkInt;" line="242"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="166" covered="120"/><counter type="BRANCH" missed="16" covered="8"/><counter type="LINE" missed="31" covered="23"/><counter type="COMPLEXITY" missed="15" covered="13"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgoImpl$ResultImpl" sourcefilename="CoresAlgoImpl.java"><method name="&lt;init&gt;" desc="([I)V" line="165"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexCoreNum" desc="(I)I" line="175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxCore" desc="()I" line="180"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSortedVertices" desc="()V" line="184"><counter type="INSTRUCTION" missed="13" covered="112"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="210"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreShell" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="230"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreCrust" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="250"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="155"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="300"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="1" covered="57"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TSPMetric" sourcefilename="TSPMetric.java"/><class name="com/jgalgo/alg/VertexScoringImpl$ResultImpl" sourcefilename="VertexScoringImpl.java"><method name="&lt;init&gt;" desc="([D)V" line="30"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexScore" desc="(I)D" line="36"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/StronglyConnectedComponentsAlgo" sourcefilename="StronglyConnectedComponentsAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/StronglyConnectedComponentsAlgo;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/StronglyConnectedComponentsAlgo$Builder;" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceGoldberg$Diagnostics" sourcefilename="ShortestPathSingleSourceGoldberg.java"><method name="runBegin" desc="()V" line="387"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scalingIteration" desc="()V" line="392"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="potentialIteration" desc="()V" line="397"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bigLayer" desc="()V" line="402"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longPath" desc="()V" line="407"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/String;)J" line="410"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="5"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="5"/><counter type="COMPLEXITY" missed="6" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexQueriesFromQueries" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/TreePathMaxima$Queries;)Lcom/jgalgo/alg/TreePathMaxima$IQueries;" line="224"><counter type="INSTRUCTION" missed="15" covered="13"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/TreePathMaxima$IResult;)Lcom/jgalgo/alg/TreePathMaxima$Result;" line="279"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verifyMST" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/alg/TreePathMaxima;)Z" line="288"><counter type="INSTRUCTION" missed="9" covered="146"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$verifyMST$0" desc="([DI)D" line="315"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="181"/><counter type="BRANCH" missed="9" covered="21"/><counter type="LINE" missed="2" covered="41"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ConnectedComponentsUtils" sourcefilename="ConnectedComponentsUtils.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VertexBiPartitions$Impl" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeft" desc="(I)Z" line="46"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="53"><counter type="INSTRUCTION" missed="84" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockEdges" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="86"><counter type="INSTRUCTION" missed="128" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossEdges" desc="(II)Lit/unimi/dsi/fastutil/ints/IntSet;" line="134"><counter type="INSTRUCTION" missed="19" covered="192"/><counter type="BRANCH" missed="7" covered="27"/><counter type="LINE" missed="4" covered="34"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IntGraph;" line="202"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blocksGraph" desc="(ZZ)Lcom/jgalgo/graph/IntGraph;" line="207"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="212"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="262" covered="213"/><counter type="BRANCH" missed="41" covered="29"/><counter type="LINE" missed="52" covered="39"/><counter type="COMPLEXITY" missed="28" covered="15"/><counter type="METHOD" missed="5" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$SuperImpl" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingAlgo;Lcom/jgalgo/alg/MatchingAlgo;Lcom/jgalgo/alg/MatchingAlgo;Lcom/jgalgo/alg/MatchingAlgo;)V" line="309"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="318"><counter type="INSTRUCTION" missed="20" covered="30"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="333"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMaximumPerfectMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="348"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumPerfectMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Matching;" line="363"><counter type="INSTRUCTION" missed="26" covered="24"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCardinality" desc="(Lcom/jgalgo/graph/WeightFunction;)Z" line="377"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBipartite" desc="(Lcom/jgalgo/graph/Graph;)Z" line="382"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="146" covered="93"/><counter type="BRANCH" missed="52" covered="18"/><counter type="LINE" missed="30" covered="22"/><counter type="COMPLEXITY" missed="34" covered="8"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple" sourcefilename="LowestCommonAncestorDynamicGabowSimple.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initTree" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="65"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLeaf" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertex" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="76"><counter type="INSTRUCTION" missed="6" covered="50"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recompress" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)V" line="99"><counter type="INSTRUCTION" missed="7" covered="12"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSize" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)I" line="110"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildCompressedTree" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)V" line="117"><counter type="INSTRUCTION" missed="14" covered="119"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAncestorTables" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(DD)D" line="166"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="logBetaFloor" desc="(D)I" line="172"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertOverflowDouble" desc="(D)D" line="176"><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertOverflowInt" desc="(D)I" line="181"><counter type="INSTRUCTION" missed="12" covered="4"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcCACompressed" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$VertexImpl;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$CharacteristicAncestors;)V" line="186"><counter type="INSTRUCTION" missed="51" covered="130"/><counter type="BRANCH" missed="12" covered="16"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcCA" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$CharacteristicAncestors;)V" line="229"><counter type="INSTRUCTION" missed="46" covered="111"/><counter type="BRANCH" missed="14" covered="16"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLowestCommonAncestor" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="262"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="268"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="273"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="148" covered="605"/><counter type="BRANCH" missed="42" covered="66"/><counter type="LINE" missed="3" covered="126"/><counter type="COMPLEXITY" missed="23" covered="49"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaHagerup$Worker" sourcefilename="TreePathMaximaHagerup.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Z)V" line="101"><counter type="INSTRUCTION" missed="1" covered="85"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcTPM" desc="(Lcom/jgalgo/alg/TreePathMaxima$IQueries;)Lcom/jgalgo/alg/TreePathMaxima$IResult;" line="140"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractEdgesFromAnswers" desc="([[I[I[I)Lcom/jgalgo/alg/TreePathMaxima$IResult;" line="148"><counter type="INSTRUCTION" missed="2" covered="148"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcAnswersPerVertex" desc="([I)[[I" line="183"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="successor" desc="(II)I" line="227"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subseq" desc="(III)I" line="231"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binarySearch" desc="(IDLit/unimi/dsi/fastutil/ints/IntList;)I" line="235"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repSuf" desc="(III)I" line="252"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildBoruvkaFullyBranchingTree" desc="()Lit/unimi/dsi/fastutil/Pair;" line="258"><counter type="INSTRUCTION" missed="27" covered="532"/><counter type="BRANCH" missed="6" covered="32"/><counter type="LINE" missed="0" covered="105"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitQueriesIntoLCAQueries" desc="(Lcom/jgalgo/alg/TreePathMaxima$IQueries;)[I" line="424"><counter type="INSTRUCTION" missed="5" covered="73"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcQueriesPerVertex" desc="([I)[I" line="444"><counter type="INSTRUCTION" missed="1" covered="130"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(II)I" line="124"><counter type="INSTRUCTION" missed="13" covered="19"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="1259"/><counter type="BRANCH" missed="18" covered="82"/><counter type="LINE" missed="2" covered="238"/><counter type="COMPLEXITY" missed="13" covered="50"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgo$Builder" sourcefilename="TopologicalOrderAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/TopologicalOrderAlgo$Builder;" line="180"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/BfsIterImpl$ObjBfsFromIndexBfs" sourcefilename="BfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/Bfs$IntIter;)V" line="203"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="211"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="216"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastEdge" desc="()Ljava/lang/Object;" line="221"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="layer" desc="()I" line="227"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ColoringGreedy" sourcefilename="ColoringGreedy.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(J)V" line="60"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeColoring" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IVertexPartition;" line="66"><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="113"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgoImpl" sourcefilename="TopologicalOrderAlgoImpl.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTopologicalSorting" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/TopologicalOrderAlgo$IResult;" line="31"><counter type="INSTRUCTION" missed="5" covered="89"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="92"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgo$Builder" sourcefilename="CoresAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/CoresAlgo$Builder;" line="263"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MaximumFlow$1" sourcefilename="MaximumFlow.java"><method name="&lt;init&gt;" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/MaximumFlow;" line="123"><counter type="INSTRUCTION" missed="42" covered="5"/><counter type="BRANCH" missed="11" covered="1"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="10" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MaximumFlow$Builder;" line="152"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="8"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="16" covered="3"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowAbstract$WithoutResidualGraph" sourcefilename="MaximumFlowAbstract.java"><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)D" line="210"><counter type="INSTRUCTION" missed="0" covered="255"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="258"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CyclesFinderJohnson$1" sourcefilename="CyclesFinderJohnson.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/CyclesFinderJohnson;ILcom/jgalgo/graph/IndexGraph;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="96"><counter type="INSTRUCTION" missed="14" covered="194"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="2" covered="43"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="156"><counter type="INSTRUCTION" missed="16" covered="19"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unblock" desc="(I)V" line="164"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseSCCInSubGraph" desc="()V" line="181"><counter type="INSTRUCTION" missed="7" covered="120"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="220"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/IPath;" line="225"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="59"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="492"/><counter type="BRANCH" missed="9" covered="55"/><counter type="LINE" missed="2" covered="109"/><counter type="COMPLEXITY" missed="5" covered="35"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCovers" sourcefilename="EdgeCovers.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/EdgeCover$IResult;)Lcom/jgalgo/alg/EdgeCover$Result;" line="148"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgoImpl" sourcefilename="CoresAlgoImpl.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCores" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/CoresAlgo$DegreeType;)Lcom/jgalgo/alg/CoresAlgo$IResult;" line="49"><counter type="INSTRUCTION" missed="23" covered="319"/><counter type="BRANCH" missed="6" covered="44"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCores" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/CoresAlgo$DegreeType;)Lcom/jgalgo/alg/CoresAlgo$Result;" line="272"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/CoresAlgo$IResult;)Lcom/jgalgo/alg/CoresAlgo$Result;" line="356"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeCores$0" desc="([I[I[I[II)V" line="98"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="407"/><counter type="BRANCH" missed="9" covered="49"/><counter type="LINE" missed="1" covered="89"/><counter type="COMPLEXITY" missed="5" covered="30"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ColoringAlgo$Builder" sourcefilename="ColoringAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ColoringAlgo$Builder;" line="242"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MinimumSpanningTree$Result" sourcefilename="MinimumSpanningTree.java"/><class name="com/jgalgo/alg/TreePathMaxima$IResult" sourcefilename="TreePathMaxima.java"><method name="getHeaviestEdge" desc="(I)Ljava/lang/Integer;" line="281"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$ResultImpl" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="([I)V" line="136"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeaviestEdgeInt" desc="(I)I" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="147"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$WorkerDouble$Vertex" sourcefilename="MaximumFlowPushRelabelDynamicTrees.java"><method name="&lt;init&gt;" desc="(ILcom/jgalgo/internal/ds/DynamicTree$Vertex;)V" line="439"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasExcess" desc="()Z" line="447"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowCirculationPushRelabel$Worker" sourcefilename="FlowCirculationPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(I)V" line="59"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deactivate" desc="(I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="highestActive" desc="()I" line="75"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStaticRMQ" sourcefilename="LowestCommonAncestorStaticRMQ.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preProcessTree" desc="(Lcom/jgalgo/graph/IndexGraph;I)Lcom/jgalgo/alg/LowestCommonAncestorStatic$IDataStructure;" line="53"><counter type="INSTRUCTION" missed="5" covered="148"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matching" sourcefilename="Matching.java"><method name="isMatching" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;)Z" line="138"><counter type="INSTRUCTION" missed="46" covered="78"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="11" covered="18"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="78"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="11" covered="18"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ConnectedComponentsUtils$AbstractWeaklyConnectedComponentsAlgo" sourcefilename="ConnectedComponentsUtils.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findWeaklyConnectedComponents" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/VertexPartition;" line="65"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeaklyConnected" desc="(Lcom/jgalgo/graph/Graph;)Z" line="77"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCover$Result" sourcefilename="VertexCover.java"/><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$DischargePolicyImpl$SingleStepDouble" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerDouble;)V" line="636"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="worker" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerDouble;" line="640"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dischargeDirected" desc="(I)V" line="646"><counter type="INSTRUCTION" missed="18" covered="223"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="0" covered="34"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dischargeUndirected" desc="(I)V" line="704"><counter type="INSTRUCTION" missed="25" covered="212"/><counter type="BRANCH" missed="6" covered="30"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="3" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="633"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="444"/><counter type="BRANCH" missed="11" covered="59"/><counter type="LINE" missed="0" covered="75"/><counter type="COMPLEXITY" missed="6" covered="34"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumDirectedSpanningTreeTarjan$ContractedGraph" sourcefilename="MinimumDirectedSpanningTreeTarjan.java"><method name="&lt;init&gt;" desc="(I[I[I[I[I)V" line="257"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathHeuristicST" sourcefilename="ShortestPathHeuristicST.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/ShortestPathHeuristicST;" line="92"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/ShortestPathHeuristicST$Builder;" line="104"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/TreePathMaxima$1" sourcefilename="TreePathMaxima.java"><method name="&lt;init&gt;" desc="()V" line="307"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/jgalgo/alg/TreePathMaxima;" line="313"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/TreePathMaxima$Builder;" line="320"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStaticAbstract$IntDsFromIndexDs" sourcefilename="LowestCommonAncestorStaticAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/LowestCommonAncestorStatic$IDataStructure;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLca" desc="(II)I" line="57"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Dfs$Iter" sourcefilename="Dfs.java"/><class name="com/jgalgo/alg/CoresAlgo$DegreeType" sourcefilename="CoresAlgo.java"><method name="&lt;clinit&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$NetImplEdgeWeightsInt" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsInt;Lcom/jgalgo/graph/WeightsInt;)V" line="93"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addWeightsAndCreateNet" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/FlowNetworkInt;" line="99"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createExternalWeightsAndCreateNet" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/FlowNetworkInt;" line="105"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacityInt" desc="(Ljava/lang/Object;)I" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(Ljava/lang/Object;I)V" line="117"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlowInt" desc="(Ljava/lang/Object;)I" line="124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(Ljava/lang/Object;I)V" line="129"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeBoruvka$Res" sourcefilename="MinimumSpanningTreeBoruvka.java"><method name="&lt;init&gt;" desc="([IILit/unimi/dsi/fastutil/ints/IntCollection;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$IndexQueriesFromObjQueries" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/TreePathMaxima$Queries;)V" line="156"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addQuery" desc="(II)V" line="163"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuerySourceInt" desc="(I)I" line="168"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueryTargetInt" desc="(I)I" line="173"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="178"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="183"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="32"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VoronoiAlgo$IResult" sourcefilename="VoronoiAlgo.java"><method name="distance" desc="(Ljava/lang/Integer;)D" line="174"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/Integer;)Lcom/jgalgo/alg/IPath;" line="193"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockSite" desc="(I)Ljava/lang/Integer;" line="216"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSite" desc="(Ljava/lang/Integer;)Ljava/lang/Integer;" line="236"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathHeuristicST$1" sourcefilename="ShortestPathHeuristicST.java"><method name="&lt;init&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/jgalgo/alg/ShortestPathHeuristicST;" line="110"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathHeuristicST$Builder;" line="123"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex1" sourcefilename="LowestCommonAncestorDynamicGabowLongs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;)V" line="262"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex1;" line="268"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addVertex" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;)V" line="272"><counter type="INSTRUCTION" missed="8" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="280"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="251"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="56"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/PageRank$Predecessors" sourcefilename="PageRank.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)V" line="124"><counter type="INSTRUCTION" missed="42" covered="98"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="21"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predecessor" desc="(II)I" line="163"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeWeight" desc="(II)D" line="167"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="118"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex0" sourcefilename="LowestCommonAncestorDynamicGabowLongs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex1;)V" line="298"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex1;)V" line="304"><counter type="INSTRUCTION" missed="8" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="312"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="289"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="54"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTree$Builder" sourcefilename="MinimumSpanningTree.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumSpanningTree$Builder;" line="353"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2" sourcefilename="LowestCommonAncestorDynamicGabowLongs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;)V" line="226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Ljava/lang/Object;" line="233"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setData" desc="(Ljava/lang/Object;)V" line="238"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="243"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$IndexNetFromINetInt" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/IFlowNetworkInt;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="447"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idNet" desc="()Lcom/jgalgo/alg/IFlowNetworkInt;" line="452"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacityInt" desc="(I)I" line="457"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(II)V" line="462"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="467"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(II)V" line="472"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacity" desc="(I)D" line="478"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(ID)V" line="484"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="490"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(ID)V" line="496"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MaximumFlowEdmondsKarp" sourcefilename="MaximumFlowEdmondsKarp.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)D" line="50"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceDijkstra" sourcefilename="ShortestPathSingleSourceDijkstra.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="65"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="75"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSsspDoubles" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="85"><counter type="INSTRUCTION" missed="0" covered="127"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSsspInts" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="125"><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="278"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="2" covered="68"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$NetImplEdgeWeights" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/WeightsDouble;Lcom/jgalgo/graph/WeightsDouble;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(Ljava/lang/Object;)D" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(Ljava/lang/Object;D)V" line="69"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlow" desc="(Ljava/lang/Object;)D" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(Ljava/lang/Object;D)V" line="81"><counter type="INSTRUCTION" missed="7" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutSTUtils$2" sourcefilename="MinimumCutSTUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightFunction;[D)V" line="195"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="203"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="208"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(ID)V" line="213"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="25"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutSTUtils$3" sourcefilename="MinimumCutSTUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCutST;)V" line="220"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IVertexBiPartition;" line="223"><counter type="INSTRUCTION" missed="11" covered="51"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="220"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="58"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$IntResultFromIndexResult" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/TreePathMaxima$IResult;)V" line="259"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeaviestEdgeInt" desc="(I)I" line="266"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="272"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutSTUtils$1" sourcefilename="MinimumCutSTUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlow;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;II)Lcom/jgalgo/alg/IVertexBiPartition;" line="180"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)Lcom/jgalgo/alg/IVertexBiPartition;" line="186"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCover" sourcefilename="EdgeCover.java"><method name="isCover" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;)Z" line="136"><counter type="INSTRUCTION" missed="69" covered="79"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/alg/EdgeCover;" line="185"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/EdgeCover$Builder;" line="197"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newBuilder$0" desc="()Lcom/jgalgo/alg/EdgeCover;" line="198"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="88" covered="79"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="18" covered="17"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutGlobal$Builder" sourcefilename="MinimumCutGlobal.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumCutGlobal$Builder;" line="123"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="68"><counter type="INSTRUCTION" missed="83" covered="186"/><counter type="BRANCH" missed="17" covered="11"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="127"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newHeap" desc="(Ljava/util/Comparator;)Lcom/jgalgo/internal/ds/HeapReferenceable;" line="2777"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinimumWeightedMatching$1" desc="(ILcom/jgalgo/graph/IWeightFunction;I)D" line="108"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinimumWeightedMatching$0" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;I)I" line="105"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="2827"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="221"/><counter type="BRANCH" missed="19" covered="13"/><counter type="LINE" missed="4" covered="41"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BipartiteGraphs" sourcefilename="BipartiteGraphs.java"><method name="isBipartite" desc="(Lcom/jgalgo/graph/Graph;)Z" line="67"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findPartition" desc="(Lcom/jgalgo/graph/Graph;)Ljava/util/Optional;" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findPartition" desc="(Lcom/jgalgo/graph/Graph;Z)Ljava/util/Optional;" line="111"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findBipartitePartition0" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/internal/util/Bitmap;" line="132"><counter type="INSTRUCTION" missed="138" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOrCreateBoolWeights" desc="(Lcom/jgalgo/graph/IndexGraph;Z)Lcom/jgalgo/graph/IWeightsBool;" line="179"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExistingPartition" desc="(Lcom/jgalgo/graph/Graph;)Ljava/util/Optional;" line="215"><counter type="INSTRUCTION" missed="8" covered="39"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="244" covered="39"/><counter type="BRANCH" missed="44" covered="6"/><counter type="LINE" missed="61" covered="10"/><counter type="COMPLEXITY" missed="28" covered="3"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowEdmondsKarp$WorkerInt" sourcefilename="MaximumFlowEdmondsKarp.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowEdmondsKarp;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;II)V" line="309"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxFlow" desc="()I" line="317"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongPathDirected" desc="([I)V" line="324"><counter type="INSTRUCTION" missed="32" covered="97"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongPathUndirected" desc="([I)V" line="361"><counter type="INSTRUCTION" missed="32" covered="97"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flow" desc="(I)I" line="396"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasFlow" desc="(I)Z" line="401"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResidualCapacity" desc="(I)I" line="405"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSaturated" desc="(I)Z" line="410"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isResidual" desc="(I)Z" line="415"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTwinResidualUndirected" desc="(I)Z" line="420"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTwinResidualCapacity" desc="(I)I" line="424"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="304"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="284"/><counter type="BRANCH" missed="20" covered="22"/><counter type="LINE" missed="1" covered="66"/><counter type="COMPLEXITY" missed="11" covered="22"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOffline$IQueries" sourcefilename="LowestCommonAncestorOffline.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/LowestCommonAncestorOffline$IQueries;" line="143"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addQuery" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)V" line="157"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuerySource" desc="(I)Ljava/lang/Integer;" line="176"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryTarget" desc="(I)Ljava/lang/Integer;" line="195"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VoronoiAlgo$Result" sourcefilename="VoronoiAlgo.java"/><class name="com/jgalgo/alg/KEdgeConnectedComponentsUtils" sourcefilename="KEdgeConnectedComponentsUtils.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MinimumSpanningTreePrim" sourcefilename="MinimumSpanningTreePrim.java"><method name="&lt;init&gt;" desc="()V" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="76"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMSTDouble" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="88"><counter type="INSTRUCTION" missed="0" covered="149"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMSTInt" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="145"><counter type="INSTRUCTION" missed="0" covered="148"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="325"/><counter type="BRANCH" missed="3" covered="37"/><counter type="LINE" missed="3" covered="82"/><counter type="COMPLEXITY" missed="4" covered="21"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="56"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="63"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="76"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="25"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Worker$2$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Worker$2;)V" line="1734"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="1739"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="1744"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsFloydWarshall" sourcefilename="ShortestPathAllPairsFloydWarshall.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAllShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="44"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSubsetShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeAPSPUndirected" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="57"><counter type="INSTRUCTION" missed="14" covered="143"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAPSPDirected" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="103"><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectNegCycle" desc="(Lcom/jgalgo/alg/ShortestPathAllPairsUtils$ResultImpl$AllVertices;II)Z" line="145"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="373"/><counter type="BRANCH" missed="2" covered="54"/><counter type="LINE" missed="4" covered="74"/><counter type="COMPLEXITY" missed="3" covered="31"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaHagerup" sourcefilename="TreePathMaximaHagerup.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBitsLookupTablesEnable" desc="(Z)V" line="76"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeHeaviestEdgeInTreePaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/alg/TreePathMaxima$IQueries;)Lcom/jgalgo/alg/TreePathMaxima$IResult;" line="82"><counter type="INSTRUCTION" missed="5" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgoHopcroftTarjan$1" sourcefilename="BiConnectedComponentsAlgoHopcroftTarjan.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/BiConnectedComponentsAlgoHopcroftTarjan;I)V" line="66"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeVal" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(II)V" line="451"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgoAbstract" sourcefilename="TopologicalOrderAlgoAbstract.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTopologicalSorting" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/TopologicalOrderAlgo$Result;" line="33"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/TopologicalOrderAlgo$IResult;)Lcom/jgalgo/alg/TopologicalOrderAlgo$Result;" line="90"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="40"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$IntBiPartitionFromIndexBiPartition" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/IVertexBiPartition;)V" line="251"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexPartition" desc="()Lcom/jgalgo/alg/IVertexBiPartition;" line="255"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLeft" desc="(I)Z" line="260"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="5"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Dfs$IntIter" sourcefilename="Dfs.java"><method name="next" desc="()Ljava/lang/Integer;" line="144"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumMeanCycleDasdanGupta$SourceChooser" sourcefilename="MinimumMeanCycleDasdanGupta.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IVertexPartition;)V" line="214"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseSource" desc="(I)I" line="240"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negate" desc="(Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/graph/IWeightFunction;" line="268"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchingFromIndexMatching" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IMatching;)Lcom/jgalgo/alg/Matching;" line="497"><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$negate$0" desc="(Lcom/jgalgo/graph/IWeightFunction;I)D" line="271"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="26"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VoronoiAlgo" sourcefilename="VoronoiAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/VoronoiAlgo;" line="251"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/VoronoiAlgo$Builder;" line="263"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Blossom$1$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom$1;)V" line="2179"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2185"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;" line="2190"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="2201"><counter type="INSTRUCTION" missed="16" covered="59"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="2179"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="106"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTreeMehlhorn" sourcefilename="SteinerTreeMehlhorn.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSteinerTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;)Lcom/jgalgo/alg/SteinerTreeAlgo$IResult;" line="57"><counter type="INSTRUCTION" missed="118" covered="564"/><counter type="BRANCH" missed="22" covered="48"/><counter type="LINE" missed="19" covered="109"/><counter type="COMPLEXITY" missed="13" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeSteinerTree$3" desc="([DI)D" line="157"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeSteinerTree$2" desc="(Lcom/jgalgo/internal/util/Bitmap;Lcom/jgalgo/graph/IndexGraphBuilder;Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntArrayList;Lit/unimi/dsi/fastutil/doubles/DoubleArrayList;Lcom/jgalgo/graph/IWeightFunction;I)V" line="135"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeSteinerTree$1" desc="([DI)D" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeSteinerTree$0" desc="(I)Z" line="88"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="125" covered="609"/><counter type="BRANCH" missed="24" covered="50"/><counter type="LINE" missed="19" covered="118"/><counter type="COMPLEXITY" missed="15" covered="29"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CyclesFinder$1" sourcefilename="CyclesFinder.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/jgalgo/alg/CyclesFinder;" line="74"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/CyclesFinder$Builder;" line="89"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VertexScoringImpl$ObjResultFromIndexResult" sourcefilename="VertexScoringImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IVertexScoring;)V" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertexScore" desc="(Ljava/lang/Object;)D" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowInts" sourcefilename="LowestCommonAncestorDynamicGabowInts.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initTree" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="70"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLeaf" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertex2" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;)Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;" line="81"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFullVertex1" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex1;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex1;)V" line="107"><counter type="INSTRUCTION" missed="3" covered="52"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFullVertex0" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex0;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex0;)V" line="128"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcLCA" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;)Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;" line="136"><counter type="INSTRUCTION" missed="32" covered="195"/><counter type="BRANCH" missed="6" covered="26"/><counter type="LINE" missed="4" covered="40"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLowestCommonAncestor" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="202"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="207"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="212"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ithBit" desc="(I)I" line="320"><counter type="INSTRUCTION" missed="10" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="371"/><counter type="BRANCH" missed="13" covered="43"/><counter type="LINE" missed="9" covered="79"/><counter type="COMPLEXITY" missed="10" covered="30"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$FromBitmap" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/internal/util/Bitmap;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeft0" desc="(I)Z" line="228"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/AlgorithmWithDiagnostics" sourcefilename="AlgorithmWithDiagnostics.java"><method name="getDiagnostic" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;)Lcom/jgalgo/alg/ShortestPathSingleSource$Result;" line="132"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Debug" sourcefilename="MatchingWeightedBlossomV.java"><method name="blossomId" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)Ljava/lang/String;" line="2790"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Worker;)V" line="2795"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reset" desc="()V" line="2803"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertConstraints" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Worker;)V" line="2810"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$blossomId$0" desc="(Ljava/lang/Object;)I" line="2790"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="2782"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="6"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathST" sourcefilename="ShortestPathST.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/ShortestPathST;" line="74"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/ShortestPathST$Builder;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$newBuilder$0" desc="()Lcom/jgalgo/alg/ShortestPathST;" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ResFromSSSP$AllVertices" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;)V" line="271"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(II)D" line="276"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="281"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$ActiveOrderPolicyImpl$HighestFirst" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;)V" line="1345"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasMoreVerticesToDischarge" desc="()Z" line="1350"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextVertexToDischarge" desc="()I" line="1359"><counter type="INSTRUCTION" missed="17" covered="18"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1342"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="48"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Bfs$IntIter" sourcefilename="Bfs.java"><method name="next" desc="()Ljava/lang/Integer;" line="202"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastEdge" desc="()Ljava/lang/Integer;" line="218"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink$5" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink;Ljava/util/List;ILcom/jgalgo/alg/IFlowNetworkInt;)V" line="815"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(I)I" line="821"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="827"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="832"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(II)V" line="838"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="80"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink$6" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink;Ljava/util/List;ILcom/jgalgo/alg/IFlowNetwork;)V" line="846"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="852"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="857"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="862"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(ID)V" line="867"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="80"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink$3" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink;Ljava/util/List;Lcom/jgalgo/graph/IndexGraph;ILcom/jgalgo/alg/IFlowNetworkInt;Lcom/jgalgo/graph/IWeightFunctionInt;)V" line="626"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(I)I" line="632"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="639"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="644"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(II)V" line="651"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="105"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink$4" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink;Ljava/util/List;Lcom/jgalgo/graph/IndexGraph;ILcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;)V" line="659"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="665"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="671"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="676"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(ID)V" line="683"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="105"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceDag" sourcefilename="ShortestPathSingleSourceDag.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="52"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSsspDouble" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="60"><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSsspInt" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="84"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="86" covered="102"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="20" covered="25"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTree$1" sourcefilename="MinimumSpanningTree.java"><method name="&lt;init&gt;" desc="()V" line="273"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/MinimumSpanningTree;" line="279"><counter type="INSTRUCTION" missed="44" covered="12"/><counter type="BRANCH" missed="9" covered="2"/><counter type="LINE" missed="9" covered="4"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumSpanningTree$Builder;" line="307"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="3" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="70" covered="15"/><counter type="BRANCH" missed="12" covered="2"/><counter type="LINE" missed="16" covered="5"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Evens" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(I)V" line="265"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(I)V" line="271"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="union" desc="(II)V" line="277"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBlossom" desc="(ILcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="281"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBlossom" desc="(I)Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="285"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink$1" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink;Ljava/lang/Object;ILcom/jgalgo/alg/IFlowNetworkInt;)V" line="430"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(I)I" line="436"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="442"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="447"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(II)V" line="453"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="79"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink$2" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSourceSink;Ljava/lang/Object;ILcom/jgalgo/alg/IFlowNetwork;)V" line="461"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="467"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="472"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="477"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(ID)V" line="482"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="79"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CyclesFinderTarjan$1" sourcefilename="CyclesFinderTarjan.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/CyclesFinderTarjan;Lcom/jgalgo/graph/IndexGraph;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="77"><counter type="INSTRUCTION" missed="14" covered="194"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="2" covered="45"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/IPath;" line="147"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="275"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="2" covered="63"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamic$Builder" sourcefilename="LowestCommonAncestorDynamic.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Builder;" line="209"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgo" sourcefilename="BiConnectedComponentsAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/BiConnectedComponentsAlgo;" line="215"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/BiConnectedComponentsAlgo$Builder;" line="227"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTrees$ObjResultFromIndexResult" sourcefilename="SteinerTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/SteinerTreeAlgo$IResult;)V" line="96"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edges" desc="()Ljava/util/Set;" line="103"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ResultImpl" sourcefilename="ShortestPathAllPairsUtils.java"/><class name="com/jgalgo/alg/ShortestPathAllPairsJohnson$SuccessRes$VerticesSubset" sourcefilename="ShortestPathAllPairsJohnson.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;[I)V" line="281"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(II)D" line="287"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="292"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutGlobal" sourcefilename="MinimumCutGlobal.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/MinimumCutGlobal;" line="77"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MinimumCutGlobal$Builder;" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathAllPairs" sourcefilename="ShortestPathAllPairs.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/ShortestPathAllPairs;" line="194"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/ShortestPathAllPairs$Builder;" line="206"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VoronoiAlgos$IntResultFromIndexResult" sourcefilename="VoronoiAlgos.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/VoronoiAlgo$IResult;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexRes" desc="()Lcom/jgalgo/alg/VoronoiAlgo$IResult;" line="166"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(I)D" line="171"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(I)Lcom/jgalgo/alg/IPath;" line="176"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockSiteInt" desc="(I)I" line="182"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSite" desc="(I)I" line="188"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCoverUtils$ObjResultFromIndexResult" sourcefilename="VertexCoverUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/VertexCover$IResult;)V" line="99"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertices" desc="()Ljava/util/Set;" line="106"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInCover" desc="(Ljava/lang/Object;)Z" line="111"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$IntQueriesImpl" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="()V" line="94"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addQuery" desc="(II)V" line="100"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuerySourceInt" desc="(I)I" line="105"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryTargetInt" desc="(I)I" line="110"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils$IntResultFromIndexResult" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;)V" line="102"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(I)D" line="110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(I)Lcom/jgalgo/alg/IPath;" line="115"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="125"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumMeanCycleAbstract" sourcefilename="MinimumMeanCycleAbstract.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumMeanCycle" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Path;" line="32"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2410"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="2438"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="()Ljava/lang/Iterable;" line="2445"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="()Ljava/lang/Iterable;" line="2470"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdgesAndProneRemoved" desc="()Ljava/lang/Iterable;" line="2495"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdgesAndProneRemoved" desc="()Ljava/lang/Iterable;" line="2541"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evenNodesWithoutRoot" desc="()Ljava/lang/Iterable;" line="2587"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqInsertEvenOut" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2646"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqRemoveEvenOut" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2657"><counter type="INSTRUCTION" missed="7" covered="10"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqInsertEvenEven" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2667"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqRemoveEvenEven" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2678"><counter type="INSTRUCTION" missed="7" covered="10"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqEdgeInsertEvenOdd" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$TreesEdge;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2685"><counter type="INSTRUCTION" missed="15" covered="19"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqEdgeRemoveEvenOdd" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$TreesEdge;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2702"><counter type="INSTRUCTION" missed="15" covered="21"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqInsertOdd" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2720"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqRemoveOdd" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2725"><counter type="INSTRUCTION" missed="7" covered="10"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="2732"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="2405"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="82" covered="154"/><counter type="BRANCH" missed="20" covered="4"/><counter type="LINE" missed="1" covered="53"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ConnectedComponentsUtils$AbstractStronglyConnectedComponentsAlgo" sourcefilename="ConnectedComponentsUtils.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findStronglyConnectedComponents" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/VertexPartition;" line="31"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findStronglyConnectedComponents" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IVertexPartition;" line="42"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStronglyConnected" desc="(Lcom/jgalgo/graph/Graph;)Z" line="51"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="38"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStatic" sourcefilename="LowestCommonAncestorStatic.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/LowestCommonAncestorStatic;" line="134"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/LowestCommonAncestorStatic$Builder;" line="146"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/BitsLookupTable$Ith" sourcefilename="BitsLookupTable.java"><method name="&lt;init&gt;" desc="(ILcom/jgalgo/alg/BitsLookupTable$Count;)V" line="149"><counter type="INSTRUCTION" missed="11" covered="90"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ithBit" desc="(II)I" line="190"><counter type="INSTRUCTION" missed="8" covered="67"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfTrailingZeros" desc="(I)I" line="213"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="164"/><counter type="BRANCH" missed="6" covered="16"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/IVertexBiPartition" sourcefilename="IVertexBiPartition.java"><method name="isLeft" desc="(Ljava/lang/Integer;)Z" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRight" desc="(I)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexBlock" desc="(Ljava/lang/Integer;)I" line="59"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertexBlock" desc="(I)I" line="64"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rightVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftEdges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="79"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rightEdges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="84"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossEdges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="12"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom$1$1" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom$1;)V" line="178"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="185"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="190"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOffline$Result" sourcefilename="LowestCommonAncestorOffline.java"/><class name="com/jgalgo/alg/MaximumFlowPushRelabel$WorkerDouble" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;IILcom/jgalgo/alg/MaximumFlowPushRelabel$ActiveOrderPolicy;Lcom/jgalgo/alg/MaximumFlowPushRelabel$DischargePolicy;)V" line="1744"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAsMuchFromSource" desc="()V" line="1755"><counter type="INSTRUCTION" missed="11" covered="157"/><counter type="BRANCH" missed="3" covered="31"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="2" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(ID)V" line="1789"><counter type="INSTRUCTION" missed="11" covered="36"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateCycleDirected" desc="(I)V" line="1799"><counter type="INSTRUCTION" missed="31" covered="66"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateCycleUndirected" desc="(II)V" line="1826"><counter type="INSTRUCTION" missed="70" covered="123"/><counter type="BRANCH" missed="16" covered="10"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateExcessWithTopologicalOrder" desc="(II[I)V" line="1876"><counter type="INSTRUCTION" missed="10" covered="125"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="()D" line="1911"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasExcess" desc="(I)Z" line="1916"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResidualCapacity" desc="(I)D" line="1920"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flow" desc="(I)D" line="1924"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResidual" desc="(I)Z" line="1929"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTwinResidualUndirected" desc="(I)Z" line="1934"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTwinResidualCapacity" desc="(I)D" line="1938"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNegativeFlow" desc="(I)Z" line="1944"><counter type="INSTRUCTION" missed="7" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasFlow" desc="(I)Z" line="1950"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1734"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="147" covered="626"/><counter type="BRANCH" missed="35" covered="77"/><counter type="LINE" missed="0" covered="129"/><counter type="COMPLEXITY" missed="18" covered="54"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairs$1$1" sourcefilename="ShortestPathAllPairs.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/ShortestPathAllPairs$1;Lcom/jgalgo/alg/ShortestPathAllPairs;)V" line="227"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAllShortestPaths" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$Result;" line="233"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSubsetShortestPaths" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$Result;" line="244"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="29"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliquesUtils$IntResultFromIndexResult" sourcefilename="MaximalCliquesUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Iterator;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="67"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairs$1" sourcefilename="ShortestPathAllPairs.java"><method name="&lt;init&gt;" desc="()V" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/ShortestPathAllPairs;" line="212"><counter type="INSTRUCTION" missed="30" covered="16"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCardinality" desc="(Z)Lcom/jgalgo/alg/ShortestPathAllPairs$Builder;" line="256"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathAllPairs$Builder;" line="262"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="19"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="13" covered="5"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgo$Result" sourcefilename="BiConnectedComponentsAlgo.java"/><class name="com/jgalgo/alg/VertexPartitions$IntPartitionFromIndexPartition" sourcefilename="VertexPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/IVertexPartition;)V" line="344"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBlocks" desc="()I" line="354"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexBlock" desc="(I)I" line="359"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="364"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockEdges" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="369"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="crossEdges" desc="(II)Lit/unimi/dsi/fastutil/ints/IntSet;" line="374"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IntGraph;" line="379"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blocksGraph" desc="(ZZ)Lcom/jgalgo/graph/IntGraph;" line="384"><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="397"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="337"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="134"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ContractableGraph" sourcefilename="ContractableGraph.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfSuperVertices" desc="()I" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contract" desc="(II)V" line="53"><counter type="INSTRUCTION" missed="5" covered="88"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="superVertexVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntIterator;" line="73"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/alg/ContractableGraph$EdgeIter;" line="78"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="165"><counter type="INSTRUCTION" missed="126" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkSuperVertex" desc="(I)V" line="205"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="131" covered="179"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="29" covered="33"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ResultImpl$Undirected" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="159"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="index" desc="(II)I" line="166"><counter type="INSTRUCTION" missed="7" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDistance" desc="(IID)V" line="178"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(II)D" line="183"><counter type="INSTRUCTION" missed="5" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="190"><counter type="INSTRUCTION" missed="12" covered="47"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="153"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="127"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceDial$DialHeap" sourcefilename="ShortestPathSingleSourceDial.java"><method name="&lt;init&gt;" desc="(II)V" line="127"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="(II)V" line="139"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(II)V" line="157"><counter type="INSTRUCTION" missed="7" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractMin" desc="()I" line="167"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsVertex" desc="(I)Z" line="181"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCurrentDistance" desc="(I)I" line="185"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="119"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="186"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgo$Builder" sourcefilename="BiConnectedComponentsAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/BiConnectedComponentsAlgo$Builder;" line="261"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ContractableGraph$EdgeIter" sourcefilename="ContractableGraph.java"><method name="peekNextInt" desc="()I" line="215"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VoronoiAlgoDijkstra" sourcefilename="VoronoiAlgoDijkstra.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeVoronoiCells" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/VoronoiAlgo$IResult;" line="32"><counter type="INSTRUCTION" missed="11" covered="219"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="2" covered="50"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="222"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="2" covered="51"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/KShortestPathsST$Builder" sourcefilename="KShortestPathsST.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/KShortestPathsST$Builder;" line="118"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/CyclesFinder$Builder" sourcefilename="CyclesFinder.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/CyclesFinder$Builder;" line="132"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Simpler" sourcefilename="MatchingWeightedGabow1990Simpler.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newWorker" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;Lcom/jgalgo/internal/util/DebugPrinter;)Lcom/jgalgo/alg/MatchingWeightedGabow1990Simpler$Worker;" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexPartitions$Impl" sourcefilename="VertexPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I[I)V" line="54"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBlocks" desc="()I" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexBlock" desc="(I)I" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="78"><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockEdges" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="113"><counter type="INSTRUCTION" missed="0" covered="179"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="crossEdges" desc="(II)Lit/unimi/dsi/fastutil/ints/IntSet;" line="159"><counter type="INSTRUCTION" missed="136" covered="376"/><counter type="BRANCH" missed="15" covered="41"/><counter type="LINE" missed="22" covered="56"/><counter type="COMPLEXITY" missed="8" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/IntGraph;" line="283"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blocksGraph" desc="(ZZ)Lcom/jgalgo/graph/IntGraph;" line="288"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$crossEdges$3" desc="(Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Lcom/jgalgo/internal/util/JGAlgoUtils$BiInt2LongFunc;II)Lit/unimi/dsi/fastutil/ints/IntSet;" line="275"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$crossEdges$2" desc="(J)[I" line="255"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$crossEdges$1" desc="(II)J" line="245"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$crossEdges$0" desc="([[Lit/unimi/dsi/fastutil/ints/IntSet;II)Lit/unimi/dsi/fastutil/ints/IntSet;" line="239"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="179" covered="729"/><counter type="BRANCH" missed="17" covered="69"/><counter type="LINE" missed="30" covered="114"/><counter type="COMPLEXITY" missed="14" covered="43"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$2$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree$2;)V" line="2474"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2479"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$TreesEdge;" line="2484"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumDirectedSpanningTree" sourcefilename="MinimumDirectedSpanningTree.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/MinimumDirectedSpanningTree;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MinimumDirectedSpanningTree$Builder;" line="79"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsJohnson$SuccessRes$AllVertices" sourcefilename="ShortestPathAllPairsJohnson.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;)V" line="261"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(II)D" line="266"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="271"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowEdmondsKarp$Worker" sourcefilename="MaximumFlowEdmondsKarp.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowEdmondsKarp;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="59"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxFlow0" desc="()V" line="64"><counter type="INSTRUCTION" missed="26" covered="216"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="6" covered="68"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="227"/><counter type="BRANCH" missed="3" covered="33"/><counter type="LINE" missed="6" covered="72"/><counter type="COMPLEXITY" missed="2" covered="19"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$NetImplEdgeIWeights" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsDouble;Lcom/jgalgo/graph/IWeightsDouble;)V" line="142"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="149"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="154"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlow" desc="(I)D" line="161"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(ID)V" line="166"><counter type="INSTRUCTION" missed="7" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ColoringAlgo$1" sourcefilename="ColoringAlgo.java"><method name="&lt;init&gt;" desc="()V" line="173"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/jgalgo/alg/ColoringAlgo;" line="179"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ColoringAlgo$Builder;" line="196"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="82" covered="0"/><counter type="BRANCH" missed="13" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/EdgeCover$Builder" sourcefilename="EdgeCover.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/EdgeCover$Builder;" line="245"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2" sourcefilename="LowestCommonAncestorDynamicGabowInts.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;)V" line="225"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getData" desc="()Ljava/lang/Object;" line="232"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setData" desc="(Ljava/lang/Object;)V" line="237"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="242"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex1" sourcefilename="LowestCommonAncestorDynamicGabowInts.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;)V" line="261"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParent" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex1;" line="267"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex2;)V" line="271"><counter type="INSTRUCTION" missed="8" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="279"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="250"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="66"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex0" sourcefilename="LowestCommonAncestorDynamicGabowInts.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex1;)V" line="297"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowInts$Vertex1;)V" line="303"><counter type="INSTRUCTION" missed="8" covered="36"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFull" desc="()Z" line="311"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="288"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="55"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$AbstractWorker$Vertex" sourcefilename="MaximumFlowPushRelabelDynamicTrees.java"><method name="&lt;init&gt;" desc="(ILcom/jgalgo/internal/ds/DynamicTree$Vertex;)V" line="309"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumMeanCycle$1" sourcefilename="MinimumMeanCycle.java"><method name="&lt;init&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/MinimumMeanCycle;" line="83"><counter type="INSTRUCTION" missed="24" covered="7"/><counter type="BRANCH" missed="4" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumMeanCycle$Builder;" line="98"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="10"/><counter type="BRANCH" missed="6" covered="1"/><counter type="LINE" missed="9" covered="3"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeFredmanTarjan" sourcefilename="MinimumSpanningTreeFredmanTarjan.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="76"><counter type="INSTRUCTION" missed="2" covered="351"/><counter type="BRANCH" missed="2" covered="38"/><counter type="LINE" missed="1" covered="87"/><counter type="COMPLEXITY" missed="2" covered="19"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="360"/><counter type="BRANCH" missed="2" covered="38"/><counter type="LINE" missed="3" covered="90"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowEdmondsKarp$WorkerDouble" sourcefilename="MaximumFlowEdmondsKarp.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowEdmondsKarp;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="182"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxFlow" desc="()D" line="190"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongPathDirected" desc="([I)V" line="197"><counter type="INSTRUCTION" missed="36" covered="97"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongPathUndirected" desc="([I)V" line="235"><counter type="INSTRUCTION" missed="36" covered="97"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flow" desc="(I)D" line="271"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasFlow" desc="(I)Z" line="276"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResidualCapacity" desc="(I)D" line="280"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSaturated" desc="(I)Z" line="285"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isResidual" desc="(I)Z" line="290"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTwinResidualUndirected" desc="(I)Z" line="295"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTwinResidualCapacity" desc="(I)D" line="299"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="175"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="89" covered="290"/><counter type="BRANCH" missed="20" covered="22"/><counter type="LINE" missed="1" covered="66"/><counter type="COMPLEXITY" missed="11" covered="22"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MemoryReuse" sourcefilename="MemoryReuse.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureLength" desc="([II)[I" line="32"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureLength" desc="([[III)[[I" line="36"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureLength" desc="([DI)[D" line="48"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureLength" desc="([[DII)[[D" line="52"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureLength" desc="([ZI)[Z" line="64"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ensureLength" desc="([Ljava/lang/Object;I)[Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureAllocated" desc="(Ljava/lang/Object;Ljava/util/function/Supplier;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newLength" desc="([II)I" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newLength" desc="([DI)I" line="80"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newLength" desc="([ZI)I" line="84"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newLength" desc="([Ljava/lang/Object;I)I" line="88"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="133" covered="66"/><counter type="BRANCH" missed="16" covered="6"/><counter type="LINE" missed="21" covered="12"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs" sourcefilename="LowestCommonAncestorDynamicGabowLongs.java"><method name="&lt;init&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initTree" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="71"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addLeaf" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="78"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertex2" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;)Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;" line="82"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFullVertex1" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex1;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex1;)V" line="108"><counter type="INSTRUCTION" missed="17" covered="39"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFullVertex0" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex0;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex0;)V" line="129"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calcLCA" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;)Lcom/jgalgo/alg/LowestCommonAncestorDynamicGabowLongs$Vertex2;" line="137"><counter type="INSTRUCTION" missed="97" covered="130"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="16" covered="28"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLowestCommonAncestor" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;" line="203"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="208"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="213"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ithBit" desc="(J)J" line="321"><counter type="INSTRUCTION" missed="12" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="153" covered="290"/><counter type="BRANCH" missed="26" covered="30"/><counter type="LINE" missed="24" covered="64"/><counter type="COMPLEXITY" missed="17" covered="23"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$TreesEdge" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="()V" line="2746"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pqInsertEvenEven" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2761"><counter type="INSTRUCTION" missed="16" covered="9"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="2772"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="2746"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="31" covered="25"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/StronglyConnectedComponentsAlgoTarjan" sourcefilename="StronglyConnectedComponentsAlgoTarjan.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findStronglyConnectedComponentsDirected" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IVertexPartition;" line="28"><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="46"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStronglyConnected" desc="(Lcom/jgalgo/graph/IndexGraph;)Z" line="92"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="171"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="1" covered="47"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlow$1$1" sourcefilename="MinimumCostFlow.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlow$1;)V" line="214"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;)V" line="222"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;)V" line="232"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Ljava/util/Collection;Ljava/util/Collection;)V" line="243"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;Ljava/util/Collection;Ljava/util/Collection;)V" line="254"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinCostFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;)V" line="265"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/graph/WeightFunction;)V" line="276"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="136" covered="41"/><counter type="BRANCH" missed="30" covered="4"/><counter type="LINE" missed="20" covered="7"/><counter type="COMPLEXITY" missed="21" covered="3"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowAbstract$WithResidualGraph" sourcefilename="MaximumFlowAbstract.java"><method name="&lt;init&gt;" desc="()V" line="330"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CyclesFinderJohnson" sourcefilename="CyclesFinderJohnson.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllCycles" desc="(Lcom/jgalgo/graph/IndexGraph;)Ljava/util/Iterator;" line="55"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasSelfEdge" desc="(Lcom/jgalgo/graph/IndexGraph;I)Z" line="234"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeBoruvka" sourcefilename="MinimumSpanningTreeBoruvka.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="61"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runBoruvka" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/MinimumSpanningTreeBoruvka$RunBoruvkaResult;" line="77"><counter type="INSTRUCTION" missed="12" covered="89"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMST" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/MinimumSpanningTreeBoruvka$Res;" line="103"><counter type="INSTRUCTION" missed="7" covered="299"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="0" covered="74"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="401"/><counter type="BRANCH" missed="5" covered="49"/><counter type="LINE" missed="1" covered="96"/><counter type="COMPLEXITY" missed="3" covered="29"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Debug$Impl" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="()V" line="2784"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/StronglyConnectedComponentsAlgo$Builder" sourcefilename="StronglyConnectedComponentsAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/StronglyConnectedComponentsAlgo$Builder;" line="129"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgoHopcroftTarjan$Res$1" sourcefilename="BiConnectedComponentsAlgoHopcroftTarjan.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/BiConnectedComponentsAlgoHopcroftTarjan$Res;[II)V" line="415"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="418"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="10"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSource$Result" sourcefilename="ShortestPathSingleSource.java"/><class name="com/jgalgo/alg/MinimumSpanningTreeYao" sourcefilename="MinimumSpanningTreeYao.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="57"><counter type="INSTRUCTION" missed="14" covered="309"/><counter type="BRANCH" missed="4" covered="42"/><counter type="LINE" missed="0" covered="71"/><counter type="COMPLEXITY" missed="2" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionEdgesToBuckets" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)[[[I" line="172"><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="458"/><counter type="BRANCH" missed="4" covered="52"/><counter type="LINE" missed="0" covered="97"/><counter type="COMPLEXITY" missed="2" covered="30"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/KShortestPathsST" sourcefilename="KShortestPathsST.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/KShortestPathsST;" line="72"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/KShortestPathsST$Builder;" line="84"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/SimplePathsFinder" sourcefilename="SimplePathsFinder.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/SimplePathsFinder;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/SimplePathsFinder$Builder;" line="72"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCovers$ObjResultFromIndexResult" sourcefilename="EdgeCovers.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/EdgeCover$IResult;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Ljava/util/Set;" line="132"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInCover" desc="(Ljava/lang/Object;)Z" line="137"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliquesBronKerboschPivot" sourcefilename="MaximalCliquesBronKerboschPivot.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterateMaximalCliques" desc="(Lcom/jgalgo/graph/IndexGraph;)Ljava/util/Iterator;" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$4$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree$4;)V" line="2545"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="2554"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2567"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$TreesEdge;" line="2572"><counter type="INSTRUCTION" missed="16" covered="18"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="2545"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="72"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartition" sourcefilename="VertexBiPartition.java"><method name="numberOfBlocks" desc="()I" line="40"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isRight" desc="(Ljava/lang/Object;)Z" line="58"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertexBlock" desc="(Ljava/lang/Object;)I" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftVertices" desc="()Ljava/util/Set;" line="75"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rightVertices" desc="()Ljava/util/Set;" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="leftEdges" desc="()Ljava/util/Set;" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rightEdges" desc="()Ljava/util/Set;" line="113"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossEdges" desc="()Ljava/util/Set;" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="1"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSupply$2" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSupply;Lcom/jgalgo/graph/IndexGraphBuilder;ILcom/jgalgo/alg/IFlowNetwork;D)V" line="987"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacity" desc="(I)D" line="992"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(ID)V" line="997"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="1002"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(ID)V" line="1007"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathST$Builder" sourcefilename="ShortestPathST.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathST$Builder;" line="136"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/KEdgeConnectedComponentsAlgo$Builder" sourcefilename="KEdgeConnectedComponentsAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/KEdgeConnectedComponentsAlgo$Builder;" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MaximumFlow$Builder" sourcefilename="MaximumFlow.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MaximumFlow$Builder;" line="195"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStatic$IDataStructure" sourcefilename="LowestCommonAncestorStatic.java"><method name="findLca" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;" line="120"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSupply$1" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSupply;Lcom/jgalgo/graph/IndexGraphBuilder;ILcom/jgalgo/alg/IFlowNetworkInt;I)V" line="958"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(I)I" line="963"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="968"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="973"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(II)V" line="979"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="76"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowDinicDynamicTrees$Worker" sourcefilename="MaximumFlowDinicDynamicTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowDinicDynamicTrees;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="71"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowDinicDynamicTrees;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="79"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="()D" line="88"><counter type="INSTRUCTION" missed="48" covered="478"/><counter type="BRANCH" missed="9" covered="41"/><counter type="LINE" missed="0" covered="100"/><counter type="COMPLEXITY" missed="5" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMaximumFlow$0" desc="(ID)V" line="145"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="66"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="574"/><counter type="BRANCH" missed="9" covered="41"/><counter type="LINE" missed="0" covered="119"/><counter type="COMPLEXITY" missed="5" covered="25"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutGlobalStoerWagner" sourcefilename="MinimumCutGlobalStoerWagner.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IVertexBiPartition;" line="42"><counter type="INSTRUCTION" missed="60" covered="242"/><counter type="BRANCH" missed="15" covered="29"/><counter type="LINE" missed="1" covered="67"/><counter type="COMPLEXITY" missed="8" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="246"/><counter type="BRANCH" missed="15" covered="29"/><counter type="LINE" missed="1" covered="68"/><counter type="COMPLEXITY" missed="8" covered="17"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$AbstractImpl" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAllShortestPaths" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$Result;" line="45"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSubsetShortestPaths" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$Result;" line="62"><counter type="INSTRUCTION" missed="27" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="7" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBipartiteSSSP" sourcefilename="MatchingWeightedBipartiteSSSP.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSsspAlgo" desc="(Lcom/jgalgo/alg/ShortestPathSingleSource;)V" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMaximumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="74"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightsBool;)[I" line="85"><counter type="INSTRUCTION" missed="43" covered="326"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="1" covered="69"/><counter type="COMPLEXITY" missed="7" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="201"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="365"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="4" covered="80"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgoAbstract$ObjResultFromIndexResult" sourcefilename="TopologicalOrderAlgoAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/TopologicalOrderAlgo$IResult;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orderedVertices" desc="()Ljava/util/List;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexOrderIndex" desc="(Ljava/lang/Object;)I" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="19"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliques" sourcefilename="MaximalCliques.java"><method name="findAllMaximalCliques" desc="(Lcom/jgalgo/graph/Graph;)Ljava/util/Collection;" line="71"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/alg/MaximalCliques;" line="104"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MaximalCliques$Builder;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSTs" sourcefilename="ShortestPathSTs.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/KEdgeConnectedComponentsWang" sourcefilename="KEdgeConnectedComponentsWang.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(J)V" line="41"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeKEdgeConnectedComponents" desc="(Lcom/jgalgo/graph/IndexGraph;I)Lcom/jgalgo/alg/IVertexPartition;" line="62"><counter type="INSTRUCTION" missed="95" covered="303"/><counter type="BRANCH" missed="27" covered="33"/><counter type="LINE" missed="1" covered="78"/><counter type="COMPLEXITY" missed="15" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeKEdgeConnectedComponentsFromAuxGraph" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexGraph;[II)Lcom/jgalgo/alg/IVertexPartition;" line="171"><counter type="INSTRUCTION" missed="25" covered="89"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeKEdgeConnectedComponents$0" desc="(Lcom/jgalgo/alg/IVertexPartition;I)I" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="134" covered="413"/><counter type="BRANCH" missed="33" covered="45"/><counter type="LINE" missed="4" covered="111"/><counter type="COMPLEXITY" missed="19" covered="26"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAStar$Info" sourcefilename="ShortestPathAStar.java"><method name="&lt;init&gt;" desc="()V" line="197"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTreeAlgo$Result" sourcefilename="SteinerTreeAlgo.java"/><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$IntResultFromIndexResult" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/LowestCommonAncestorOffline$IResult;)V" line="251"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLcaInt" desc="(I)I" line="258"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="264"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BfsIterImpl$Abstract" sourcefilename="BfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntIterator;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastEdgeInt" desc="()I" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="layer" desc="()I" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowAbstract$WithoutResidualGraph$Worker" sourcefilename="MaximumFlowAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="95"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCapacities" desc="([I)V" line="107"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCapacities" desc="([D)V" line="113"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="([D)D" line="118"><counter type="INSTRUCTION" missed="114" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constructResult" desc="([I)I" line="140"><counter type="INSTRUCTION" missed="115" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constructResult" desc="([D[D)D" line="162"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="([I[I)I" line="184"><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="229" covered="344"/><counter type="BRANCH" missed="28" covered="32"/><counter type="LINE" missed="30" covered="48"/><counter type="COMPLEXITY" missed="16" covered="21"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliques$1" sourcefilename="MaximalCliques.java"><method name="&lt;init&gt;" desc="()V" line="116"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lcom/jgalgo/alg/MaximalCliques;" line="121"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="5" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MaximalCliques$Builder;" line="136"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/EdgeCover$IResult" sourcefilename="EdgeCover.java"><method name="isInCover" desc="(Ljava/lang/Integer;)Z" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlow" sourcefilename="MinimumCostFlow.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/MinimumCostFlow;" line="182"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MinimumCostFlow$Builder;" line="194"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ResultImpl$Directed" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="209"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDistance" desc="(IID)V" line="220"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(II)D" line="225"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="232"><counter type="INSTRUCTION" missed="22" covered="47"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="205"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="97"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="4" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeUtils$IntResultFromIndexResult" sourcefilename="MinimumSpanningTreeUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/MinimumSpanningTree$IResult;)V" line="132"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntCollection;" line="139"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBipartiteHungarianMethod" sourcefilename="MatchingWeightedBipartiteHungarianMethod.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="60"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMaximumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="72"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="88"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="51"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeKargerKleinTarjan" sourcefilename="MinimumSpanningTreeKargerKleinTarjan.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(J)V" line="52"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMST" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lit/unimi/dsi/fastutil/ints/IntCollection;" line="86"><counter type="INSTRUCTION" missed="0" covered="116"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subGraph" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;[I)Lit/unimi/dsi/fastutil/Pair;" line="122"><counter type="INSTRUCTION" missed="7" covered="66"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assignWeightsFromEdgeRef" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;[I)Lcom/jgalgo/graph/IWeightsDouble;" line="141"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randSubgraph" desc="(Lcom/jgalgo/graph/IndexGraph;[I)Lit/unimi/dsi/fastutil/Pair;" line="148"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lightEdges" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/Int2DoubleFunction;Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/Int2DoubleFunction;)Lit/unimi/dsi/fastutil/ints/IntCollection;" line="158"><counter type="INSTRUCTION" missed="1" covered="270"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="1" covered="43"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMST$1" desc="(Lcom/jgalgo/graph/IWeightFunction;[II)D" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMST$0" desc="(Lcom/jgalgo/graph/IWeightFunction;[II)D" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="563"/><counter type="BRANCH" missed="5" covered="33"/><counter type="LINE" missed="3" covered="102"/><counter type="COMPLEXITY" missed="5" covered="25"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$AbstractMinimumMatchingImpl" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="()V" line="287"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="291"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="296"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairs$IResult" sourcefilename="ShortestPathAllPairs.java"><method name="distance" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)D" line="160"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Lcom/jgalgo/alg/IPath;" line="177"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TSPMetricMSTAppx" sourcefilename="TSPMetricMSTAppx.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestTour" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IPath;" line="55"><counter type="INSTRUCTION" missed="30" covered="102"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="109"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$WorkerInt" sourcefilename="MaximumFlowPushRelabelDynamicTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;II)V" line="459"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertex" desc="(ILcom/jgalgo/internal/ds/DynamicTree$Vertex;)Lcom/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$WorkerInt$Vertex;" line="468"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxCapacity" desc="()D" line="473"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushFlow" desc="(II)V" line="481"><counter type="INSTRUCTION" missed="26" covered="24"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateFlow" desc="(ID)V" line="490"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAsMuchFromSource" desc="()V" line="495"><counter type="INSTRUCTION" missed="0" covered="65"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongEdge" desc="(I)V" line="513"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongPath" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$AbstractWorker$Vertex;)V" line="524"><counter type="INSTRUCTION" missed="0" covered="89"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="()D" line="554"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResidualCapacity" desc="(I)D" line="559"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResidual" desc="(I)Z" line="564"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="453"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="330"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="63"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils$ResultImpl" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I)V" line="264"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(I)D" line="276"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(I)Lcom/jgalgo/alg/IPath;" line="281"><counter type="INSTRUCTION" missed="16" covered="78"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="311"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="316"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="321"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="257"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="115"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="2" covered="32"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/KShortestPathsSTs" sourcefilename="KShortestPathsSTs.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Worker$3" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Worker;)V" line="1755"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="1759"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Worker$2" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Worker;)V" line="1730"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="1734"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CyclesFinderAbstract" sourcefilename="CyclesFinderAbstract.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllCycles" desc="(Lcom/jgalgo/graph/Graph;)Ljava/util/Iterator;" line="27"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Worker$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Worker;)V" line="186"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ChinesePostmanImpl" sourcefilename="ChinesePostmanImpl.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonSelfEdgesDegree" desc="(Lcom/jgalgo/graph/IndexGraph;I)I" line="40"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestEdgeVisitorCircle" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IPath;" line="48"><counter type="INSTRUCTION" missed="19" covered="271"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="0" covered="48"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestEdgeVisitorCircle" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Path;" line="125"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeShortestEdgeVisitorCircle$0" desc="([ILcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;I)D" line="77"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="349"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="2" covered="66"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingCardinalityBipartiteHopcroftKarp" sourcefilename="MatchingCardinalityBipartiteHopcroftKarp.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumCardinalityMatching" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IMatching;" line="57"><counter type="INSTRUCTION" missed="1" covered="304"/><counter type="BRANCH" missed="1" covered="39"/><counter type="LINE" missed="1" covered="80"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="307"/><counter type="BRANCH" missed="1" covered="39"/><counter type="LINE" missed="1" covered="81"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BitsLookupTable$Count" sourcefilename="BitsLookupTable.java"><method name="&lt;init&gt;" desc="(I)V" line="74"><counter type="INSTRUCTION" missed="6" covered="51"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bitCount" desc="(I)I" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="56"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamic" sourcefilename="LowestCommonAncestorDynamic.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic;" line="132"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Builder;" line="144"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexPartitions" sourcefilename="VertexPartitions.java"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blocksGraph" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IVertexPartition;ZZ)Lcom/jgalgo/graph/IntGraph;" line="293"><counter type="INSTRUCTION" missed="100" covered="71"/><counter type="BRANCH" missed="22" covered="10"/><counter type="LINE" missed="19" covered="17"/><counter type="COMPLEXITY" missed="12" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="partitionFromIndexPartition" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IVertexPartition;)Lcom/jgalgo/alg/VertexPartition;" line="469"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="110" covered="89"/><counter type="BRANCH" missed="24" covered="12"/><counter type="LINE" missed="19" covered="22"/><counter type="COMPLEXITY" missed="14" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliquesUtils" sourcefilename="MaximalCliquesUtils.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Iterator;)Ljava/util/Iterator;" line="94"><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlow" sourcefilename="MaximumFlow.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/MaximumFlow;" line="106"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MaximumFlow$Builder;" line="118"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/GraphsUtils" sourcefilename="GraphsUtils.java"><method name="calcDegree" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntIterable;)[I" line="35"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsSelfEdges" desc="(Lcom/jgalgo/graph/Graph;)Z" line="55"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsParallelEdges" desc="(Lcom/jgalgo/graph/Graph;)Z" line="80"><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="125"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexScoring" sourcefilename="VertexScoring.java"/><class name="com/jgalgo/alg/EdgeCover$1" sourcefilename="EdgeCover.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/EdgeCover;Lcom/jgalgo/alg/EdgeCover;)V" line="200"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumEdgeCover" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/EdgeCover$Result;" line="203"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ColoringDSatur" sourcefilename="ColoringDSatur.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="64"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeColoring" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IVertexPartition;" line="69"><counter type="INSTRUCTION" missed="0" covered="198"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeColoring$2" desc="(II)I" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeColoring$1" desc="(II)I" line="86"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeColoring$0" desc="(III)I" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="225"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCoverWeighted" sourcefilename="EdgeCoverWeighted.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumEdgeCover" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/EdgeCover$IResult;" line="31"><counter type="INSTRUCTION" missed="86" covered="242"/><counter type="BRANCH" missed="13" covered="25"/><counter type="LINE" missed="18" covered="46"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinimumEdgeCover$1" desc="(ILcom/jgalgo/graph/IWeightFunction;[DI)D" line="100"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMinimumEdgeCover$0" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;[II)I" line="77"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="103" covered="265"/><counter type="BRANCH" missed="15" covered="27"/><counter type="LINE" missed="18" covered="49"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/PathImpl$IterDirected" sourcefilename="PathImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntList;)V" line="205"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="215"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="220"><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="228"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceInt" desc="()I" line="235"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="240"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="201"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$ResidualGraph$Builder" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="246"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAllOriginalEdges" desc="()V" line="254"><counter type="INSTRUCTION" missed="25" covered="66"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()I" line="271"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(III)V" line="275"><counter type="INSTRUCTION" missed="36" covered="37"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/FlowNetworks$ResidualGraph;" line="288"><counter type="INSTRUCTION" missed="19" covered="71"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="239"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="80" covered="210"/><counter type="BRANCH" missed="17" covered="9"/><counter type="LINE" missed="3" covered="45"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowCirculationPushRelabel$WorkerDouble" sourcefilename="FlowCirculationPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;)V" line="93"><counter type="INSTRUCTION" missed="5" covered="183"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCirculation" desc="()V" line="138"><counter type="INSTRUCTION" missed="25" covered="340"/><counter type="BRANCH" missed="5" covered="43"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="3" covered="22"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeCirculation$0" desc="(I)Z" line="218"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="41" covered="524"/><counter type="BRANCH" missed="8" covered="60"/><counter type="LINE" missed="2" covered="92"/><counter type="COMPLEXITY" missed="6" covered="32"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamic$Vertex" sourcefilename="LowestCommonAncestorDynamic.java"/><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(I)V" line="108"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="164"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isSingleton" desc="()Z" line="168"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="children" desc="()Ljava/lang/Iterable;" line="172"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="203"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="39"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTree$IResult" sourcefilename="MinimumSpanningTree.java"/><class name="com/jgalgo/alg/CoresAlgoImpl$ResultImpl$1" sourcefilename="CoresAlgoImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/CoresAlgoImpl$ResultImpl;[IIIII)V" line="217"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="220"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="15"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgoImpl$ResultImpl$2" sourcefilename="CoresAlgoImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/CoresAlgoImpl$ResultImpl;[IIIII)V" line="237"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="240"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="15"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgoImpl$ResultImpl$3" sourcefilename="CoresAlgoImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/CoresAlgoImpl$ResultImpl;[IIIII)V" line="257"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="260"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="15"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VoronoiAlgos$ResultImpl" sourcefilename="VoronoiAlgos.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I[I[D[I[I)V" line="68"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(I)D" line="76"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(I)Lcom/jgalgo/alg/IPath;" line="81"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockSiteInt" desc="(I)I" line="112"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSite" desc="(I)I" line="117"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Blossom" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="()V" line="1994"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEven" desc="()Z" line="1999"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOdd" desc="()Z" line="2003"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOut" desc="()Z" line="2007"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEven" desc="()V" line="2011"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOdd" desc="()V" line="2015"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOut" desc="()V" line="2019"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOuter" desc="()Z" line="2023"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOuter" desc="(Z)V" line="2027"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isBlossom" desc="()Z" line="2031"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsBlossom" desc="(Z)V" line="2035"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isProcessed" desc="()Z" line="2039"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProcessed" desc="(Z)V" line="2043"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMarked" desc="()Z" line="2047"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMarked" desc="(Z)V" line="2051"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTreeRoot" desc="()Z" line="2055"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIsTreeRoot" desc="(Z)V" line="2059"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatched" desc="()Z" line="2063"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="matchedNode" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2067"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blossomSibling" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2071"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTreeParent" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2075"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPenultimateBlossom" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2084"><counter type="INSTRUCTION" missed="5" covered="31"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPenultimateBlossomAndUpdateGrandparentToGrandchild" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2102"><counter type="INSTRUCTION" missed="5" covered="37"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeOut" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2123"><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeIn" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2136"><counter type="INSTRUCTION" missed="10" covered="36"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeOut" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2149"><counter type="INSTRUCTION" missed="16" covered="31"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeIn" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="2162"><counter type="INSTRUCTION" missed="16" covered="31"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="()Ljava/lang/Iterable;" line="2175"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="()Ljava/lang/Iterable;" line="2226"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="2278"><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)I" line="1992"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1879"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="132" covered="584"/><counter type="BRANCH" missed="33" covered="49"/><counter type="LINE" missed="7" covered="117"/><counter type="COMPLEXITY" missed="19" covered="54"/><counter type="METHOD" missed="1" covered="31"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Edge" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(ILcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2333"><counter type="INSTRUCTION" missed="14" covered="24"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOtherEndpoint" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2342"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEndpointOrig" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2351"><counter type="INSTRUCTION" missed="8" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveEdge" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2360"><counter type="INSTRUCTION" missed="8" covered="15"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveEdgeOut" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2369"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveEdgeIn" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2374"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSourceOuterBlossom" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2379"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTargetOuterBlossom" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="2389"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="2401"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$0" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)I" line="2331"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="2331"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="120"/><counter type="BRANCH" missed="10" covered="10"/><counter type="LINE" missed="1" covered="39"/><counter type="COMPLEXITY" missed="6" covered="15"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgoAbstract$ObjResultFromIndexResult" sourcefilename="BiConnectedComponentsAlgoAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/BiConnectedComponentsAlgo$IResult;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexBiCcs" desc="(Ljava/lang/Object;)Lit/unimi/dsi/fastutil/ints/IntSet;" line="105"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfBiCcs" desc="()I" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBiCcVertices" desc="(I)Ljava/util/Set;" line="115"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBiCcEdges" desc="(I)Ljava/util/Set;" line="120"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCutVertex" desc="(Ljava/lang/Object;)Z" line="125"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCutVertices" desc="()Ljava/util/Set;" line="130"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockGraph" desc="()Lcom/jgalgo/graph/IntGraph;" line="135"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VoronoiAlgo$Builder" sourcefilename="VoronoiAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/VoronoiAlgo$Builder;" line="297"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;IILcom/jgalgo/alg/MaximumFlowPushRelabel$ActiveOrderPolicy;Lcom/jgalgo/alg/MaximumFlowPushRelabel$DischargePolicy;)V" line="222"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recomputeLabels" desc="()V" line="245"><counter type="INSTRUCTION" missed="117" covered="298"/><counter type="BRANCH" missed="26" covered="30"/><counter type="LINE" missed="13" covered="77"/><counter type="COMPLEXITY" missed="14" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="touchVertex" desc="(I)V" line="356"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="touchLayer" desc="(I)V" line="361"><counter type="INSTRUCTION" missed="7" covered="3"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onVertexLabelReCompute" desc="(II)V" line="366"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToLayerActive" desc="(II)V" line="374"><counter type="INSTRUCTION" missed="12" covered="31"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToLayerInactive" desc="(II)V" line="385"><counter type="INSTRUCTION" missed="12" covered="31"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFromLayerActive" desc="(II)V" line="396"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFromLayerInactive" desc="(II)V" line="403"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="activate" desc="(I)V" line="410"><counter type="INSTRUCTION" missed="12" covered="19"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deactivate" desc="(I)V" line="418"><counter type="INSTRUCTION" missed="12" covered="15"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="relabel" desc="(II)V" line="429"><counter type="INSTRUCTION" missed="15" covered="47"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyLayerGap" desc="(I)V" line="449"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcMaxPreflow" desc="()V" line="1246"><counter type="INSTRUCTION" missed="16" covered="108"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertPreflowToFlow" desc="()V" line="1470"><counter type="INSTRUCTION" missed="34" covered="461"/><counter type="BRANCH" missed="10" covered="88"/><counter type="LINE" missed="0" covered="109"/><counter type="COMPLEXITY" missed="6" covered="44"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxFlow" desc="()D" line="1648"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="()Lcom/jgalgo/alg/IVertexBiPartition;" line="1656"><counter type="INSTRUCTION" missed="33" covered="188"/><counter type="BRANCH" missed="8" covered="32"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="214"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="286" covered="1447"/><counter type="BRANCH" missed="75" covered="201"/><counter type="LINE" missed="17" covered="364"/><counter type="COMPLEXITY" missed="41" covered="115"/><counter type="METHOD" missed="1" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$ResidualGraph" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IndexGraph;[I[I)V" line="227"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isOriginalEdge" desc="(I)Z" line="235"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$ObjQueriesImpl" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addQuery" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuerySource" desc="(I)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueryTarget" desc="(I)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="43"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStatic$Builder" sourcefilename="LowestCommonAncestorStatic.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/LowestCommonAncestorStatic$Builder;" line="180"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/FlowCirculationPushRelabel" sourcefilename="FlowCirculationPushRelabel.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCirculation" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliquesBronKerbosch$1" sourcefilename="MaximalCliquesBronKerbosch.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximalCliquesBronKerbosch;Lcom/jgalgo/graph/IndexGraph;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(II)Z" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="80"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNextClique" desc="()V" line="88"><counter type="INSTRUCTION" missed="10" covered="171"/><counter type="BRANCH" missed="4" covered="24"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLastInsertedVertex" desc="(Lit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;)V" line="140"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="329"/><counter type="BRANCH" missed="6" covered="28"/><counter type="LINE" missed="0" covered="67"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOffline" sourcefilename="LowestCommonAncestorOffline.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/LowestCommonAncestorOffline;" line="273"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/LowestCommonAncestorOffline$Builder;" line="285"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/CyclesFinder" sourcefilename="CyclesFinder.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/CyclesFinder;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/CyclesFinder$Builder;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStaticAbstract" sourcefilename="LowestCommonAncestorStaticAbstract.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preProcessTree" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;)Lcom/jgalgo/alg/LowestCommonAncestorStatic$DataStructure;" line="30"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dsFromIndexDs" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/LowestCommonAncestorStatic$IDataStructure;)Lcom/jgalgo/alg/LowestCommonAncestorStatic$DataStructure;" line="80"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="51"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTrees$ResultImpl" sourcefilename="SteinerTrees.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntSet;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I)V" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="81"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom$2" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="205"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="224"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="229"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom$1" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="172"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="176"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$DischargePolicyImpl" sourcefilename="MaximumFlowPushRelabel.java"><method name="newInstance" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;Lcom/jgalgo/alg/MaximumFlowPushRelabel$DischargePolicy;)Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker$DischargePolicyImpl;" line="483"><counter type="INSTRUCTION" missed="16" covered="37"/><counter type="BRANCH" missed="5" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;)V" line="508"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="476"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="46"/><counter type="BRANCH" missed="5" covered="6"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImplBasedSupply" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="()V" line="895"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;II)V" line="902"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="908"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="914"><counter type="INSTRUCTION" missed="39" covered="230"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="7" covered="50"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostMaxFlow$5" desc="(ILcom/jgalgo/graph/IWeightFunction;I)D" line="1071"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMinCostMaxFlow$4" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;I)I" line="1068"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostMaxFlow$3" desc="(ILcom/jgalgo/graph/IWeightFunction;IDI)D" line="1054"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMinCostMaxFlow$2" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;III)I" line="1044"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinCostMaxFlow$1" desc="(IDII)D" line="1031"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMinCostMaxFlow$0" desc="(IIII)I" line="1022"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="288"/><counter type="BRANCH" missed="18" covered="30"/><counter type="LINE" missed="17" covered="65"/><counter type="COMPLEXITY" missed="16" covered="18"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ObjResultFromIndexResult" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;)V" line="315"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Ljava/lang/Object;Ljava/lang/Object;)D" line="323"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/alg/Path;" line="328"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="334"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/Path;" line="339"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsJohnson$NegCycleRes" sourcefilename="ShortestPathAllPairsJohnson.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/IPath;)V" line="212"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(II)D" line="219"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPath" desc="(II)Lcom/jgalgo/alg/IPath;" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="foundNegativeCycle" desc="()Z" line="229"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="234"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="14"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexPartitions$ObjPartitionFromIndexPartition" sourcefilename="VertexPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IVertexPartition;)V" line="409"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfBlocks" desc="()I" line="419"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexBlock" desc="(Ljava/lang/Object;)I" line="424"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockVertices" desc="(I)Ljava/util/Set;" line="429"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockEdges" desc="(I)Ljava/util/Set;" line="434"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="crossEdges" desc="(II)Ljava/util/Set;" line="439"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="()Lcom/jgalgo/graph/Graph;" line="444"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blocksGraph" desc="(ZZ)Lcom/jgalgo/graph/Graph;" line="449"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="462"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="402"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="137"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliquesUtils$AbstractImpl" sourcefilename="MaximalCliquesUtils.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterateMaximalCliques" desc="(Lcom/jgalgo/graph/Graph;)Ljava/util/Iterator;" line="36"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/PathImpl" sourcefilename="PathImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;IILit/unimi/dsi/fastutil/ints/IntList;)V" line="59"><counter type="INSTRUCTION" missed="10" covered="25"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="75"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeIter" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="80"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="90"><counter type="INSTRUCTION" missed="9" covered="58"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSimple" desc="()Z" line="115"><counter type="INSTRUCTION" missed="17" covered="106"/><counter type="BRANCH" missed="5" covered="15"/><counter type="LINE" missed="4" covered="25"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="247"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intPathFromIndexPath" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/IPath;)Lcom/jgalgo/alg/IPath;" line="251"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="objPathFromIndexPath" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IPath;)Lcom/jgalgo/alg/Path;" line="255"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pathFromIndexPath" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IPath;)Lcom/jgalgo/alg/Path;" line="260"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findPath" desc="(Lcom/jgalgo/graph/IndexGraph;II)Lcom/jgalgo/alg/IPath;" line="270"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPath" desc="(Lcom/jgalgo/graph/IndexGraph;IILit/unimi/dsi/fastutil/ints/IntIterator;)Z" line="297"><counter type="INSTRUCTION" missed="5" covered="97"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterFromIndexIter" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Iterator;)Ljava/util/Iterator;" line="474"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="52" covered="454"/><counter type="BRANCH" missed="17" covered="73"/><counter type="LINE" missed="7" covered="106"/><counter type="COMPLEXITY" missed="14" covered="46"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$4" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree;)V" line="2541"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="2545"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$3" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree;)V" line="2495"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="2499"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/KShortestPathsSTs$AbstractImpl" sourcefilename="KShortestPathsSTs.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeKShortestPaths" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="22" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="60"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$2" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree;)V" line="2470"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="2474"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeUtils" sourcefilename="MinimumSpanningTreeUtils.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/MinimumSpanningTree$IResult;)Lcom/jgalgo/alg/MinimumSpanningTree$Result;" line="146"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree;)V" line="2445"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="2449"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils$AbstractImpl" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathSingleSource$Result;" line="43"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$5" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree;)V" line="2587"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="2591"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/PathImpl$ObjIterFromIndexIter" sourcefilename="PathImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Iterator;)V" line="456"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="463"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/Path;" line="468"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/PathImpl$IntIterFromIndexIter" sourcefilename="PathImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/Iterator;)V" line="435"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="442"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/IPath;" line="447"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCovers$ResultImpl$1" sourcefilename="EdgeCovers.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/EdgeCovers$ResultImpl;[I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="74"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="7"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SimplePathsFinders" sourcefilename="SimplePathsFinders.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/CoresAlgo$IResult" sourcefilename="CoresAlgo.java"><method name="vertexCoreNum" desc="(Ljava/lang/Integer;)I" line="194"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutST" sourcefilename="MinimumCutST.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/MinimumCutST;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MinimumCutST$Builder;" line="120"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFromMaximumFlow" desc="(Lcom/jgalgo/alg/MaximumFlow;)Lcom/jgalgo/alg/MinimumCutST;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowDinicDynamicTrees" sourcefilename="MaximumFlowDinicDynamicTrees.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)D" line="58"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)D" line="63"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$NetImplEdgeIWeightsInt" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightsInt;Lcom/jgalgo/graph/IWeightsInt;)V" line="178"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addWeightsAndCreateNet" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/alg/IFlowNetworkInt;" line="184"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createExternalWeightsAndCreateNet" desc="(Lcom/jgalgo/graph/IntGraph;)Lcom/jgalgo/alg/IFlowNetworkInt;" line="190"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacityInt" desc="(I)I" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="202"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFlowInt" desc="(I)I" line="209"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(II)V" line="214"><counter type="INSTRUCTION" missed="7" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="13"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumMeanCycleDasdanGupta" sourcefilename="MinimumMeanCycleDasdanGupta.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumMeanCycle" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IPath;" line="61"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumMeanCycle0" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IPath;" line="93"><counter type="INSTRUCTION" missed="5" covered="476"/><counter type="BRANCH" missed="2" covered="50"/><counter type="LINE" missed="1" covered="88"/><counter type="COMPLEXITY" missed="2" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="567"/><counter type="BRANCH" missed="3" covered="63"/><counter type="LINE" missed="1" covered="109"/><counter type="COMPLEXITY" missed="3" covered="33"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$AbstractMaximumMatchingImpl" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="()V" line="274"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="278"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="283"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgo$IResult" sourcefilename="BiConnectedComponentsAlgo.java"><method name="getVertexBiCcs" desc="(Ljava/lang/Integer;)Lit/unimi/dsi/fastutil/ints/IntSet;" line="172"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCutVertex" desc="(Ljava/lang/Integer;)Z" line="197"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStatic$DataStructure" sourcefilename="LowestCommonAncestorStatic.java"/><class name="com/jgalgo/alg/MinimumCostFlowCostScaling$Worker" sourcefilename="MinimumCostFlowCostScaling.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;Lcom/jgalgo/graph/IWeightFunctionInt;Lcom/jgalgo/graph/IWeightFunctionInt;)V" line="103"><counter type="INSTRUCTION" missed="0" covered="213"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="solve" desc="()V" line="165"><counter type="INSTRUCTION" missed="25" covered="98"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="solveWithPartialAugment" desc="()V" line="191"><counter type="INSTRUCTION" missed="8" covered="190"/><counter type="BRANCH" missed="2" covered="30"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dischargePartialAugment" desc="(I)V" line="256"><counter type="INSTRUCTION" missed="93" covered="221"/><counter type="BRANCH" missed="22" covered="20"/><counter type="LINE" missed="0" covered="54"/><counter type="COMPLEXITY" missed="11" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushOnPath" desc="(I)V" line="342"><counter type="INSTRUCTION" missed="29" covered="99"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="globalUpdate" desc="()V" line="366"><counter type="INSTRUCTION" missed="0" covered="287"/><counter type="BRANCH" missed="1" covered="33"/><counter type="LINE" missed="0" covered="60"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="potentialRefinement" desc="()Z" line="457"><counter type="INSTRUCTION" missed="0" covered="297"/><counter type="BRANCH" missed="1" covered="35"/><counter type="LINE" missed="0" covered="61"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTopologicalOrder" desc="()Z" line="546"><counter type="INSTRUCTION" missed="26" covered="230"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResidual" desc="(I)Z" line="627"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="181" covered="1645"/><counter type="BRANCH" missed="42" covered="166"/><counter type="LINE" missed="3" covered="343"/><counter type="COMPLEXITY" missed="23" covered="91"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$1" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightFunctionInt;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(I)I" line="148"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="153"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="158"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(II)V" line="163"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$2" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IWeightFunction;)V" line="170"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="174"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="179"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="184"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(ID)V" line="189"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCoverBarYehuda" sourcefilename="VertexCoverBarYehuda.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumVertexCover" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/VertexCover$IResult;" line="37"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowCirculation" sourcefilename="FlowCirculation.java"/><class name="com/jgalgo/alg/TopologicalOrderAlgo$IResult" sourcefilename="TopologicalOrderAlgo.java"><method name="vertexOrderIndex" desc="(Ljava/lang/Integer;)I" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orderComparator" desc="()Lit/unimi/dsi/fastutil/ints/IntComparator;" line="120"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$orderComparator$0" desc="(II)I" line="120"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VoronoiAlgos$AbstractImpl" sourcefilename="VoronoiAlgos.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeVoronoiCells" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/VoronoiAlgo$Result;" line="41"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSTBidirectionalDijkstra$Info" sourcefilename="ShortestPathSTBidirectionalDijkstra.java"><method name="&lt;init&gt;" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="markVisited" desc="()V" line="165"><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVisited" desc="()Z" line="170"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="174"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$ObjResultFromIndexResult" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/TreePathMaxima$IResult;)V" line="237"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHeaviestEdge" desc="(I)Ljava/lang/Object;" line="244"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="250"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsJohnson$SuccessRes" sourcefilename="ShortestPathAllPairsJohnson.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;)V" line="244"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="250"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTrees$AbstractImpl" sourcefilename="SteinerTrees.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSteinerTree" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/util/Collection;)Lcom/jgalgo/alg/SteinerTreeAlgo$Result;" line="45"><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$ObjBiPartitionFromIndexBiPartition" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IVertexBiPartition;)V" line="268"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexPartition" desc="()Lcom/jgalgo/alg/IVertexBiPartition;" line="272"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLeft" desc="(Ljava/lang/Object;)Z" line="277"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="5"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowAbstract$WithoutResidualGraph$2" sourcefilename="MaximumFlowAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowAbstract$WithoutResidualGraph;Ljava/lang/Object;ILcom/jgalgo/alg/IFlowNetwork;)V" line="293"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacity" desc="(I)D" line="299"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(ID)V" line="305"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="310"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(ID)V" line="316"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="62"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairs$Result" sourcefilename="ShortestPathAllPairs.java"/><class name="com/jgalgo/alg/PageRank" sourcefilename="PageRank.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeScores" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/VertexScoring;" line="36"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeScores" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IVertexScoring;" line="50"><counter type="INSTRUCTION" missed="87" covered="164"/><counter type="BRANCH" missed="13" covered="15"/><counter type="LINE" missed="14" covered="28"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeScores$0" desc="(I[I[D)D" line="63"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="96" covered="231"/><counter type="BRANCH" missed="14" covered="20"/><counter type="LINE" missed="16" covered="42"/><counter type="COMPLEXITY" missed="9" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowAbstract$WithoutResidualGraph$1" sourcefilename="MaximumFlowAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowAbstract$WithoutResidualGraph;Ljava/lang/Object;ILcom/jgalgo/alg/IFlowNetworkInt;)V" line="260"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCapacityInt" desc="(I)I" line="266"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(II)V" line="272"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="277"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(II)V" line="283"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="62"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgo" sourcefilename="CoresAlgo.java"><method name="computeCores" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/CoresAlgo$Result;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/alg/CoresAlgo;" line="217"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/CoresAlgo$Builder;" line="229"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSTBidirectionalDijkstra" sourcefilename="ShortestPathSTBidirectionalDijkstra.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPath" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;II)Lcom/jgalgo/alg/IPath;" line="35"><counter type="INSTRUCTION" missed="10" covered="439"/><counter type="BRANCH" missed="2" covered="54"/><counter type="LINE" missed="2" covered="94"/><counter type="COMPLEXITY" missed="2" covered="27"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeShortestPath$1" desc="(I)Lcom/jgalgo/alg/ShortestPathSTBidirectionalDijkstra$Info;" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeShortestPath$0" desc="(I)Lcom/jgalgo/alg/ShortestPathSTBidirectionalDijkstra$Info;" line="79"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="450"/><counter type="BRANCH" missed="2" covered="54"/><counter type="LINE" missed="2" covered="95"/><counter type="COMPLEXITY" missed="2" covered="30"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VoronoiAlgos" sourcefilename="VoronoiAlgos.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/VoronoiAlgo$IResult;)Lcom/jgalgo/alg/VoronoiAlgo$Result;" line="196"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$AbstractWorker" sourcefilename="MaximumFlowPushRelabelDynamicTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="89"><counter type="INSTRUCTION" missed="0" covered="115"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recomputeLabels" desc="()V" line="126"><counter type="INSTRUCTION" missed="14" covered="112"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxFlow" desc="()D" line="161"><counter type="INSTRUCTION" missed="45" covered="177"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="6" covered="16"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cut" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$AbstractWorker$Vertex;)V" line="241"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cutAllChildren" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$AbstractWorker$Vertex;)V" line="252"><counter type="INSTRUCTION" missed="18" covered="57"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cleanAllDTEdges" desc="()V" line="274"><counter type="INSTRUCTION" missed="11" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexData" desc="(I)Lcom/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$AbstractWorker$Vertex;" line="298"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="559"/><counter type="BRANCH" missed="22" covered="58"/><counter type="LINE" missed="0" covered="125"/><counter type="COMPLEXITY" missed="11" covered="37"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBipartiteHungarianMethod$Worker" sourcefilename="MatchingWeightedBipartiteHungarianMethod.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBipartiteHungarianMethod;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightsBool;Lcom/jgalgo/graph/IWeightFunction;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxMatching" desc="(Z)Lcom/jgalgo/alg/IMatching;" line="132"><counter type="INSTRUCTION" missed="5" covered="311"/><counter type="BRANCH" missed="1" covered="41"/><counter type="LINE" missed="2" covered="58"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextTightEdgeAdd" desc="(II)V" line="230"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dualVal" desc="(I)D" line="239"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSlack" desc="(I)D" line="243"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexAddedToTree" desc="(I)V" line="247"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(II)I" line="123"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="488"/><counter type="BRANCH" missed="1" covered="53"/><counter type="LINE" missed="2" covered="84"/><counter type="COMPLEXITY" missed="1" covered="33"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$IndexNetFromObjNet" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/IndexIdMap;)V" line="319"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idNet" desc="()Lcom/jgalgo/alg/FlowNetwork;" line="327"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacity" desc="(I)D" line="332"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(ID)V" line="337"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="342"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(ID)V" line="347"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/DfsIterImpl$ObjDfsFromIndexDfs" sourcefilename="DfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/Dfs$IntIter;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="165"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgePath" desc="()Ljava/util/List;" line="170"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumDirectedSpanningTree$Builder" sourcefilename="MinimumDirectedSpanningTree.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumDirectedSpanningTree$Builder;" line="113"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamicGabowSimple$CharacteristicAncestors" sourcefilename="LowestCommonAncestorDynamicGabowSimple.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Vertex;)V" line="383"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$IndexQueriesFromObjQueries" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/LowestCommonAncestorOffline$Queries;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addQuery" desc="(II)V" line="135"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuerySourceInt" desc="(I)I" line="140"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueryTargetInt" desc="(I)I" line="145"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="150"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="155"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="32"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/WeightsDouble;Lcom/jgalgo/graph/WeightsDouble;)Lcom/jgalgo/alg/FlowNetwork;" line="39"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/IWeightsDouble;Lcom/jgalgo/graph/IWeightsDouble;)Lcom/jgalgo/alg/IFlowNetwork;" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexNetFromNet" desc="(Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/IndexIdMap;)Lcom/jgalgo/alg/IFlowNetwork;" line="502"><counter type="INSTRUCTION" missed="54" covered="96"/><counter type="BRANCH" missed="11" covered="7"/><counter type="LINE" missed="12" covered="20"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hugeCapacity" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)D" line="554"><counter type="INSTRUCTION" missed="74" covered="11"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="9" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hugeCapacity" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)I" line="569"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hugeCapacityLong" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)J" line="577"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexMaxSupply" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;I)D" line="589"><counter type="INSTRUCTION" missed="7" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexMaxSupply" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;I)I" line="599"><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexMaxDemand" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;I)D" line="609"><counter type="INSTRUCTION" missed="7" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexMaxDemand" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;I)I" line="619"><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="182" covered="323"/><counter type="BRANCH" missed="27" covered="31"/><counter type="LINE" missed="32" covered="56"/><counter type="COMPLEXITY" missed="20" covered="20"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$WorkerInt$Vertex" sourcefilename="MaximumFlowPushRelabelDynamicTrees.java"><method name="&lt;init&gt;" desc="(ILcom/jgalgo/internal/ds/DynamicTree$Vertex;)V" line="568"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasExcess" desc="()Z" line="576"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/IVertexScoring" sourcefilename="IVertexScoring.java"><method name="vertexScore" desc="(Ljava/lang/Integer;)D" line="25"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SimplePathsFinder$Builder" sourcefilename="SimplePathsFinder.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/SimplePathsFinder$Builder;" line="106"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceGoldberg$Result" sourcefilename="ShortestPathSingleSourceGoldberg.java"><method name="&lt;init&gt;" desc="(I[ILcom/jgalgo/alg/ShortestPathSingleSource$IResult;Lcom/jgalgo/alg/IPath;)V" line="321"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofSuccess" desc="(I[ILcom/jgalgo/alg/ShortestPathSingleSource$IResult;)Lcom/jgalgo/alg/ShortestPathSingleSourceGoldberg$Result;" line="329"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofNegCycle" desc="(ILcom/jgalgo/alg/IPath;)Lcom/jgalgo/alg/ShortestPathSingleSourceGoldberg$Result;" line="333"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(I)D" line="338"><counter type="INSTRUCTION" missed="5" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(I)Lcom/jgalgo/alg/IPath;" line="345"><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="352"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="357"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="364"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="76"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees" sourcefilename="MaximumFlowPushRelabelDynamicTrees.java"><method name="&lt;init&gt;" desc="()V" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)D" line="66"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)D" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSTs$AbstractImpl" sourcefilename="ShortestPathSTs.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPath" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/alg/Path;" line="33"><counter type="INSTRUCTION" missed="19" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingAlgo$Builder" sourcefilename="MatchingAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MatchingAlgo$Builder;" line="284"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vToResIdx" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;)[I" line="87"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;)Lcom/jgalgo/alg/ShortestPathAllPairs$Result;" line="380"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="71"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathHeuristicST$Builder" sourcefilename="ShortestPathHeuristicST.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathHeuristicST$Builder;" line="166"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990" sourcefilename="MatchingWeightedGabow1990.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newWorker" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;Lcom/jgalgo/internal/util/DebugPrinter;)Lcom/jgalgo/alg/MatchingWeightedGabow1990$Worker;" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TSPMetricUtils$AbstractImpl" sourcefilename="TSPMetricUtils.java"><method name="&lt;init&gt;" desc="()V" line="100"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestTour" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/Path;" line="105"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Worker$3$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Worker$3;)V" line="1759"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="1765"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;" line="1774"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaxima$Queries" sourcefilename="TreePathMaxima.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/TreePathMaxima$Queries;" line="98"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saturateNegativeCostSelfEdges" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;)V" line="1080"><counter type="INSTRUCTION" missed="63" covered="79"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="9" covered="15"/><counter type="COMPLEXITY" missed="9" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="79"/><counter type="BRANCH" missed="15" covered="17"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Trees" sourcefilename="Trees.java"><method name="isTree" desc="(Lcom/jgalgo/graph/Graph;)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTree" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;)Z" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForest" desc="(Lcom/jgalgo/graph/Graph;)Z" line="99"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForest" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Iterator;)Z" line="120"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForest" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Iterator;Z)Z" line="125"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isForest" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntIterator;Z)Z" line="138"><counter type="INSTRUCTION" missed="4" covered="100"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="2" covered="32"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="159"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="2" covered="44"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgo$Result" sourcefilename="CoresAlgo.java"/><class name="com/jgalgo/alg/MatchingWeightedGabow1990Simpler$Worker" sourcefilename="MatchingWeightedGabow1990Simpler.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;Lcom/jgalgo/internal/util/DebugPrinter;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeNextDelta3" desc="()D" line="72"><counter type="INSTRUCTION" missed="12" covered="47"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractNextBlossomEvent" desc="()Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;" line="87"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchEnd" desc="()V" line="92"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="growStep" desc="()V" line="98"><counter type="INSTRUCTION" missed="37" covered="166"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blossomStep" desc="(I)V" line="136"><counter type="INSTRUCTION" missed="39" covered="292"/><counter type="BRANCH" missed="11" covered="27"/><counter type="LINE" missed="1" covered="59"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeEven" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="217"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBlossomEvent" desc="(ID)V" line="236"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;)I" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="88" covered="599"/><counter type="BRANCH" missed="23" covered="39"/><counter type="LINE" missed="1" covered="123"/><counter type="COMPLEXITY" missed="12" covered="29"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SimplePathsFinderSedgewick$1" sourcefilename="SimplePathsFinderSedgewick.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/SimplePathsFinderSedgewick;Lcom/jgalgo/graph/IndexGraph;II)V" line="44"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="(I)V" line="59"><counter type="INSTRUCTION" missed="8" covered="80"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/IPath;" line="90"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="180"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumMeanCycleHoward" sourcefilename="MinimumMeanCycleHoward.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumMeanCycle" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IPath;" line="65"><counter type="INSTRUCTION" missed="33" covered="426"/><counter type="BRANCH" missed="7" covered="57"/><counter type="LINE" missed="4" covered="110"/><counter type="COMPLEXITY" missed="5" covered="28"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMinimumMeanCycle$0" desc="([III)Z" line="106"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="442"/><counter type="BRANCH" missed="7" covered="59"/><counter type="LINE" missed="4" covered="113"/><counter type="COMPLEXITY" missed="5" covered="32"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceGoldberg" sourcefilename="ShortestPathSingleSourceGoldberg.java"><method name="&lt;init&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setPositiveSsspAlgo" desc="(Lcom/jgalgo/alg/ShortestPathSingleSource;)V" line="79"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="90"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPaths0" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="100"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcPotential" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;I)Lit/unimi/dsi/fastutil/Pair;" line="125"><counter type="INSTRUCTION" missed="0" covered="573"/><counter type="BRANCH" missed="0" covered="66"/><counter type="LINE" missed="0" covered="108"/><counter type="COMPLEXITY" missed="0" covered="34"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcWeightWithPotential" desc="(Lcom/jgalgo/graph/IndexGraph;ILcom/jgalgo/graph/IWeightFunctionInt;[II)I" line="299"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDiagnostic" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="371"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="731"/><counter type="BRANCH" missed="1" covered="81"/><counter type="LINE" missed="4" covered="143"/><counter type="COMPLEXITY" missed="3" covered="45"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="partitionFromIndexPartition" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IVertexBiPartition;)Lcom/jgalgo/alg/VertexBiPartition;" line="284"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/WeaklyConnectedComponentsAlgoImpl" sourcefilename="WeaklyConnectedComponentsAlgoImpl.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findWeaklyConnectedComponents" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IVertexPartition;" line="29"><counter type="INSTRUCTION" missed="18" covered="114"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeaklyConnected" desc="(Lcom/jgalgo/graph/IndexGraph;)Z" line="76"><counter type="INSTRUCTION" missed="27" covered="66"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="184"/><counter type="BRANCH" missed="9" covered="25"/><counter type="LINE" missed="9" covered="55"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximalCliquesBronKerboschPivot$1" sourcefilename="MaximalCliquesBronKerboschPivot.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximalCliquesBronKerboschPivot;Lcom/jgalgo/graph/IndexGraph;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(II)Z" line="78"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="88"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNextClique" desc="()V" line="96"><counter type="INSTRUCTION" missed="19" covered="187"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="4" covered="38"/><counter type="COMPLEXITY" missed="4" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeLastInsertedVertex" desc="(Lit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;)V" line="152"><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterPotential" desc="(Lit/unimi/dsi/fastutil/ints/IntArrayList;Lit/unimi/dsi/fastutil/ints/IntList;)Lit/unimi/dsi/fastutil/ints/IntList;" line="161"><counter type="INSTRUCTION" missed="27" covered="61"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="choosePivot" desc="(Lit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;)I" line="186"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$filterPotential$1" desc="(II)Z" line="169"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$filterPotential$0" desc="(II)Z" line="167"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="74" covered="494"/><counter type="BRANCH" missed="16" covered="42"/><counter type="LINE" missed="5" covered="103"/><counter type="COMPLEXITY" missed="11" covered="29"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAStar" sourcefilename="ShortestPathAStar.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeShortestPath" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lcom/jgalgo/alg/Path;" line="81"><counter type="INSTRUCTION" missed="25" covered="40"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPath" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/graph/IWeightFunction;IILjava/util/function/IntToDoubleFunction;)Lcom/jgalgo/alg/IPath;" line="105"><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeShortestPath" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;IILjava/util/function/IntToDoubleFunction;)Lcom/jgalgo/alg/IPath;" line="125"><counter type="INSTRUCTION" missed="12" covered="140"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computePath" desc="(Lcom/jgalgo/graph/IndexGraph;IILit/unimi/dsi/fastutil/ints/Int2ObjectMap;)Lcom/jgalgo/alg/IPath;" line="171"><counter type="INSTRUCTION" missed="14" covered="66"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeShortestPath$4" desc="(I)Lcom/jgalgo/alg/ShortestPathAStar$Info;" line="147"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeShortestPath$3" desc="(Ljava/util/function/IntToDoubleFunction;Lcom/jgalgo/graph/IndexIntIdMap;I)D" line="116"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeShortestPath$2" desc="(Ljava/util/function/IntToDoubleFunction;I)D" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeShortestPath$1" desc="(Ljava/util/function/ToDoubleFunction;Lcom/jgalgo/graph/IndexIdMap;I)D" line="96"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeShortestPath$0" desc="(Ljava/util/function/ToDoubleFunction;I)D" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="126" covered="267"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="20" covered="67"/><counter type="COMPLEXITY" missed="10" covered="16"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeBoruvka$RunBoruvkaResult" sourcefilename="MinimumSpanningTreeBoruvka.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;[I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlows$AbstractImpl" sourcefilename="MinimumCostFlows.java"><method name="&lt;init&gt;" desc="()V" line="198"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;II)V" line="203"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;)V" line="210"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hugeCost" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)D" line="285"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hugeCost" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;)I" line="295"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hugeCostLong" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;)J" line="303"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSupply" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/graph/IWeightFunction;" line="311"><counter type="INSTRUCTION" missed="0" covered="112"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSupply" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;Lcom/jgalgo/graph/IWeightFunctionInt;Lcom/jgalgo/graph/IWeightFunctionInt;)Lcom/jgalgo/graph/IWeightFunctionInt;" line="341"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="342"/><counter type="BRANCH" missed="7" covered="41"/><counter type="LINE" missed="1" covered="70"/><counter type="COMPLEXITY" missed="7" covered="25"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutGlobalAbstract" sourcefilename="MinimumCutGlobalAbstract.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/VertexBiPartition;" line="31"><counter type="INSTRUCTION" missed="7" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaxima$Result" sourcefilename="TreePathMaxima.java"/><class name="com/jgalgo/alg/DfsIterImpl" sourcefilename="DfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I)V" line="43"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="73"><counter type="INSTRUCTION" missed="22" covered="109"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgePath" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="177"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="44"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$WorkerInt" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetworkInt;IILcom/jgalgo/alg/MaximumFlowPushRelabel$ActiveOrderPolicy;Lcom/jgalgo/alg/MaximumFlowPushRelabel$DischargePolicy;)V" line="1963"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAsMuchFromSource" desc="()V" line="1974"><counter type="INSTRUCTION" missed="11" covered="151"/><counter type="BRANCH" missed="2" covered="32"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="1" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="push" desc="(II)V" line="2008"><counter type="INSTRUCTION" missed="9" covered="36"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateCycleDirected" desc="(I)V" line="2018"><counter type="INSTRUCTION" missed="29" covered="66"/><counter type="BRANCH" missed="8" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateCycleUndirected" desc="(II)V" line="2045"><counter type="INSTRUCTION" missed="64" covered="123"/><counter type="BRANCH" missed="16" covered="10"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateExcessWithTopologicalOrder" desc="(II[I)V" line="2095"><counter type="INSTRUCTION" missed="10" covered="119"/><counter type="BRANCH" missed="2" covered="22"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="()D" line="2130"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasExcess" desc="(I)Z" line="2135"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResidualCapacity" desc="(I)I" line="2139"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flow" desc="(I)I" line="2143"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResidual" desc="(I)Z" line="2148"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTwinResidualUndirected" desc="(I)Z" line="2153"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTwinResidualCapacity" desc="(I)I" line="2157"><counter type="INSTRUCTION" missed="7" covered="13"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNegativeFlow" desc="(I)Z" line="2163"><counter type="INSTRUCTION" missed="7" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasFlow" desc="(I)Z" line="2169"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1955"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="137" covered="605"/><counter type="BRANCH" missed="34" covered="78"/><counter type="LINE" missed="0" covered="129"/><counter type="COMPLEXITY" missed="17" covered="55"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ChinesePostman$Builder" sourcefilename="ChinesePostman.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ChinesePostman$Builder;" line="113"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$IntQueriesImpl" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="()V" line="102"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addQuery" desc="(II)V" line="108"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuerySourceInt" desc="(I)I" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueryTargetInt" desc="(I)I" line="118"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="123"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="128"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumMeanCycle" sourcefilename="MinimumMeanCycle.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/MinimumMeanCycle;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MinimumMeanCycle$Builder;" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$IndexNetFromObjNetInt" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/FlowNetworkInt;Lcom/jgalgo/graph/IndexIdMap;)V" line="391"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idNet" desc="()Lcom/jgalgo/alg/FlowNetworkInt;" line="396"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacityInt" desc="(I)I" line="401"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(II)V" line="406"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowInt" desc="(I)I" line="411"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(II)V" line="416"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacity" desc="(I)D" line="422"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(ID)V" line="428"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="434"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(ID)V" line="440"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/Matchings$AbstractCardinalityMatchingImpl" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="()V" line="238"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="244"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumWeightedMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="250"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMaximumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="256"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumWeightedPerfectMatching" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IMatching;" line="262"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="LINE" missed="6" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCoverUtils$IntResultFromIndexResult" sourcefilename="VertexCoverUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/VertexCover$IResult;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="132"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInCover" desc="(I)Z" line="137"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="142"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSource$Builder" sourcefilename="ShortestPathSingleSource.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="327"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VoronoiAlgos$ObjResultFromIndexResult" sourcefilename="VoronoiAlgos.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/VoronoiAlgo$IResult;)V" line="127"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexRes" desc="()Lcom/jgalgo/alg/VoronoiAlgo$IResult;" line="131"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Ljava/lang/Object;)D" line="136"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/Object;)Lcom/jgalgo/alg/Path;" line="141"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockSite" desc="(I)Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSite" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="153"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Blossom$BitmapBuilder$Field" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(II)V" line="1939"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ResultImpl$AllVertices" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;)V" line="117"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeTo" desc="(II)I" line="126"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdgeTo" desc="(III)V" line="131"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNegCycle" desc="(Lcom/jgalgo/alg/IPath;)V" line="135"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="141"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="146"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="54"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCovers$IntResultFromIndexResult" sourcefilename="EdgeCovers.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/EdgeCover$IResult;)V" line="99"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInCover" desc="(I)Z" line="111"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgoAbstract" sourcefilename="BiConnectedComponentsAlgoAbstract.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBiConnectedComponents" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/BiConnectedComponentsAlgo$Result;" line="33"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/BiConnectedComponentsAlgo$IResult;)Lcom/jgalgo/alg/BiConnectedComponentsAlgo$Result;" line="142"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990$Worker" sourcefilename="MatchingWeightedGabow1990.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;Lcom/jgalgo/internal/util/DebugPrinter;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initDataStructuresSearchBegin" desc="()V" line="82"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initUnmatchedEvenBlossom" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeNextDelta3" desc="()D" line="103"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractNextBlossomEvent" desc="()Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchEnd" desc="()V" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="growStep" desc="()V" line="119"><counter type="INSTRUCTION" missed="106" covered="209"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blossomStep" desc="(I)V" line="171"><counter type="INSTRUCTION" missed="39" covered="368"/><counter type="BRANCH" missed="11" covered="33"/><counter type="LINE" missed="1" covered="73"/><counter type="COMPLEXITY" missed="6" covered="17"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeEven" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="268"><counter type="INSTRUCTION" missed="6" covered="129"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computePath" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;I[I)I" line="317"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computePath" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;I[IIZ)I" line="321"><counter type="INSTRUCTION" missed="6" covered="81"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addBlossomEvent" desc="(ID)V" line="359"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="smfAddLeaf" desc="(ILcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="364"><counter type="INSTRUCTION" missed="9" covered="19"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="smfParent" desc="(Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;)Lcom/jgalgo/internal/ds/SubtreeMergeFindMin$Node;" line="371"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;)I" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="167" covered="955"/><counter type="BRANCH" missed="40" covered="70"/><counter type="LINE" missed="3" covered="199"/><counter type="COMPLEXITY" missed="22" covered="49"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BfsIterImpl" sourcefilename="BfsIterImpl.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/LowestCommonAncestorStaticRMQ$DS" sourcefilename="LowestCommonAncestorStaticRMQ.java"><method name="&lt;init&gt;" desc="(I[I[ILcom/jgalgo/internal/ds/RMQStatic$DataStructure;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLca" desc="(II)I" line="120"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathST$1" sourcefilename="ShortestPathST.java"><method name="&lt;init&gt;" desc="()V" line="87"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeShortestPath" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/alg/Path;" line="93"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgoHopcroftTarjan" sourcefilename="BiConnectedComponentsAlgoHopcroftTarjan.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBiConnectedComponents" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/BiConnectedComponentsAlgo$IResult;" line="53"><counter type="INSTRUCTION" missed="38" covered="245"/><counter type="BRANCH" missed="8" covered="26"/><counter type="LINE" missed="5" covered="65"/><counter type="COMPLEXITY" missed="5" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findBiConnectedComponents$0" desc="(Lcom/jgalgo/alg/BiConnectedComponentsAlgoHopcroftTarjan$1;Lcom/jgalgo/graph/IndexGraph;[I)[I" line="70"><counter type="INSTRUCTION" missed="15" covered="191"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="53" covered="440"/><counter type="BRANCH" missed="12" covered="44"/><counter type="LINE" missed="5" covered="88"/><counter type="COMPLEXITY" missed="7" covered="25"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSource$IResult" sourcefilename="ShortestPathSingleSource.java"><method name="distance" desc="(Ljava/lang/Integer;)D" line="184"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/Integer;)Lcom/jgalgo/alg/IPath;" line="201"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BiConnectedComponentsAlgoHopcroftTarjan$Res" sourcefilename="BiConnectedComponentsAlgoHopcroftTarjan.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Ljava/util/List;)V" line="197"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexBiCcs" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="212"><counter type="INSTRUCTION" missed="0" covered="168"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNumberOfBiCcs" desc="()I" line="247"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBiCcVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="252"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBiCcEdges" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="257"><counter type="INSTRUCTION" missed="54" covered="392"/><counter type="BRANCH" missed="15" covered="53"/><counter type="LINE" missed="3" covered="82"/><counter type="COMPLEXITY" missed="10" covered="25"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="379"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isCutVertex" desc="(I)Z" line="391"><counter type="INSTRUCTION" missed="6" covered="42"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCutVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="405"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlockGraph" desc="()Lcom/jgalgo/graph/IntGraph;" line="427"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$getBiCcEdges$1" desc="([II)Z" line="324"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$getBiCcEdges$0" desc="(I)Z" line="323"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="186"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="116" covered="801"/><counter type="BRANCH" missed="26" covered="104"/><counter type="LINE" missed="11" covered="154"/><counter type="COMPLEXITY" missed="20" covered="57"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;Lcom/jgalgo/internal/util/DebugPrinter;)V" line="458"><counter type="INSTRUCTION" missed="0" covered="172"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initDataStructuresSearchBegin" desc="()V" line="505"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchEnd" desc="()V" line="513"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initUnmatchedEvenBlossom" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="519"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaxMatching" desc="(Z)Lcom/jgalgo/alg/IMatching;" line="537"><counter type="INSTRUCTION" missed="44" covered="410"/><counter type="BRANCH" missed="11" covered="47"/><counter type="LINE" missed="2" covered="79"/><counter type="COMPLEXITY" missed="7" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expandStep" desc="()V" line="689"><counter type="INSTRUCTION" missed="60" covered="277"/><counter type="BRANCH" missed="18" covered="18"/><counter type="LINE" missed="0" covered="68"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="augmentStep" desc="(I)V" line="781"><counter type="INSTRUCTION" missed="34" covered="166"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="augmentPath" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;I)V" line="819"><counter type="INSTRUCTION" missed="107" covered="126"/><counter type="BRANCH" missed="22" covered="6"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEven" desc="(I)Z" line="868"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMatched" desc="(I)Z" line="872"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInTree" desc="(I)Z" line="876"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isInTree" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)Z" line="880"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topBlossom" desc="(I)Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="884"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topBlossom" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="888"><counter type="INSTRUCTION" missed="7" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allBlossoms" desc="()Ljava/lang/Iterable;" line="893"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topBlossoms" desc="()Ljava/lang/Iterable;" line="924"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dualVal" desc="(I)D" line="969"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dualVal" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)D" line="984"><counter type="INSTRUCTION" missed="7" covered="33"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="growEventsKey" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;)D" line="992"><counter type="INSTRUCTION" missed="8" covered="16"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertGrowEventsFromVertex" desc="(I)V" line="998"><counter type="INSTRUCTION" missed="10" covered="98"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insertBlossomEventsFromVertex" desc="(I)V" line="1023"><counter type="INSTRUCTION" missed="16" covered="65"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectSubBlossoms" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;IZ)V" line="1045"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lcaInSearchTree" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="1064"><counter type="INSTRUCTION" missed="2" covered="68"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$topBlossoms$10" desc="()Ljava/util/Iterator;" line="924"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allBlossoms$9" desc="()Ljava/util/Iterator;" line="893"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$expandStep$8" desc="(ZLcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="723"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$expandStep$7" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;ZLcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="719"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeMaxMatching$6" desc="()V" line="610"><counter type="INSTRUCTION" missed="86" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMaxMatching$5" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)Ljava/lang/String;" line="618"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMaxMatching$4" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)Z" line="617"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMaxMatching$3" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)Ljava/lang/String;" line="610"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$computeMaxMatching$2" desc="()V" line="585"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$new$1" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;)I" line="495"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lcom/jgalgo/graph/IWeightFunction;I)D" line="469"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="372"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="450" covered="1724"/><counter type="BRANCH" missed="86" covered="150"/><counter type="LINE" missed="21" covered="356"/><counter type="COMPLEXITY" missed="52" covered="101"/><counter type="METHOD" missed="6" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Worker" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)V" line="144"><counter type="INSTRUCTION" missed="5" covered="118"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="solve" desc="()Lcom/jgalgo/alg/IMatching;" line="195"><counter type="INSTRUCTION" missed="97" covered="371"/><counter type="BRANCH" missed="24" covered="60"/><counter type="LINE" missed="4" covered="90"/><counter type="COMPLEXITY" missed="13" covered="30"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initGreedy" desc="()V" line="334"><counter type="INSTRUCTION" missed="63" covered="418"/><counter type="BRANCH" missed="18" covered="46"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="10" covered="23"/><counter type="METHOD" missed="0" covered="1"/></method><method name="grow" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)Z" line="442"><counter type="INSTRUCTION" missed="42" covered="64"/><counter type="BRANCH" missed="14" covered="10"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addGrowBlossomsToTree" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="482"><counter type="INSTRUCTION" missed="8" covered="23"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addGrowBlossomsToTree" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="494"><counter type="INSTRUCTION" missed="27" covered="40"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="grow0" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)Z" line="521"><counter type="INSTRUCTION" missed="72" covered="372"/><counter type="BRANCH" missed="30" covered="68"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="18" covered="32"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addTreeChild" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="654"><counter type="INSTRUCTION" missed="14" covered="34"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shrink" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)Z" line="682"><counter type="INSTRUCTION" missed="191" covered="592"/><counter type="BRANCH" missed="66" covered="76"/><counter type="LINE" missed="0" covered="158"/><counter type="COMPLEXITY" missed="33" covered="39"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeFromTreeChildrenList" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="920"><counter type="INSTRUCTION" missed="7" covered="44"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveTreeChildren" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="938"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleCrossBlossomOutEdgeOfOddToEven" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="953"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleCrossBlossomInEdgeOfOddToEven" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="957"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleCrossBlossomEdgeOfOddToEven" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;Z)V" line="969"><counter type="INSTRUCTION" missed="13" covered="98"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)Z" line="1016"><counter type="INSTRUCTION" missed="105" covered="737"/><counter type="BRANCH" missed="29" covered="83"/><counter type="LINE" missed="6" covered="183"/><counter type="COMPLEXITY" missed="18" covered="39"/><counter type="METHOD" missed="0" covered="1"/></method><method name="augmentIfEdgeFound" desc="()Z" line="1280"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="augment" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="1290"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="augmentBranch" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="1299"><counter type="INSTRUCTION" missed="95" covered="481"/><counter type="BRANCH" missed="26" covered="50"/><counter type="LINE" missed="0" covered="120"/><counter type="COMPLEXITY" missed="13" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finish" desc="()Lcom/jgalgo/alg/IMatching;" line="1509"><counter type="INSTRUCTION" missed="35" covered="176"/><counter type="BRANCH" missed="8" covered="26"/><counter type="LINE" missed="0" covered="51"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateDuals" desc="()Z" line="1585"><counter type="INSTRUCTION" missed="0" covered="136"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateDualsCC" desc="()V" line="1627"><counter type="INSTRUCTION" missed="0" covered="357"/><counter type="BRANCH" missed="0" covered="50"/><counter type="LINE" missed="0" covered="70"/><counter type="COMPLEXITY" missed="0" covered="26"/><counter type="METHOD" missed="0" covered="1"/></method><method name="roots" desc="()Ljava/lang/Iterable;" line="1730"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rootsDuringAugmentation" desc="()Ljava/lang/Iterable;" line="1755"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureTreesEdgeExists" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree;Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree;)V" line="1786"><counter type="INSTRUCTION" missed="7" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processEdgeEvenEven" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;Z)Z" line="1801"><counter type="INSTRUCTION" missed="8" covered="116"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$augmentBranch$1" desc="(DLcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;)V" line="1363"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$expand$0" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="1032"><counter type="INSTRUCTION" missed="43" covered="15"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="10" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="149"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="832" covered="4340"/><counter type="BRANCH" missed="248" covered="552"/><counter type="LINE" missed="21" covered="1061"/><counter type="COMPLEXITY" missed="134" covered="294"/><counter type="METHOD" missed="0" covered="28"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUnionFind$1" sourcefilename="LowestCommonAncestorOfflineUnionFind.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/LowestCommonAncestorOfflineUnionFind;[II[I)V" line="65"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="71"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="76"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Blossom$2$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom$2;)V" line="2230"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2236"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$Edge;" line="2241"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="()V" line="2252"><counter type="INSTRUCTION" missed="16" covered="59"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="2230"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="106"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="3" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$AbstractImpl" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeHeaviestEdgeInTreePaths" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Lcom/jgalgo/alg/TreePathMaxima$Queries;)Lcom/jgalgo/alg/TreePathMaxima$Result;" line="45"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCutST$Builder" sourcefilename="MinimumCutST.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumCutST$Builder;" line="168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MaximalCliquesUtils$ObjResultFromIndexResult" sourcefilename="MaximalCliquesUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Iterator;)V" line="76"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/util/Set;" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MaximumFlowAbstract" sourcefilename="MaximumFlowAbstract.java"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Ljava/lang/Object;Ljava/lang/Object;)D" line="35"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Ljava/util/Collection;Ljava/util/Collection;)D" line="55"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;II)Lcom/jgalgo/alg/IVertexBiPartition;" line="77"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)Lcom/jgalgo/alg/IVertexBiPartition;" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="117"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EulerianTourAlgo" sourcefilename="EulerianTourAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/EulerianTourAlgo;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/EulerianTourAlgo$Builder;" line="83"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$ObjResultFromIndexResult" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/LowestCommonAncestorOffline$IResult;)V" line="229"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLca" desc="(I)Ljava/lang/Object;" line="236"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="242"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSource" sourcefilename="ShortestPathSingleSource.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/ShortestPathSingleSource;" line="218"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="230"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BitsLookupTable" sourcefilename="BitsLookupTable.java"/><class name="com/jgalgo/alg/VertexBiPartitions$Impl$4" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexBiPartitions$Impl;[IIIII)V" line="118"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="121"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VertexBiPartitions$Impl$5" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexBiPartitions$Impl;[IIII)V" line="163"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="166"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="12"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EulerianTourImpl" sourcefilename="EulerianTourImpl.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeEulerianTour" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IPath;" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTourUndirected" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IPath;" line="40"><counter type="INSTRUCTION" missed="18" covered="161"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="3" covered="42"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="degreeWithoutSelfLoops" desc="(Lcom/jgalgo/graph/IndexGraph;I)I" line="103"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeTourDirected" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IPath;" line="113"><counter type="INSTRUCTION" missed="41" covered="185"/><counter type="BRANCH" missed="8" covered="28"/><counter type="LINE" missed="5" covered="48"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeEulerianTour" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/Path;" line="193"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="59" covered="399"/><counter type="BRANCH" missed="11" covered="63"/><counter type="LINE" missed="8" covered="103"/><counter type="COMPLEXITY" missed="10" covered="34"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$Impl$6" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexBiPartitions$Impl;[IIIII)V" line="169"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="172"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="15"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$Impl$7" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexBiPartitions$Impl;[II)V" line="185"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="188"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="10"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$Impl$1" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexBiPartitions$Impl;[IIII)V" line="64"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="67"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceCardinality" sourcefilename="ShortestPathSingleSourceCardinality.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="49"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$Impl$2" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexBiPartitions$Impl;[IIIII)V" line="70"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="73"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VertexBiPartitions$Impl$3" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexBiPartitions$Impl;[IIII)V" line="112"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="115"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/KShortestPathsSTYen$ShortestPathSubroutine" sourcefilename="KShortestPathsSTYen.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;ILcom/jgalgo/internal/util/Bitmap;Lcom/jgalgo/internal/util/Bitmap;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPath" desc="(I)Lit/unimi/dsi/fastutil/objects/ObjectDoublePair;" line="178"><counter type="INSTRUCTION" missed="82" covered="103"/><counter type="BRANCH" missed="14" covered="10"/><counter type="LINE" missed="8" covered="23"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeShortestPath0" desc="(I)Lit/unimi/dsi/fastutil/objects/ObjectDoublePair;" line="217"><counter type="INSTRUCTION" missed="27" covered="459"/><counter type="BRANCH" missed="6" covered="52"/><counter type="LINE" missed="0" covered="90"/><counter type="COMPLEXITY" missed="3" covered="27"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="118"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="109" covered="645"/><counter type="BRANCH" missed="20" covered="62"/><counter type="LINE" missed="8" covered="135"/><counter type="COMPLEXITY" missed="11" covered="34"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTreeAlgo$Builder" sourcefilename="SteinerTreeAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/SteinerTreeAlgo$Builder;" line="262"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ColoringUtils$AbstractImpl" sourcefilename="ColoringUtils.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeColoring" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/VertexPartition;" line="28"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexQueriesFromQueries" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/LowestCommonAncestorOffline$Queries;)Lcom/jgalgo/alg/LowestCommonAncestorOffline$IQueries;" line="196"><counter type="INSTRUCTION" missed="15" covered="13"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/LowestCommonAncestorOffline$IResult;)Lcom/jgalgo/alg/LowestCommonAncestorOffline$Result;" line="271"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="31"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$ActiveOrderPolicy" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;clinit&gt;" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworks$IndexNetFromINet" sourcefilename="FlowNetworks.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IndexIntIdMap;)V" line="356"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="idNet" desc="()Lcom/jgalgo/alg/IFlowNetwork;" line="364"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCapacity" desc="(I)D" line="369"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setCapacity" desc="(ID)V" line="374"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(I)D" line="379"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFlow" desc="(ID)V" line="384"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MaximalCliques$Builder" sourcefilename="MaximalCliques.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MaximalCliques$Builder;" line="179"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MinimumCutSTUtils$AbstractImpl" sourcefilename="MinimumCutSTUtils.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/alg/VertexBiPartition;" line="44"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/util/Collection;Ljava/util/Collection;)Lcom/jgalgo/alg/VertexBiPartition;" line="65"><counter type="INSTRUCTION" missed="17" covered="35"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="92"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/KEdgeConnectedComponentsUtils$AbstractImpl" sourcefilename="KEdgeConnectedComponentsUtils.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeKEdgeConnectedComponents" desc="(Lcom/jgalgo/graph/Graph;I)Lcom/jgalgo/alg/VertexPartition;" line="28"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexScoringImpl" sourcefilename="VertexScoringImpl.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IVertexScoring;)Lcom/jgalgo/alg/VertexScoring;" line="74"><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$AbstractImpl" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findLCAs" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;Lcom/jgalgo/alg/LowestCommonAncestorOffline$Queries;)Lcom/jgalgo/alg/LowestCommonAncestorOffline$Result;" line="38"><counter type="INSTRUCTION" missed="13" covered="27"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$IntMatchingFromIndexMatching" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/IMatching;)V" line="447"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isVertexMatched" desc="(I)Z" line="455"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchedVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="460"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unmatchedVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="465"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchedEdge" desc="(I)I" line="470"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsEdge" desc="(I)Z" line="476"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="481"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="486"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPerfect" desc="()Z" line="491"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="30"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="7"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="6" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowCirculations$AbstractImpl" sourcefilename="FlowCirculations.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeCirculation" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/FlowNetwork;Lcom/jgalgo/graph/WeightFunction;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexScoringImpl$IntResultFromIndexResult" sourcefilename="VertexScoringImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/IVertexScoring;)V" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexScore" desc="(I)D" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorDynamic$1" sourcefilename="LowestCommonAncestorDynamic.java"><method name="&lt;init&gt;" desc="()V" line="144"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/LowestCommonAncestorDynamic;" line="149"><counter type="INSTRUCTION" missed="28" covered="7"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="5" covered="2"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/LowestCommonAncestorDynamic$Builder;" line="166"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="49" covered="10"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="10" covered="3"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$DischargePolicyImpl$PartialAugmentInt" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerInt;)V" line="1126"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="worker" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerInt;" line="1130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushOnPathDirected" desc="(I)I" line="1135"><counter type="INSTRUCTION" missed="76" covered="177"/><counter type="BRANCH" missed="16" covered="22"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushOnPathUndirected" desc="(I)I" line="1189"><counter type="INSTRUCTION" missed="61" covered="187"/><counter type="BRANCH" missed="14" covered="22"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1123"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="137" covered="373"/><counter type="BRANCH" missed="30" covered="44"/><counter type="LINE" missed="0" covered="84"/><counter type="COMPLEXITY" missed="15" covered="27"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CyclesFinderJohnson$StronglyConnectedComponent" sourcefilename="CyclesFinderJohnson.java"><method name="&lt;init&gt;" desc="(ILcom/jgalgo/alg/IVertexPartition;I)V" line="243"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="250"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowDinic$Worker" sourcefilename="MaximumFlowDinic.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowDinic;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="65"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowDinic;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="73"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="()D" line="82"><counter type="INSTRUCTION" missed="7" covered="282"/><counter type="BRANCH" missed="2" covered="34"/><counter type="LINE" missed="0" covered="68"/><counter type="COMPLEXITY" missed="1" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="343"/><counter type="BRANCH" missed="2" covered="34"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils$BuilderImpl$1" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/ShortestPathSingleSourceUtils$BuilderImpl;Lcom/jgalgo/alg/ShortestPathSingleSourceDijkstra;)V" line="188"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;" line="195"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/VertexPartition" sourcefilename="VertexPartition.java"><method name="blockSubGraph" desc="(I)Lcom/jgalgo/graph/Graph;" line="119"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockSubGraph" desc="(IZZ)Lcom/jgalgo/graph/Graph;" line="136"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blocksGraph" desc="()Lcom/jgalgo/graph/Graph;" line="157"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromMap" desc="(Lcom/jgalgo/graph/Graph;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lcom/jgalgo/alg/VertexPartition;" line="194"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMapping" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/function/ToIntFunction;)Lcom/jgalgo/alg/VertexPartition;" line="212"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartition" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/function/ToIntFunction;)Z" line="246"><counter type="INSTRUCTION" missed="2" covered="88"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="156"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils$BuilderImpl" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/ShortestPathSingleSource;" line="153"><counter type="INSTRUCTION" missed="59" covered="39"/><counter type="BRANCH" missed="13" covered="10"/><counter type="LINE" missed="11" covered="12"/><counter type="COMPLEXITY" missed="11" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setIntWeights" desc="(Z)Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="213"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setNegativeWeights" desc="(Z)Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="219"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMaxDistance" desc="(D)Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="225"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setDag" desc="(Z)Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="231"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCardinality" desc="(Z)Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="237"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/ShortestPathSingleSource$Builder;" line="243"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="3" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="95" covered="60"/><counter type="BRANCH" missed="16" covered="10"/><counter type="LINE" missed="22" covered="20"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOffline$Queries" sourcefilename="LowestCommonAncestorOffline.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/LowestCommonAncestorOffline$Queries;" line="80"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$1" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker;)V" line="893"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="901"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="906"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumMeanCycle$Builder" sourcefilename="MinimumMeanCycle.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumMeanCycle$Builder;" line="141"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$2" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker;)V" line="924"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="940"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="945"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$ResultImpl" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="([I)V" line="208"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLcaInt" desc="(I)I" line="214"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="219"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="11"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCovers$ResultImpl" sourcefilename="EdgeCovers.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/internal/util/Bitmap;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="70"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInCover" desc="(I)Z" line="83"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="39"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$DischargePolicy" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;clinit&gt;" desc="()V" line="76"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeUtils$ResultImpl" sourcefilename="MinimumSpanningTreeUtils.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="91"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([I)V" line="95"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntCollection;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ColoringRecursiveLargestFirst" sourcefilename="ColoringRecursiveLargestFirst.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeColoring" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/IVertexPartition;" line="55"><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="58"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="233"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceUtils$ObjResultFromIndexResult" sourcefilename="ShortestPathSingleSourceUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;)V" line="69"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(Ljava/lang/Object;)D" line="77"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(Ljava/lang/Object;)Lcom/jgalgo/alg/Path;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="87"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/Path;" line="92"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlowCostScaling" sourcefilename="MinimumCostFlowCostScaling.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/graph/IWeightFunction;)V" line="51"><counter type="INSTRUCTION" missed="10" covered="21"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="24"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeUtils$AbstractDirected" sourcefilename="MinimumSpanningTreeUtils.java"><method name="&lt;init&gt;" desc="()V" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumDirectedSpanningTree" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumSpanningTree$Result;" line="65"><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTrees$IntResultFromIndexResult" sourcefilename="SteinerTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/SteinerTreeAlgo$IResult;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="119"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ContractableGraph$1" sourcefilename="ContractableGraph.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/ContractableGraph;I)V" line="79"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eitAdvance" desc="()V" line="98"><counter type="INSTRUCTION" missed="8" covered="91"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="127"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="132"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="targetInt" desc="()I" line="148"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceOriginal" desc="()I" line="153"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="targetOriginal" desc="()I" line="158"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="177"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="3" covered="40"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/PathImpl$IterUndirected" sourcefilename="PathImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntList;I)V" line="160"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="171"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="176"><counter type="INSTRUCTION" missed="20" covered="18"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="184"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceInt" desc="()I" line="191"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="196"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="156"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="30" covered="55"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCoverUtils" sourcefilename="VertexCoverUtils.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/VertexCover$IResult;)Lcom/jgalgo/alg/VertexCover$Result;" line="149"><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CyclesFinderTarjan" sourcefilename="CyclesFinderTarjan.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllCycles" desc="(Lcom/jgalgo/graph/IndexGraph;)Ljava/util/Iterator;" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$MatchingImpl" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;[I)V" line="44"><counter type="INSTRUCTION" missed="10" covered="14"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="emptyMatching" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/alg/Matchings$MatchingImpl;" line="51"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isVertexMatched" desc="(I)Z" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchedVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="63"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unmatchedVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="84"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMatchedEdge" desc="(I)I" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(I)Z" line="110"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeEdgesCollection" desc="()V" line="120"><counter type="INSTRUCTION" missed="26" covered="79"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="149"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPerfect" desc="()Z" line="154"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="143" covered="173"/><counter type="BRANCH" missed="22" covered="26"/><counter type="LINE" missed="20" covered="37"/><counter type="COMPLEXITY" missed="16" covered="20"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/DfsIterImpl$IntDfsFromIndexDfs" sourcefilename="DfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/Dfs$IntIter;)V" line="124"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="132"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="137"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgePath" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="142"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$DischargePolicyImpl$PartialAugmentBase" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;)V" line="766"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dischargeDirected" desc="(I)V" line="774"><counter type="INSTRUCTION" missed="135" covered="321"/><counter type="BRANCH" missed="22" covered="50"/><counter type="LINE" missed="8" covered="67"/><counter type="COMPLEXITY" missed="13" covered="24"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dischargeUndirected" desc="(I)V" line="901"><counter type="INSTRUCTION" missed="87" covered="241"/><counter type="BRANCH" missed="15" covered="39"/><counter type="LINE" missed="4" covered="52"/><counter type="COMPLEXITY" missed="8" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="763"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="222" covered="573"/><counter type="BRANCH" missed="37" covered="89"/><counter type="LINE" missed="12" covered="123"/><counter type="COMPLEXITY" missed="21" covered="46"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgoAbstract$IntResultFromIndexResult" sourcefilename="TopologicalOrderAlgoAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/TopologicalOrderAlgo$IResult;)V" line="71"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orderedVertices" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexOrderIndex" desc="(I)I" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="19"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/WeaklyConnectedComponentsAlgo$Builder" sourcefilename="WeaklyConnectedComponentsAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/WeaklyConnectedComponentsAlgo$Builder;" line="132"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathSingleSourceBellmanFord$Result" sourcefilename="ShortestPathSingleSourceBellmanFord.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I)V" line="212"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="distance" desc="(I)D" line="217"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="(I)Lcom/jgalgo/alg/IPath;" line="224"><counter type="INSTRUCTION" missed="5" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="231"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="236"><counter type="INSTRUCTION" missed="5" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="243"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="32"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Odds" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(I)V" line="307"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(I)V" line="314"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBlossom" desc="(I)Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;" line="323"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initIndexing" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="329"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="split" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;)V" line="342"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isInBlossom" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Blossom;I)Z" line="358"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findMin" desc="(I)Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;" line="363"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKey" desc="(ILcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;)Z" line="367"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$init$0" desc="(Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;Lcom/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent;)I" line="315"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="217"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOfflineUtils$IndexQueriesFromIntQueries" sourcefilename="LowestCommonAncestorOfflineUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/LowestCommonAncestorOffline$IQueries;)V" line="163"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addQuery" desc="(II)V" line="170"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuerySourceInt" desc="(I)I" line="175"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryTargetInt" desc="(I)I" line="180"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="185"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="190"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MinimumCostFlow$1" sourcefilename="MinimumCostFlow.java"><method name="&lt;init&gt;" desc="()V" line="194"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/MinimumCostFlow;" line="201"><counter type="INSTRUCTION" missed="31" covered="11"/><counter type="BRANCH" missed="7" covered="2"/><counter type="LINE" missed="5" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="integerNetwork" desc="(Z)Lcom/jgalgo/alg/MinimumCostFlow$Builder;" line="290"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="integerCosts" desc="(Z)Lcom/jgalgo/alg/MinimumCostFlow$Builder;" line="296"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MinimumCostFlow$Builder;" line="302"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="14"/><counter type="BRANCH" missed="9" covered="2"/><counter type="LINE" missed="14" covered="4"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumCostFlowCycleCanceling" sourcefilename="MinimumCostFlowCycleCanceling.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinCostMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;II)V" line="51"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initResidualCapacitiesAndFlows" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/alg/FlowNetworks$ResidualGraph;[D[D)V" line="78"><counter type="INSTRUCTION" missed="65" covered="55"/><counter type="BRANCH" missed="9" covered="5"/><counter type="LINE" missed="6" covered="13"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eliminateAllNegativeCycles" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/FlowNetworks$ResidualGraph;[D[DLcom/jgalgo/graph/IWeightFunction;)V" line="107"><counter type="INSTRUCTION" missed="16" covered="201"/><counter type="BRANCH" missed="5" covered="23"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="346"/><counter type="BRANCH" missed="14" covered="32"/><counter type="LINE" missed="6" covered="68"/><counter type="COMPLEXITY" missed="8" covered="20"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCover$Result" sourcefilename="EdgeCover.java"/><class name="com/jgalgo/alg/LowestCommonAncestorOffline$IResult" sourcefilename="LowestCommonAncestorOffline.java"><method name="getLca" desc="(I)Ljava/lang/Integer;" line="259"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EdgeCovers$AbstractImpl" sourcefilename="EdgeCovers.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumEdgeCover" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/graph/WeightFunction;)Lcom/jgalgo/alg/EdgeCover$Result;" line="40"><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Bfs" sourcefilename="Bfs.java"><method name="newInstance" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;)Lcom/jgalgo/alg/Bfs$Iter;" line="69"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/IntGraph;I)Lcom/jgalgo/alg/Bfs$IntIter;" line="84"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstanceBackward" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;)Lcom/jgalgo/alg/Bfs$Iter;" line="109"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newInstanceBackward" desc="(Lcom/jgalgo/graph/IntGraph;I)Lcom/jgalgo/alg/Bfs$IntIter;" line="128"><counter type="INSTRUCTION" missed="18" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="46" covered="66"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="8" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BfsIterImpl$IntBfsFromIndexBfs" sourcefilename="BfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/Bfs$IntIter;)V" line="169"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="182"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lastEdgeInt" desc="()I" line="187"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="layer" desc="()I" line="193"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Blossom$2" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2226"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="2230"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/EulerianTourAlgo$Builder" sourcefilename="EulerianTourAlgo.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/EulerianTourAlgo$Builder;" line="117"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/WeaklyConnectedComponentsAlgo" sourcefilename="WeaklyConnectedComponentsAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/WeaklyConnectedComponentsAlgo;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/WeaklyConnectedComponentsAlgo$Builder;" line="98"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowAbstract$WithResidualGraph$Worker" sourcefilename="MaximumFlowAbstract.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="347"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="368"><counter type="INSTRUCTION" missed="0" covered="97"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCapacitiesAndFlows" desc="([D[D)V" line="395"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCapacitiesAndFlows" desc="([I[I)V" line="400"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCapacities" desc="([D)V" line="405"><counter type="INSTRUCTION" missed="0" covered="141"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initCapacities" desc="([I)V" line="432"><counter type="INSTRUCTION" missed="73" covered="84"/><counter type="BRANCH" missed="14" covered="14"/><counter type="LINE" missed="12" covered="12"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="([D)D" line="468"><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="([I)I" line="492"><counter type="INSTRUCTION" missed="0" covered="134"/><counter type="BRANCH" missed="1" covered="17"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="([D[D)D" line="517"><counter type="INSTRUCTION" missed="141" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="16" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="constructResult" desc="([I[I)I" line="541"><counter type="INSTRUCTION" missed="142" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isOriginalEdge" desc="(I)Z" line="566"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="356" covered="683"/><counter type="BRANCH" missed="51" covered="83"/><counter type="LINE" missed="45" covered="111"/><counter type="COMPLEXITY" missed="29" covered="49"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCover$IResult" sourcefilename="VertexCover.java"><method name="isInCover" desc="(Ljava/lang/Integer;)Z" line="124"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Blossom$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom;)V" line="2175"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="2179"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ColoringUtils" sourcefilename="ColoringUtils.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/FlowCirculations" sourcefilename="FlowCirculations.java"><method name="&lt;init&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$1$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree$1;)V" line="2449"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2454"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$TreesEdge;" line="2459"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaxima$Builder" sourcefilename="TreePathMaxima.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/TreePathMaxima$Builder;" line="364"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Blossom$BitmapBuilder" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="1913"><counter type="INSTRUCTION" missed="18" covered="19"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newField" desc="(I)Lcom/jgalgo/alg/MatchingWeightedBlossomV$Blossom$BitmapBuilder$Field;" line="1928"><counter type="INSTRUCTION" missed="11" covered="24"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="1909"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="44"/><counter type="BRANCH" missed="6" covered="4"/><counter type="LINE" missed="4" covered="13"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ColoringAlgo" sourcefilename="ColoringAlgo.java"><method name="isColoring" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/function/ToIntFunction;)Z" line="105"><counter type="INSTRUCTION" missed="34" covered="136"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="9" covered="27"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/alg/ColoringAlgo;" line="161"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/ColoringAlgo$Builder;" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="136"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="11" covered="27"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/BfsIterImpl$Forward" sourcefilename="BfsIterImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;I)V" line="87"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntIterator;)V" line="98"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="103"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCoverUtils$ResultImpl$1" sourcefilename="VertexCoverUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/VertexCoverUtils$ResultImpl;[I)V" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="74"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="7"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsUtils$ResFromSSSP" sourcefilename="ShortestPathAllPairsUtils.java"><method name="&lt;init&gt;" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;)V" line="254"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="foundNegativeCycle" desc="()Z" line="260"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getNegativeCycle" desc="()Lcom/jgalgo/alg/IPath;" line="265"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="8"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCover" sourcefilename="VertexCover.java"><method name="isCover" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;)Z" line="145"><counter type="INSTRUCTION" missed="21" covered="69"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/alg/VertexCover;" line="179"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/VertexCover$Builder;" line="191"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="69"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="7" covered="14"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTree" sourcefilename="MinimumSpanningTree.java"><method name="isSpanningTree" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;)Z" line="126"><counter type="INSTRUCTION" missed="33" covered="119"/><counter type="BRANCH" missed="10" covered="16"/><counter type="LINE" missed="7" covered="32"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSpanningForest" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;)Z" line="195"><counter type="INSTRUCTION" missed="34" covered="158"/><counter type="BRANCH" missed="10" covered="24"/><counter type="LINE" missed="8" covered="38"/><counter type="COMPLEXITY" missed="8" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/alg/MinimumSpanningTree;" line="261"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/MinimumSpanningTree$Builder;" line="273"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="287"/><counter type="BRANCH" missed="21" covered="41"/><counter type="LINE" missed="15" covered="73"/><counter type="COMPLEXITY" missed="17" covered="19"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTreeAlgo" sourcefilename="SteinerTreeAlgo.java"><method name="isSteinerTree" desc="(Lcom/jgalgo/graph/Graph;Ljava/util/Collection;Ljava/util/Collection;)Z" line="127"><counter type="INSTRUCTION" missed="55" covered="227"/><counter type="BRANCH" missed="18" covered="30"/><counter type="LINE" missed="12" covered="52"/><counter type="COMPLEXITY" missed="14" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="()Lcom/jgalgo/alg/SteinerTreeAlgo;" line="216"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/SteinerTreeAlgo$Builder;" line="228"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="230"/><counter type="BRANCH" missed="19" covered="31"/><counter type="LINE" missed="14" covered="53"/><counter type="COMPLEXITY" missed="17" covered="12"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$WorkerDouble" sourcefilename="MaximumFlowPushRelabelDynamicTrees.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)V" line="331"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertex" desc="(ILcom/jgalgo/internal/ds/DynamicTree$Vertex;)Lcom/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$WorkerDouble$Vertex;" line="340"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMaxCapacity" desc="()D" line="345"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushFlow" desc="(ID)V" line="352"><counter type="INSTRUCTION" missed="32" covered="24"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateFlow" desc="(ID)V" line="361"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAsMuchFromSource" desc="()V" line="366"><counter type="INSTRUCTION" missed="0" covered="67"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongEdge" desc="(I)V" line="384"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pushAlongPath" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabelDynamicTrees$AbstractWorker$Vertex;)V" line="395"><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constructResult" desc="()D" line="425"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResidualCapacity" desc="(I)D" line="430"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResidual" desc="(I)Z" line="435"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="323"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="323"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="2" covered="20"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$MatchingImpl$3" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/Matchings$MatchingImpl;[I)V" line="138"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="142"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="7"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Matchings$MatchingImpl$1" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/Matchings$MatchingImpl;[I)V" line="72"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="75"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/Matchings$MatchingImpl$2" sourcefilename="Matchings.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/Matchings$MatchingImpl;[I)V" line="93"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="96"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="7"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingAlgo$1" sourcefilename="MatchingAlgo.java"><method name="&lt;init&gt;" desc="()V" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lcom/jgalgo/alg/MatchingAlgo;" line="154"><counter type="INSTRUCTION" missed="48" covered="95"/><counter type="BRANCH" missed="13" covered="13"/><counter type="LINE" missed="10" covered="21"/><counter type="COMPLEXITY" missed="12" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBipartite" desc="(Z)Lcom/jgalgo/alg/MatchingAlgo$Builder;" line="206"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCardinality" desc="(Z)Lcom/jgalgo/alg/MatchingAlgo$Builder;" line="212"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/MatchingAlgo$Builder;" line="218"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="69" covered="114"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="15" covered="28"/><counter type="COMPLEXITY" missed="14" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/IVertexPartition" sourcefilename="IVertexPartition.java"><method name="vertexBlock" desc="(Ljava/lang/Integer;)I" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="blockSubGraph" desc="(I)Lcom/jgalgo/graph/IntGraph;" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blockSubGraph" desc="(IZZ)Lcom/jgalgo/graph/IntGraph;" line="78"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="blocksGraph" desc="()Lcom/jgalgo/graph/IntGraph;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromMap" desc="(Lcom/jgalgo/graph/IntGraph;Lit/unimi/dsi/fastutil/ints/Int2IntMap;)Lcom/jgalgo/alg/IVertexPartition;" line="101"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromMapping" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/function/IntUnaryOperator;)Lcom/jgalgo/alg/IVertexPartition;" line="116"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPartition" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/util/function/IntUnaryOperator;)Z" line="150"><counter type="INSTRUCTION" missed="2" covered="100"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="188"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="5" covered="35"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$ActiveOrderPolicy;Lcom/jgalgo/alg/MaximumFlowPushRelabel$DischargePolicy;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstanceFifo" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel;" line="94"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstanceHighestFirst" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel;" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstanceLowestFirst" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel;" line="102"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstanceMoveToFront" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel;" line="106"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstancePartialAugment" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)D" line="120"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCut" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;II)Lcom/jgalgo/alg/IVertexBiPartition;" line="130"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flowNetFromEdgeWeights" desc="(Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IFlowNetwork;" line="140"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="132"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="27"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTrees" sourcefilename="SteinerTrees.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFromIndexResult" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/SteinerTreeAlgo$IResult;)Lcom/jgalgo/alg/SteinerTreeAlgo$Result;" line="126"><counter type="INSTRUCTION" missed="13" covered="11"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="12"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$DischargePolicyImpl$SingleStepInt" sourcefilename="MaximumFlowPushRelabel.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerInt;)V" line="515"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="worker" desc="()Lcom/jgalgo/alg/MaximumFlowPushRelabel$WorkerInt;" line="519"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dischargeDirected" desc="(I)V" line="525"><counter type="INSTRUCTION" missed="18" covered="207"/><counter type="BRANCH" missed="5" covered="25"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dischargeUndirected" desc="(I)V" line="577"><counter type="INSTRUCTION" missed="42" covered="192"/><counter type="BRANCH" missed="10" covered="26"/><counter type="LINE" missed="0" covered="35"/><counter type="COMPLEXITY" missed="5" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="512"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="60" covered="408"/><counter type="BRANCH" missed="15" covered="51"/><counter type="LINE" missed="0" covered="69"/><counter type="COMPLEXITY" missed="8" covered="30"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SteinerTreeAlgo$IResult" sourcefilename="SteinerTreeAlgo.java"/><class name="com/jgalgo/alg/PathImpl$ObjPathFromIndexPath" sourcefilename="PathImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Lcom/jgalgo/alg/IPath;)V" line="337"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Ljava/lang/Object;" line="346"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="()Ljava/lang/Object;" line="351"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeIter" desc="()Lcom/jgalgo/graph/EdgeIter;" line="356"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Ljava/util/List;" line="361"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Ljava/util/List;" line="366"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSimple" desc="()Z" line="371"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="376"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexCover$Builder" sourcefilename="VertexCover.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/VertexCover$Builder;" line="225"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsCardinality" sourcefilename="ShortestPathAllPairsCardinality.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAllShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="56"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSubsetShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="63"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeSubsetCardinalityShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Z)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="69"><counter type="INSTRUCTION" missed="7" covered="122"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeSubsetCardinalityShortestPaths$fa2db864$1" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;[IILjava/lang/ThreadLocal;Lcom/jgalgo/graph/IndexGraph;)V" line="89"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeSubsetCardinalityShortestPaths$0" desc="()Lcom/jgalgo/alg/ShortestPathSingleSource;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="157"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/FlowNetworkInt" sourcefilename="FlowNetworkInt.java"><method name="getCapacity" desc="(Ljava/lang/Object;)D" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCapacity" desc="(Ljava/lang/Object;D)V" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlow" desc="(Ljava/lang/Object;)D" line="92"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlow" desc="(Ljava/lang/Object;D)V" line="107"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFlowSum" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Iterable;)D" line="112"><counter type="INSTRUCTION" missed="49" covered="57"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCostSum" desc="(Ljava/lang/Iterable;Lcom/jgalgo/graph/WeightFunction;)D" line="136"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/Graph;)Lcom/jgalgo/alg/FlowNetworkInt;" line="170"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFromEdgeWeights" desc="(Lcom/jgalgo/graph/WeightsInt;Lcom/jgalgo/graph/WeightsInt;)Lcom/jgalgo/alg/FlowNetworkInt;" line="191"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="118" covered="103"/><counter type="BRANCH" missed="16" covered="10"/><counter type="LINE" missed="22" covered="17"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/KShortestPathsSTYen" sourcefilename="KShortestPathsSTYen.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeKShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;III)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="40" covered="230"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeKShortestPaths$0" desc="(Lcom/jgalgo/internal/ds/HeapReference;)Lit/unimi/dsi/fastutil/ints/IntList;" line="107"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="47" covered="234"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="2" covered="49"/><counter type="COMPLEXITY" missed="6" covered="13"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeKruskal" sourcefilename="MinimumSpanningTreeKruskal.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setUnionFindBuilder" desc="(Lcom/jgalgo/internal/ds/UnionFind$Builder;)V" line="66"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="76"><counter type="INSTRUCTION" missed="2" covered="95"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="104"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ShortestPathAllPairsJohnson" sourcefilename="ShortestPathAllPairsJohnson.java"><method name="&lt;init&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAllShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="69"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSubsetShortestPaths" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="75"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeSubsetShortestPaths0" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IWeightFunction;Z)Lcom/jgalgo/alg/ShortestPathAllPairs$IResult;" line="80"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeAPSPPositive" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/graph/IWeightFunction;Z)Lcom/jgalgo/alg/ShortestPathAllPairsJohnson$SuccessRes;" line="113"><counter type="INSTRUCTION" missed="0" covered="127"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcPotential" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lit/unimi/dsi/fastutil/Pair;" line="150"><counter type="INSTRUCTION" missed="12" covered="157"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setNegativeSsspAlgo" desc="(Lcom/jgalgo/alg/ShortestPathSingleSource;)V" line="205"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$calcPotential$2" desc="(ILcom/jgalgo/graph/IWeightFunction;I)D" line="176"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$calcPotential$1" desc="(ILcom/jgalgo/graph/IWeightFunctionInt;I)I" line="173"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeAPSPPositive$949b01a9$1" desc="([Lcom/jgalgo/alg/ShortestPathSingleSource$IResult;[IILjava/lang/ThreadLocal;Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$computeAPSPPositive$0" desc="()Lcom/jgalgo/alg/ShortestPathSingleSource;" line="129"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="423"/><counter type="BRANCH" missed="8" covered="42"/><counter type="LINE" missed="3" covered="86"/><counter type="COMPLEXITY" missed="8" covered="29"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/VertexBiPartitions$FromWeights" sourcefilename="VertexBiPartitions.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightsBool;)V" line="237"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLeft0" desc="(I)Z" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgo$Result" sourcefilename="TopologicalOrderAlgo.java"><method name="orderComparator" desc="()Ljava/util/Comparator;" line="90"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$orderComparator$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="90"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/Dfs" sourcefilename="Dfs.java"><method name="newInstance" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;)Lcom/jgalgo/alg/Dfs$Iter;" line="67"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/graph/IntGraph;I)Lcom/jgalgo/alg/Dfs$IntIter;" line="85"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$ObjQueriesImpl" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addQuery" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuerySource" desc="(I)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueryTarget" desc="(I)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="90"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="95"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="43"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumDirectedSpanningTreeTarjan" sourcefilename="MinimumDirectedSpanningTreeTarjan.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setHeapBuilder" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable$Builder;)V" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="63"><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeMinimumDirectedSpanningTree" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="87"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expand" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/MinimumDirectedSpanningTreeTarjan$ContractedGraph;II)Lcom/jgalgo/alg/MinimumSpanningTree$IResult;" line="104"><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="BRANCH" missed="1" covered="25"/><counter type="LINE" missed="0" covered="29"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesUntilStronglyConnected" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IVertexPartition;I)V" line="143"><counter type="INSTRUCTION" missed="8" covered="85"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contract" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;I)Lcom/jgalgo/alg/MinimumDirectedSpanningTreeTarjan$ContractedGraph;" line="169"><counter type="INSTRUCTION" missed="9" covered="239"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="0" covered="52"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$contract$0" desc="(ILcom/jgalgo/graph/IWeightFunction;Lcom/jgalgo/internal/ds/UnionFindValue;Lcom/jgalgo/graph/IndexGraph;I)D" line="180"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="98" covered="530"/><counter type="BRANCH" missed="18" covered="60"/><counter type="LINE" missed="18" covered="114"/><counter type="COMPLEXITY" missed="13" covered="35"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowDinic" sourcefilename="MaximumFlowDinic.java"><method name="&lt;init&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;II)D" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMaximumFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)D" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedGabow1990Abstract$Worker$EdgeEvent" sourcefilename="MatchingWeightedGabow1990Abstract.java"><method name="&lt;init&gt;" desc="(ID)V" line="434"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="441"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/ChinesePostman" sourcefilename="ChinesePostman.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/ChinesePostman;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/ChinesePostman$Builder;" line="79"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/PathImpl$IntPathFromIndexPath" sourcefilename="PathImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/IPath;)V" line="387"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="396"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="401"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeIter" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="406"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="411"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntList;" line="416"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSimple" desc="()Z" line="421"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="426"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaximaUtils$IndexQueriesFromIntQueries" sourcefilename="TreePathMaximaUtils.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/TreePathMaxima$IQueries;)V" line="191"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addQuery" desc="(II)V" line="198"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQuerySourceInt" desc="(I)I" line="203"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQueryTargetInt" desc="(I)I" line="208"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="213"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="218"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/alg/MinimumCutSTUtils" sourcefilename="MinimumCutSTUtils.java"><method name="computeMinimumCutUsingMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;IILcom/jgalgo/alg/MaximumFlow;)Lcom/jgalgo/alg/IVertexBiPartition;" line="93"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="computeMinimumCutUsingMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/alg/MaximumFlow;)Lcom/jgalgo/alg/IVertexBiPartition;" line="104"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minCutFromMaxFlow" desc="(Lcom/jgalgo/graph/IndexGraph;Lit/unimi/dsi/fastutil/ints/IntCollection;Lcom/jgalgo/alg/IFlowNetwork;)Lcom/jgalgo/alg/IVertexBiPartition;" line="113"><counter type="INSTRUCTION" missed="0" covered="177"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="47"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFromMaxFlow" desc="(Lcom/jgalgo/alg/MaximumFlow;)Lcom/jgalgo/alg/MinimumCutST;" line="176"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFlowNetworkFromEdgeWeightFunc" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)Lcom/jgalgo/alg/IFlowNetwork;" line="193"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="globalMinCutFromStMinCut" desc="(Lcom/jgalgo/alg/MinimumCutST;)Lcom/jgalgo/alg/MinimumCutGlobal;" line="220"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="238"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/Bfs$Iter" sourcefilename="Bfs.java"/><class name="com/jgalgo/alg/SimplePathsFinderSedgewick" sourcefilename="SimplePathsFinderSedgewick.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllSimplePaths" desc="(Lcom/jgalgo/graph/IndexGraph;II)Ljava/util/Iterator;" line="42"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/CoresAlgoImpl$IntResultFromIndexResult" sourcefilename="CoresAlgoImpl.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/IntGraph;Lcom/jgalgo/alg/CoresAlgo$IResult;)V" line="287"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexCoreNum" desc="(I)I" line="294"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="maxCore" desc="()I" line="299"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreVertices" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="304"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreShell" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="309"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coreCrust" desc="(I)Lit/unimi/dsi/fastutil/ints/IntSet;" line="314"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MatchingWeightedBlossomV$Tree$3$1" sourcefilename="MatchingWeightedBlossomV.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MatchingWeightedBlossomV$Tree$3;)V" line="2499"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="2508"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="2521"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Lcom/jgalgo/alg/MatchingWeightedBlossomV$TreesEdge;" line="2526"><counter type="INSTRUCTION" missed="16" covered="18"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="2499"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="16" covered="72"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MinimumSpanningTreeKargerKleinTarjan$AllocatedMemory" sourcefilename="MinimumSpanningTreeKargerKleinTarjan.java"><method name="&lt;init&gt;" desc="()V" line="219"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allocateForRandSubGraph" desc="()V" line="230"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allocateForLightEdges" desc="(II)V" line="234"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allocateForLightEdges$2" desc="()Lcom/jgalgo/alg/TreePathMaxima$IQueries;" line="250"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allocateForLightEdges$1" desc="(Lcom/jgalgo/graph/IndexGraph;)Lcom/jgalgo/graph/IWeightsDouble;" line="248"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allocateForLightEdges$0" desc="()Lcom/jgalgo/graph/IndexGraph;" line="246"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="121"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/SimplePathsFinders$AbstractImpl" sourcefilename="SimplePathsFinders.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllSimplePaths" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Iterator;" line="30"><counter type="INSTRUCTION" missed="15" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TopologicalOrderAlgo" sourcefilename="TopologicalOrderAlgo.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/TopologicalOrderAlgo;" line="134"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newBuilder" desc="()Lcom/jgalgo/alg/TopologicalOrderAlgo$Builder;" line="146"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/MaximumFlowPushRelabel$Worker$ActiveOrderPolicyImpl" sourcefilename="MaximumFlowPushRelabel.java"><method name="afterActivate" desc="(I)V" line="1287"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="beforeRecomputeLabels" desc="()V" line="1289"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRecomputeLabels" desc="()V" line="1291"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterRelabel" desc="(I)V" line="1293"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="afterVertexLabelReCompute" desc="(I)V" line="1295"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;Lcom/jgalgo/alg/MaximumFlowPushRelabel$ActiveOrderPolicy;)Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker$ActiveOrderPolicyImpl;" line="1298"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/alg/MaximumFlowPushRelabel$Worker;)V" line="1314"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="1" covered="4"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/TreePathMaxima$IQueries" sourcefilename="TreePathMaxima.java"><method name="newInstance" desc="()Lcom/jgalgo/alg/TreePathMaxima$IQueries;" line="161"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addQuery" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)V" line="175"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQuerySource" desc="(I)Ljava/lang/Integer;" line="194"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getQueryTarget" desc="(I)Ljava/lang/Integer;" line="213"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/alg/LowestCommonAncestorOffline$Builder" sourcefilename="LowestCommonAncestorOffline.java"><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)Lcom/jgalgo/alg/LowestCommonAncestorOffline$Builder;" line="319"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="VertexCoverUtils.java"><line nr="33" mi="3" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="1" cb="1"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="16" mb="0" cb="0"/><line nr="74" mi="20" ci="0" mb="6" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="1" cb="1"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="1" mb="2" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="110"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="14" covered="26"/><counter type="COMPLEXITY" missed="15" covered="12"/><counter type="METHOD" missed="8" covered="11"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="Matchings.java"><line nr="34" mi="3" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="10" ci="1" mb="2" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="9" ci="0" mb="2" cb="0"/><line nr="66" mi="6" ci="0" mb="2" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="11" ci="0" mb="2" cb="0"/><line nr="70" mi="6" ci="0" mb="2" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="14" ci="0" mb="0" cb="0"/><line nr="75" mi="20" ci="0" mb="6" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="2"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="20" ci="0" mb="6" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="13" mb="0" cb="2"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="2"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="4"/><line nr="126" mi="13" ci="1" mb="2" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="14" mb="0" cb="2"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="4"/><line nr="134" mi="13" ci="1" mb="2" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="14" mb="0" cb="0"/><line nr="142" mi="25" ci="0" mb="6" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="17" ci="0" mb="2" cb="0"/><line nr="155" mi="3" ci="0" mb="2" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="1" cb="1"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="201" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="0" cb="0"/><line nr="221" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="0" cb="0"/><line nr="251" mi="3" ci="0" mb="0" cb="0"/><line nr="256" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="2"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="2" mb="0" cb="0"/><line nr="271" mi="0" ci="8" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="283" mi="6" ci="0" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="1" cb="3"/><line nr="321" mi="6" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="1" cb="3"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="2" cb="2"/><line nr="325" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="4" ci="0" mb="4" cb="0"/><line nr="327" mi="6" ci="0" mb="0" cb="0"/><line nr="328" mi="4" ci="0" mb="0" cb="0"/><line nr="333" mi="3" ci="0" mb="0" cb="0"/><line nr="334" mi="3" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="4" cb="0"/><line nr="336" mi="6" ci="0" mb="0" cb="0"/><line nr="337" mi="4" ci="0" mb="4" cb="0"/><line nr="338" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="4" ci="0" mb="4" cb="0"/><line nr="340" mi="6" ci="0" mb="0" cb="0"/><line nr="341" mi="4" ci="0" mb="4" cb="0"/><line nr="342" mi="6" ci="0" mb="0" cb="0"/><line nr="343" mi="4" ci="0" mb="0" cb="0"/><line nr="348" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="3" ci="0" mb="0" cb="0"/><line nr="350" mi="4" ci="0" mb="4" cb="0"/><line nr="351" mi="6" ci="0" mb="0" cb="0"/><line nr="352" mi="4" ci="0" mb="4" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="4" ci="0" mb="4" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="356" mi="4" ci="0" mb="4" cb="0"/><line nr="357" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="4" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="0" ci="3" mb="0" cb="0"/><line nr="365" mi="2" ci="2" mb="3" cb="1"/><line nr="366" mi="6" ci="0" mb="0" cb="0"/><line nr="367" mi="2" ci="2" mb="3" cb="1"/><line nr="368" mi="6" ci="0" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="2" cb="2"/><line nr="370" mi="6" ci="0" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="2" cb="2"/><line nr="372" mi="0" ci="6" mb="0" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="377" mi="0" ci="12" mb="2" cb="4"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="393" mi="2" ci="0" mb="0" cb="0"/><line nr="394" mi="5" ci="0" mb="0" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="397" mi="1" ci="0" mb="0" cb="0"/><line nr="401" mi="8" ci="0" mb="0" cb="0"/><line nr="406" mi="7" ci="0" mb="0" cb="0"/><line nr="411" mi="7" ci="0" mb="0" cb="0"/><line nr="416" mi="8" ci="0" mb="0" cb="0"/><line nr="417" mi="10" ci="0" mb="2" cb="0"/><line nr="422" mi="8" ci="0" mb="0" cb="0"/><line nr="427" mi="7" ci="0" mb="0" cb="0"/><line nr="432" mi="4" ci="0" mb="0" cb="0"/><line nr="437" mi="4" ci="0" mb="0" cb="0"/><line nr="447" mi="0" ci="2" mb="0" cb="0"/><line nr="448" mi="0" ci="5" mb="0" cb="0"/><line nr="449" mi="0" ci="4" mb="0" cb="0"/><line nr="450" mi="0" ci="4" mb="0" cb="0"/><line nr="451" mi="0" ci="1" mb="0" cb="0"/><line nr="455" mi="8" ci="0" mb="0" cb="0"/><line nr="460" mi="7" ci="0" mb="0" cb="0"/><line nr="465" mi="0" ci="7" mb="0" cb="0"/><line nr="470" mi="8" ci="0" mb="0" cb="0"/><line nr="471" mi="10" ci="0" mb="2" cb="0"/><line nr="476" mi="8" ci="0" mb="0" cb="0"/><line nr="481" mi="0" ci="7" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="491" mi="4" ci="0" mb="0" cb="0"/><line nr="497" mi="7" ci="1" mb="2" cb="0"/><line nr="498" mi="0" ci="3" mb="1" cb="1"/><line nr="499" mi="0" ci="7" mb="0" cb="0"/><line nr="501" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="589" covered="427"/><counter type="BRANCH" missed="103" covered="51"/><counter type="LINE" missed="98" covered="99"/><counter type="COMPLEXITY" missed="92" covered="49"/><counter type="METHOD" missed="33" covered="31"/><counter type="CLASS" missed="2" covered="10"/></sourcefile><sourcefile name="MaximumFlowDinic.java"><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="9" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="15" mb="0" cb="4"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="2"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="2"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="12" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="2"/><line nr="123" mi="0" ci="10" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="2"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="2"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="7" ci="1" mb="2" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="2"/><line nr="156" mi="0" ci="13" mb="0" cb="0"/><line nr="159" mi="0" ci="11" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="2"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="366"/><counter type="BRANCH" missed="2" covered="34"/><counter type="LINE" missed="0" covered="84"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Bfs.java"><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="9" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="1" cb="1"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="9" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="46" covered="80"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Dfs.java"><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MinimumDirectedSpanningTreeTarjan.java"><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="4" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="2" cb="0"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="4" ci="0" mb="2" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="2" cb="2"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="10" mb="0" cb="2"/><line nr="116" mi="0" ci="13" mb="0" cb="2"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="1" cb="3"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="2"/><line nr="132" mi="0" ci="8" mb="0" cb="4"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="10" mb="0" cb="2"/><line nr="136" mi="0" ci="10" mb="0" cb="4"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="1" cb="1"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="2"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="2"/><line nr="157" mi="0" ci="11" mb="0" cb="2"/><line nr="158" mi="0" ci="10" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="2"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="7" ci="1" mb="2" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="9" ci="1" mb="2" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="0"/><line nr="180" mi="0" ci="15" mb="0" cb="2"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="2"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="2"/><line nr="186" mi="0" ci="13" mb="0" cb="2"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="2" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="2"/><line nr="207" mi="0" ci="9" mb="0" cb="0"/><line nr="208" mi="0" ci="8" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="2"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="9" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="2"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="548"/><counter type="BRANCH" missed="18" covered="60"/><counter type="LINE" missed="18" covered="121"/><counter type="COMPLEXITY" missed="13" covered="36"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MinimumCutGlobal.java"><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="SteinerTreeAlgo.java"><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="132" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="1" cb="1"/><line nr="147" mi="8" ci="0" mb="4" cb="0"/><line nr="148" mi="10" ci="0" mb="4" cb="0"/><line nr="150" mi="0" ci="7" mb="2" cb="2"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="11" mb="0" cb="2"/><line nr="155" mi="0" ci="5" mb="1" cb="1"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="1" cb="1"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="2"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="4"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="1" cb="1"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="11" mb="0" cb="2"/><line nr="183" mi="0" ci="5" mb="1" cb="1"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="11" mb="0" cb="2"/><line nr="190" mi="0" ci="4" mb="1" cb="1"/><line nr="191" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="11" mb="0" cb="2"/><line nr="196" mi="0" ci="9" mb="0" cb="0"/><line nr="197" mi="0" ci="9" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="2"/><line nr="200" mi="0" ci="9" mb="1" cb="3"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="230"/><counter type="BRANCH" missed="19" covered="31"/><counter type="LINE" missed="15" covered="53"/><counter type="COMPLEXITY" missed="18" covered="12"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="FlowNetworks.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="1" cb="3"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="1" cb="1"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="1" cb="1"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="1" cb="1"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="1" cb="1"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="1" cb="1"/><line nr="168" mi="7" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="6" ci="0" mb="0" cb="0"/><line nr="185" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="6" ci="0" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="1" cb="1"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="1" cb="1"/><line nr="216" mi="7" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="16" mb="1" cb="3"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="10" mb="0" cb="0"/><line nr="250" mi="0" ci="10" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="9" ci="1" mb="2" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="0" ci="12" mb="0" cb="2"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="7" ci="1" mb="2" cb="0"/><line nr="261" mi="9" ci="1" mb="2" cb="0"/><line nr="262" mi="0" ci="9" mb="0" cb="0"/><line nr="263" mi="0" ci="12" mb="0" cb="2"/><line nr="264" mi="0" ci="10" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="2"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="9" ci="1" mb="2" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="9" ci="1" mb="2" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="9" ci="1" mb="2" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="9" ci="1" mb="2" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="1" cb="1"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="2"/><line nr="298" mi="0" ci="8" mb="0" cb="0"/><line nr="299" mi="0" ci="10" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="302" mi="7" ci="0" mb="2" cb="0"/><line nr="303" mi="6" ci="0" mb="0" cb="0"/><line nr="304" mi="6" ci="0" mb="0" cb="0"/><line nr="307" mi="0" ci="9" mb="0" cb="0"/><line nr="319" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="6" ci="0" mb="4" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="327" mi="3" ci="0" mb="0" cb="0"/><line nr="332" mi="8" ci="0" mb="0" cb="0"/><line nr="337" mi="8" ci="0" mb="0" cb="0"/><line nr="338" mi="1" ci="0" mb="0" cb="0"/><line nr="342" mi="8" ci="0" mb="0" cb="0"/><line nr="347" mi="8" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="356" mi="2" ci="0" mb="0" cb="0"/><line nr="357" mi="6" ci="0" mb="4" cb="0"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="359" mi="5" ci="0" mb="0" cb="0"/><line nr="360" mi="5" ci="0" mb="0" cb="0"/><line nr="361" mi="1" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="0" cb="0"/><line nr="369" mi="8" ci="0" mb="0" cb="0"/><line nr="374" mi="8" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="379" mi="8" ci="0" mb="0" cb="0"/><line nr="384" mi="8" ci="0" mb="0" cb="0"/><line nr="385" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="1" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="8" ci="0" mb="0" cb="0"/><line nr="406" mi="8" ci="0" mb="0" cb="0"/><line nr="407" mi="1" ci="0" mb="0" cb="0"/><line nr="411" mi="8" ci="0" mb="0" cb="0"/><line nr="416" mi="8" ci="0" mb="0" cb="0"/><line nr="417" mi="1" ci="0" mb="0" cb="0"/><line nr="422" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="429" mi="1" ci="0" mb="0" cb="0"/><line nr="434" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="441" mi="1" ci="0" mb="0" cb="0"/><line nr="447" mi="4" ci="0" mb="0" cb="0"/><line nr="448" mi="1" ci="0" mb="0" cb="0"/><line nr="452" mi="4" ci="0" mb="0" cb="0"/><line nr="457" mi="8" ci="0" mb="0" cb="0"/><line nr="462" mi="8" ci="0" mb="0" cb="0"/><line nr="463" mi="1" ci="0" mb="0" cb="0"/><line nr="467" mi="8" ci="0" mb="0" cb="0"/><line nr="472" mi="8" ci="0" mb="0" cb="0"/><line nr="473" mi="1" ci="0" mb="0" cb="0"/><line nr="478" mi="4" ci="0" mb="0" cb="0"/><line nr="484" mi="4" ci="0" mb="0" cb="0"/><line nr="485" mi="1" ci="0" mb="0" cb="0"/><line nr="490" mi="4" ci="0" mb="0" cb="0"/><line nr="496" mi="4" ci="0" mb="0" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="502" mi="0" ci="3" mb="0" cb="2"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="6" mb="0" cb="0"/><line nr="506" mi="0" ci="6" mb="0" cb="0"/><line nr="507" mi="0" ci="6" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="2"/><line nr="511" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="0" ci="6" mb="0" cb="0"/><line nr="513" mi="0" ci="6" mb="0" cb="0"/><line nr="514" mi="0" ci="6" mb="0" cb="0"/><line nr="516" mi="0" ci="3" mb="0" cb="2"/><line nr="518" mi="0" ci="3" mb="0" cb="0"/><line nr="519" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="6" mb="0" cb="0"/><line nr="521" mi="0" ci="6" mb="0" cb="0"/><line nr="523" mi="0" ci="3" mb="1" cb="1"/><line nr="525" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="6" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="528" mi="0" ci="6" mb="0" cb="0"/><line nr="530" mi="6" ci="0" mb="4" cb="0"/><line nr="532" mi="3" ci="0" mb="0" cb="0"/><line nr="533" mi="3" ci="0" mb="0" cb="0"/><line nr="534" mi="6" ci="0" mb="0" cb="0"/><line nr="536" mi="6" ci="0" mb="4" cb="0"/><line nr="538" mi="3" ci="0" mb="0" cb="0"/><line nr="539" mi="3" ci="0" mb="0" cb="0"/><line nr="540" mi="6" ci="0" mb="0" cb="0"/><line nr="542" mi="3" ci="0" mb="2" cb="0"/><line nr="544" mi="3" ci="0" mb="0" cb="0"/><line nr="545" mi="6" ci="0" mb="0" cb="0"/><line nr="549" mi="6" ci="0" mb="0" cb="0"/><line nr="554" mi="0" ci="3" mb="1" cb="1"/><line nr="555" mi="0" ci="8" mb="0" cb="0"/><line nr="557" mi="2" ci="0" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="0" cb="0"/><line nr="559" mi="11" ci="0" mb="2" cb="0"/><line nr="560" mi="14" ci="0" mb="2" cb="0"/><line nr="561" mi="7" ci="0" mb="0" cb="0"/><line nr="562" mi="11" ci="0" mb="2" cb="0"/><line nr="563" mi="14" ci="0" mb="2" cb="0"/><line nr="564" mi="7" ci="0" mb="0" cb="0"/><line nr="565" mi="6" ci="0" mb="0" cb="0"/><line nr="569" mi="6" ci="0" mb="0" cb="0"/><line nr="570" mi="3" ci="0" mb="0" cb="0"/><line nr="571" mi="5" ci="0" mb="2" cb="0"/><line nr="572" mi="5" ci="0" mb="0" cb="0"/><line nr="573" mi="2" ci="0" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="2" mb="0" cb="0"/><line nr="579" mi="0" ci="11" mb="0" cb="2"/><line nr="580" mi="0" ci="14" mb="0" cb="2"/><line nr="581" mi="0" ci="8" mb="0" cb="0"/><line nr="582" mi="0" ci="11" mb="0" cb="2"/><line nr="583" mi="0" ci="14" mb="0" cb="2"/><line nr="584" mi="0" ci="8" mb="0" cb="0"/><line nr="585" mi="0" ci="6" mb="0" cb="0"/><line nr="589" mi="0" ci="3" mb="1" cb="1"/><line nr="590" mi="7" ci="0" mb="0" cb="0"/><line nr="592" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="13" mb="0" cb="2"/><line nr="594" mi="0" ci="7" mb="0" cb="0"/><line nr="595" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="2" mb="0" cb="0"/><line nr="600" mi="0" ci="13" mb="0" cb="2"/><line nr="601" mi="0" ci="8" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><line nr="603" mi="0" ci="5" mb="1" cb="1"/><line nr="604" mi="5" ci="0" mb="0" cb="0"/><line nr="605" mi="0" ci="2" mb="0" cb="0"/><line nr="609" mi="0" ci="3" mb="1" cb="1"/><line nr="610" mi="7" ci="0" mb="0" cb="0"/><line nr="612" mi="0" ci="2" mb="0" cb="0"/><line nr="613" mi="0" ci="13" mb="0" cb="2"/><line nr="614" mi="0" ci="7" mb="0" cb="0"/><line nr="615" mi="0" ci="2" mb="0" cb="0"/><line nr="619" mi="0" ci="2" mb="0" cb="0"/><line nr="620" mi="0" ci="13" mb="0" cb="2"/><line nr="621" mi="0" ci="8" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="623" mi="0" ci="5" mb="1" cb="1"/><line nr="624" mi="5" ci="0" mb="0" cb="0"/><line nr="625" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="622" covered="763"/><counter type="BRANCH" missed="61" covered="51"/><counter type="LINE" missed="111" covered="161"/><counter type="COMPLEXITY" missed="78" covered="53"/><counter type="METHOD" missed="39" covered="36"/><counter type="CLASS" missed="4" covered="7"/></sourcefile><sourcefile name="ShortestPathHeuristicST.java"><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="7" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="9" ci="0" mb="2" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="2" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="MinimumMeanCycle.java"><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="9" ci="0" mb="3" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="2" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="17"/><counter type="BRANCH" missed="6" covered="1"/><counter type="LINE" missed="10" covered="4"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="MatchingAlgo.java"><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="1" cb="1"/><line nr="155" mi="9" ci="0" mb="8" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="7" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="0" cb="4"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="1" cb="3"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="187" mi="0" ci="6" mb="1" cb="3"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="2" cb="2"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="4" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="8" ci="0" mb="2" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="284" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="121"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="16" covered="29"/><counter type="COMPLEXITY" missed="15" covered="10"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="VertexCover.java"><line nr="124" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="1" cb="1"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="2"/><line nr="156" mi="0" ci="5" mb="1" cb="1"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="1" cb="1"/><line nr="159" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="2"/><line nr="164" mi="0" ci="12" mb="1" cb="3"/><line nr="165" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="74"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="ShortestPathSingleSourceGoldberg.java"><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="11" mb="0" cb="2"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="2"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="15" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="7" mb="0" cb="2"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="2"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="2"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="7" mb="0" cb="2"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="2"/><line nr="195" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="8" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="2"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="9" mb="0" cb="0"/><line nr="206" mi="0" ci="12" mb="0" cb="2"/><line nr="207" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="6" mb="0" cb="0"/><line nr="209" mi="0" ci="10" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="2"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="7" mb="0" cb="2"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="2"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="2"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="2"/><line nr="239" mi="0" ci="10" mb="0" cb="4"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="11" mb="0" cb="2"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="0" cb="2"/><line nr="245" mi="0" ci="10" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="2"/><line nr="247" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="2"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="2"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="8" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="7" mb="0" cb="2"/><line nr="269" mi="0" ci="4" mb="0" cb="2"/><line nr="270" mi="0" ci="9" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="2"/><line nr="274" mi="0" ci="4" mb="0" cb="0"/><line nr="275" mi="0" ci="2" mb="0" cb="2"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="3" mb="0" cb="2"/><line nr="279" mi="0" ci="7" mb="0" cb="0"/><line nr="284" mi="0" ci="11" mb="0" cb="2"/><line nr="285" mi="0" ci="6" mb="0" cb="2"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="2"/><line nr="289" mi="0" ci="13" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="0" cb="2"/><line nr="302" mi="0" ci="2" mb="0" cb="2"/><line nr="303" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="0" ci="8" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="2"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="311" mi="0" ci="14" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="0"/><line nr="322" mi="0" ci="9" mb="0" cb="2"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="8" mb="0" cb="0"/><line nr="338" mi="0" ci="3" mb="1" cb="1"/><line nr="339" mi="5" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="15" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="1" cb="1"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="7" mb="0" cb="2"/><line nr="357" mi="0" ci="3" mb="1" cb="1"/><line nr="358" mi="5" ci="0" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="11" ci="0" mb="2" cb="0"/><line nr="371" mi="6" ci="0" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="4" ci="0" mb="2" cb="0"/><line nr="411" mi="3" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="2" cb="0"/><line nr="413" mi="3" ci="0" mb="0" cb="0"/><line nr="414" mi="4" ci="0" mb="2" cb="0"/><line nr="415" mi="3" ci="0" mb="0" cb="0"/><line nr="416" mi="4" ci="0" mb="2" cb="0"/><line nr="417" mi="3" ci="0" mb="0" cb="0"/><line nr="418" mi="4" ci="0" mb="2" cb="0"/><line nr="419" mi="3" ci="0" mb="0" cb="0"/><line nr="420" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="84" covered="812"/><counter type="BRANCH" missed="16" covered="88"/><counter type="LINE" missed="19" covered="163"/><counter type="COMPLEXITY" missed="14" covered="59"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ShortestPathSingleSourceDijkstra.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="2"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="6" mb="0" cb="2"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="2"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="13" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="278"/><counter type="BRANCH" missed="0" covered="24"/><counter type="LINE" missed="2" covered="68"/><counter type="COMPLEXITY" missed="1" covered="16"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShortestPathSTBidirectionalBfs.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="1" cb="1"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="1" cb="1"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="4"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="2"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="2"/><line nr="72" mi="0" ci="6" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="2"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="2"/><line nr="88" mi="0" ci="6" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="2"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="11" mb="0" cb="2"/><line nr="108" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="11" mb="0" cb="2"/><line nr="111" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="11" mb="0" cb="2"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="335"/><counter type="BRANCH" missed="2" covered="40"/><counter type="LINE" missed="2" covered="73"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IFlowNetwork.java"><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="1" cb="1"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="1" cb="1"/><line nr="138" mi="0" ci="12" mb="0" cb="2"/><line nr="139" mi="0" ci="13" mb="0" cb="2"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="2"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="12" ci="0" mb="2" cb="0"/><line nr="146" mi="13" ci="0" mb="2" cb="0"/><line nr="147" mi="5" ci="0" mb="2" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="2" cb="0"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="2" cb="0"/><line nr="164" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="11" ci="0" mb="2" cb="0"/><line nr="166" mi="12" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="11" ci="0" mb="2" cb="0"/><line nr="169" mi="11" ci="0" mb="0" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="6" ci="0" mb="0" cb="0"/><line nr="193" mi="6" ci="0" mb="0" cb="0"/><line nr="194" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="145" covered="96"/><counter type="BRANCH" missed="16" covered="8"/><counter type="LINE" missed="25" covered="18"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="4" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KShortestPathsSTs.java"><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="1" cb="1"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="8" ci="0" mb="0" cb="0"/><line nr="40" mi="8" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="60"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="5" covered="13"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="VoronoiAlgo.java"><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="8" mb="0" cb="2"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="8" mb="0" cb="2"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="297" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="IPath.java"><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="9" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="118"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="28"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTree.java"><line nr="58" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="1" cb="1"/><line nr="139" mi="8" ci="0" mb="4" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="1" cb="1"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="1" cb="1"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="1" cb="1"/><line nr="149" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="2"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="1" ci="8" mb="1" cb="1"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="1" cb="1"/><line nr="199" mi="3" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="1" cb="1"/><line nr="208" mi="8" ci="0" mb="4" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="11" mb="0" cb="2"/><line nr="213" mi="0" ci="5" mb="1" cb="1"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="1" cb="1"/><line nr="216" mi="6" ci="0" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="2"/><line nr="225" mi="0" ci="5" mb="0" cb="2"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="2"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="8" mb="0" cb="2"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="4"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="1" cb="1"/><line nr="239" mi="2" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="242" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="7" mb="0" cb="2"/><line nr="246" mi="0" ci="15" mb="1" cb="3"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="1" cb="1"/><line nr="280" mi="9" ci="0" mb="7" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="290" mi="4" ci="0" mb="0" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="294" mi="7" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="3" mb="1" cb="1"/><line nr="301" mi="4" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="8" ci="0" mb="3" cb="0"/><line nr="309" mi="4" ci="0" mb="0" cb="0"/><line nr="310" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="6" ci="0" mb="0" cb="0"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="302"/><counter type="BRANCH" missed="33" covered="43"/><counter type="LINE" missed="32" covered="77"/><counter type="COMPLEXITY" missed="29" covered="21"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="SteinerTreeMehlhorn.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="1" cb="1"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="19" ci="1" mb="6" cb="0"/><line nr="89" mi="0" ci="13" mb="0" cb="2"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="11" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="16" mb="0" cb="2"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="16" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="11" mb="0" cb="2"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="165" mi="0" ci="9" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="9" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="2"/><line nr="173" mi="0" ci="13" mb="0" cb="0"/><line nr="174" mi="0" ci="13" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="2"/><line nr="177" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="10" ci="1" mb="2" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="2"/><line nr="184" mi="0" ci="12" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="2"/><line nr="187" mi="0" ci="9" mb="1" cb="3"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="2"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="1" cb="1"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="10" ci="0" mb="2" cb="0"/><line nr="195" mi="4" ci="0" mb="2" cb="0"/><line nr="196" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="12" ci="0" mb="2" cb="0"/><line nr="200" mi="6" ci="0" mb="2" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="7" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="0" cb="0"/><line nr="209" mi="9" ci="0" mb="4" cb="0"/><line nr="210" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="11" mb="0" cb="2"/><line nr="215" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="125" covered="609"/><counter type="BRANCH" missed="24" covered="50"/><counter type="LINE" missed="19" covered="118"/><counter type="COMPLEXITY" missed="15" covered="29"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KEdgeConnectedComponentsUtils.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="LowestCommonAncestorStatic.java"><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="180" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="8"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="MinimumCostFlowCycleCanceling.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="2"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="0" ci="12" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="14" ci="1" mb="2" cb="0"/><line nr="95" mi="11" ci="0" mb="2" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="4" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="11" ci="0" mb="2" cb="0"/><line nr="100" mi="15" ci="0" mb="2" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="2"/><line nr="125" mi="0" ci="14" mb="0" cb="2"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="2"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="1" cb="3"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="12" mb="0" cb="2"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="145" mi="8" ci="1" mb="2" cb="0"/><line nr="148" mi="0" ci="12" mb="0" cb="2"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="8" ci="1" mb="2" cb="0"/><line nr="156" mi="0" ci="14" mb="0" cb="2"/><line nr="157" mi="0" ci="2" mb="0" cb="2"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="11" mb="0" cb="2"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="346"/><counter type="BRANCH" missed="14" covered="32"/><counter type="LINE" missed="6" covered="68"/><counter type="COMPLEXITY" missed="8" covered="20"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArraysUtils.java"><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="1" cb="1"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="2" ci="4" mb="1" cb="1"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="1" cb="1"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="2" ci="4" mb="1" cb="1"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="1" cb="1"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="1" cb="1"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="2" ci="4" mb="1" cb="1"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="2"/><line nr="167" mi="0" ci="19" mb="0" cb="6"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="1" cb="1"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="2" ci="4" mb="1" cb="1"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="2"/><line nr="199" mi="0" ci="19" mb="0" cb="6"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="1" cb="1"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="2"/><line nr="211" mi="0" ci="7" mb="0" cb="2"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="2"/><line nr="215" mi="0" ci="7" mb="0" cb="2"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="224" mi="0" ci="7" mb="0" cb="2"/><line nr="225" mi="0" ci="7" mb="0" cb="2"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="7" mb="0" cb="2"/><line nr="229" mi="0" ci="7" mb="0" cb="2"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="2"/><line nr="237" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="10" mb="0" cb="0"/><line nr="239" mi="0" ci="7" mb="0" cb="2"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="6" mb="0" cb="0"/><line nr="248" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="2"/><line nr="255" mi="0" ci="6" mb="0" cb="0"/><line nr="256" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="7" mb="0" cb="2"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="2"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="0" ci="8" mb="0" cb="0"/><line nr="268" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="9" mb="0" cb="2"/><line nr="273" mi="0" ci="18" mb="0" cb="4"/><line nr="274" mi="0" ci="6" mb="0" cb="0"/><line nr="275" mi="0" ci="8" mb="0" cb="0"/><line nr="279" mi="0" ci="9" mb="0" cb="2"/><line nr="280" mi="0" ci="18" mb="0" cb="4"/><line nr="281" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="8" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="1" cb="1"/><line nr="301" mi="6" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="4" mb="1" cb="1"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="1" cb="1"/><line nr="321" mi="6" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="2"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="2"/><line nr="328" mi="0" ci="1" mb="0" cb="0"/><line nr="329" mi="0" ci="16" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="2"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="338" mi="0" ci="16" mb="0" cb="0"/><line nr="339" mi="0" ci="6" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="341" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="720"/><counter type="BRANCH" missed="13" covered="83"/><counter type="LINE" missed="6" covered="138"/><counter type="COMPLEXITY" missed="13" covered="53"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LowestCommonAncestorDynamicGabowInts.java"><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="4"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="4"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="3" ci="4" mb="1" cb="1"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="1" cb="1"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="10" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="2"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="2"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="2"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="9" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="15" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="1" cb="1"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="1" cb="1"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="9" ci="1" mb="2" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="2"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="9" ci="1" mb="2" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="9" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="1" ci="0" mb="0" cb="0"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="11" mb="0" cb="2"/><line nr="271" mi="8" ci="1" mb="2" cb="0"/><line nr="272" mi="0" ci="9" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="2"/><line nr="274" mi="0" ci="13" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="8" mb="0" cb="2"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="2" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="8" ci="1" mb="2" cb="0"/><line nr="304" mi="0" ci="9" mb="0" cb="0"/><line nr="305" mi="0" ci="6" mb="0" cb="2"/><line nr="306" mi="0" ci="13" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="308" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="8" mb="0" cb="2"/><line nr="320" mi="10" ci="1" mb="4" cb="0"/><line nr="321" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="83" covered="508"/><counter type="BRANCH" missed="17" covered="53"/><counter type="LINE" missed="9" covered="111"/><counter type="COMPLEXITY" missed="12" covered="48"/><counter type="METHOD" missed="1" covered="24"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ShortestPathAllPairsCardinality.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="1" ci="7" mb="1" cb="1"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="2" cb="4"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="2"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="2"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="157"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="3" covered="29"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CyclesFinderAbstract.java"><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PathImpl.java"><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="10" ci="1" mb="2" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="1" cb="3"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="22" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="12" mb="0" cb="2"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="2"/><line nr="101" mi="9" ci="1" mb="2" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="1" cb="1"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="9" ci="1" mb="2" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="2"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="1" cb="1"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="1" cb="1"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="20" ci="1" mb="4" cb="0"/><line nr="178" mi="0" ci="9" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="8" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="2"/><line nr="222" mi="14" ci="1" mb="2" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="4" ci="0" mb="0" cb="0"/><line nr="230" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="0"/><line nr="247" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="10" mb="0" cb="2"/><line nr="255" mi="0" ci="10" mb="0" cb="2"/><line nr="260" mi="0" ci="2" mb="0" cb="2"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="2"/><line nr="263" mi="0" ci="7" mb="0" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="2"/><line nr="271" mi="0" ci="8" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="2"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="2"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="2"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="2"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="8" mb="0" cb="0"/><line nr="297" mi="0" ci="10" mb="2" cb="2"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="2"/><line nr="300" mi="1" ci="6" mb="1" cb="1"/><line nr="302" mi="0" ci="3" mb="0" cb="2"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="2"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="10" mb="1" cb="3"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="310" mi="0" ci="7" mb="0" cb="2"/><line nr="313" mi="0" ci="2" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="2"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="1" cb="1"/><line nr="317" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="5" mb="0" cb="2"/><line nr="319" mi="0" ci="5" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="2"/><line nr="321" mi="0" ci="5" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="1" mb="0" cb="0"/><line nr="326" mi="0" ci="7" mb="0" cb="2"/><line nr="337" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="0" ci="4" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="7" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="0"/><line nr="361" mi="0" ci="7" mb="0" cb="0"/><line nr="366" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="7" mb="0" cb="0"/><line nr="401" mi="0" ci="7" mb="0" cb="0"/><line nr="406" mi="0" ci="7" mb="0" cb="0"/><line nr="411" mi="0" ci="7" mb="0" cb="0"/><line nr="416" mi="0" ci="7" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="426" mi="0" ci="4" mb="0" cb="0"/><line nr="435" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="5" mb="0" cb="0"/><line nr="437" mi="0" ci="5" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="4" mb="0" cb="0"/><line nr="447" mi="0" ci="8" mb="0" cb="0"/><line nr="456" mi="0" ci="2" mb="0" cb="0"/><line nr="457" mi="0" ci="5" mb="0" cb="0"/><line nr="458" mi="0" ci="5" mb="0" cb="0"/><line nr="459" mi="0" ci="1" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="468" mi="0" ci="8" mb="0" cb="0"/><line nr="474" mi="7" ci="1" mb="2" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="2"/><line nr="476" mi="0" ci="7" mb="0" cb="0"/><line nr="478" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="729"/><counter type="BRANCH" missed="23" covered="75"/><counter type="LINE" missed="13" covered="173"/><counter type="COMPLEXITY" missed="19" covered="81"/><counter type="METHOD" missed="3" covered="48"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="MatchingCardinalityBipartiteHopcroftKarp.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="2"/><line nr="85" mi="0" ci="9" mb="0" cb="4"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="2"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="2"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="9" mb="0" cb="4"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="2"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="9" mb="1" cb="3"/><line nr="140" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="7" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="12" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="307"/><counter type="BRANCH" missed="1" covered="39"/><counter type="LINE" missed="1" covered="81"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EulerianTourImpl.java"><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="2"/><line nr="45" mi="0" ci="6" mb="0" cb="2"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="14" mb="1" cb="5"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="1" cb="1"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="1" cb="1"/><line nr="130" mi="0" ci="3" mb="1" cb="1"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="7" ci="0" mb="0" cb="0"/><line nr="137" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="14" mb="1" cb="5"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="2"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="1" cb="1"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="9" ci="1" mb="2" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="2"/><line nr="184" mi="0" ci="4" mb="1" cb="1"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="2"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="399"/><counter type="BRANCH" missed="11" covered="63"/><counter type="LINE" missed="8" covered="103"/><counter type="COMPLEXITY" missed="10" covered="34"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TreePathMaximaHagerup.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="1" cb="1"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="2"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="1" ci="7" mb="1" cb="1"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="13" ci="1" mb="4" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="2"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="1" cb="1"/><line nr="161" mi="0" ci="9" mb="0" cb="2"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="7" mb="1" cb="1"/><line nr="168" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="174" mi="0" ci="24" mb="2" cb="4"/><line nr="175" mi="2" ci="8" mb="1" cb="1"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="9" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="2"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="196" mi="0" ci="13" mb="0" cb="0"/><line nr="197" mi="0" ci="14" mb="0" cb="0"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="2"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="2"/><line nr="204" mi="0" ci="8" mb="0" cb="0"/><line nr="205" mi="0" ci="13" mb="0" cb="0"/><line nr="206" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="16" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="20" mb="0" cb="4"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="5" mb="0" cb="2"/><line nr="241" mi="0" ci="8" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="14" mb="0" cb="2"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="8" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="3" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="2"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="279" mi="7" ci="1" mb="2" cb="0"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="291" mi="12" ci="1" mb="2" cb="0"/><line nr="292" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="0" ci="9" mb="0" cb="0"/><line nr="294" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="12" mb="0" cb="2"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="8" mb="0" cb="0"/><line nr="299" mi="0" ci="8" mb="0" cb="0"/><line nr="300" mi="0" ci="8" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="2"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="5" mb="0" cb="0"/><line nr="312" mi="0" ci="7" mb="0" cb="2"/><line nr="313" mi="0" ci="8" mb="0" cb="0"/><line nr="314" mi="0" ci="8" mb="0" cb="0"/><line nr="315" mi="0" ci="8" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="6" mb="0" cb="2"/><line nr="318" mi="0" ci="8" mb="0" cb="0"/><line nr="319" mi="0" ci="8" mb="0" cb="0"/><line nr="320" mi="0" ci="4" mb="0" cb="0"/><line nr="322" mi="0" ci="6" mb="0" cb="2"/><line nr="323" mi="0" ci="8" mb="0" cb="0"/><line nr="324" mi="0" ci="8" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="5" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="334" mi="0" ci="7" mb="0" cb="2"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="2"/><line nr="339" mi="0" ci="11" mb="0" cb="2"/><line nr="341" mi="0" ci="3" mb="0" cb="2"/><line nr="342" mi="0" ci="7" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="9" mb="0" cb="0"/><line nr="354" mi="0" ci="6" mb="0" cb="0"/><line nr="355" mi="0" ci="6" mb="0" cb="0"/><line nr="356" mi="0" ci="7" mb="0" cb="2"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="8" ci="1" mb="2" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="7" mb="0" cb="2"/><line nr="372" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="6" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="375" mi="0" ci="8" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="2"/><line nr="377" mi="0" ci="9" mb="0" cb="0"/><line nr="378" mi="0" ci="4" mb="0" cb="0"/><line nr="380" mi="0" ci="5" mb="0" cb="0"/><line nr="382" mi="0" ci="2" mb="0" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="0"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="7" mb="0" cb="2"/><line nr="389" mi="0" ci="8" mb="0" cb="0"/><line nr="390" mi="0" ci="8" mb="0" cb="0"/><line nr="391" mi="0" ci="8" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="2"/><line nr="393" mi="0" ci="8" mb="0" cb="0"/><line nr="394" mi="0" ci="8" mb="0" cb="0"/><line nr="395" mi="0" ci="8" mb="0" cb="0"/><line nr="396" mi="0" ci="8" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="2" mb="0" cb="0"/><line nr="402" mi="0" ci="2" mb="0" cb="0"/><line nr="404" mi="0" ci="2" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="417" mi="0" ci="7" mb="0" cb="2"/><line nr="418" mi="0" ci="13" mb="0" cb="0"/><line nr="420" mi="0" ci="5" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="427" mi="0" ci="6" mb="0" cb="0"/><line nr="428" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="7" mb="0" cb="2"/><line nr="430" mi="0" ci="8" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="1" cb="1"/><line nr="432" mi="5" ci="0" mb="0" cb="0"/><line nr="434" mi="0" ci="5" mb="0" cb="0"/><line nr="435" mi="0" ci="6" mb="0" cb="0"/><line nr="436" mi="0" ci="8" mb="0" cb="0"/><line nr="437" mi="0" ci="8" mb="0" cb="0"/><line nr="438" mi="0" ci="8" mb="0" cb="0"/><line nr="440" mi="0" ci="2" mb="0" cb="0"/><line nr="444" mi="0" ci="5" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="5" mb="0" cb="0"/><line nr="450" mi="0" ci="7" mb="0" cb="2"/><line nr="451" mi="0" ci="6" mb="0" cb="0"/><line nr="452" mi="0" ci="8" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="1" cb="1"/><line nr="454" mi="1" ci="0" mb="0" cb="0"/><line nr="455" mi="0" ci="12" mb="0" cb="0"/><line nr="459" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="5" mb="0" cb="0"/><line nr="461" mi="0" ci="7" mb="0" cb="2"/><line nr="462" mi="0" ci="9" mb="0" cb="2"/><line nr="463" mi="0" ci="3" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="3" mb="0" cb="2"/><line nr="469" mi="0" ci="3" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="472" mi="0" ci="3" mb="0" cb="2"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="18" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="2"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="54" covered="1284"/><counter type="BRANCH" missed="19" covered="83"/><counter type="LINE" missed="3" covered="245"/><counter type="COMPLEXITY" missed="14" covered="53"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ConnectedComponentsUtils.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="2"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="13" ci="0" mb="2" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="5" ci="8" mb="1" cb="1"/><counter type="INSTRUCTION" missed="21" covered="68"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="MatchingWeightedBipartiteSSSP.java"><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="2"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="8" ci="1" mb="2" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="8" ci="1" mb="2" cb="0"/><line nr="104" mi="8" ci="1" mb="2" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="7" ci="1" mb="2" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="7" ci="1" mb="2" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="11" mb="0" cb="2"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="1" cb="1"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="2"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="2"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="9" mb="0" cb="0"/><line nr="157" mi="0" ci="10" mb="1" cb="5"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="12" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="7" mb="0" cb="2"/><line nr="187" mi="0" ci="9" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="53" covered="365"/><counter type="BRANCH" missed="12" covered="30"/><counter type="LINE" missed="4" covered="80"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IMatching.java"><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="8" ci="0" mb="2" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="2" cb="0"/><line nr="127" mi="8" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="2" cb="0"/><line nr="129" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="8" ci="0" mb="0" cb="0"/><line nr="139" mi="11" ci="0" mb="2" cb="0"/><line nr="140" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="2" cb="0"/><line nr="142" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="2" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="137" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ContractableGraph.java"><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="0" ci="17" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="9" mb="1" cb="1"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="9" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="15" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="1" cb="1"/><line nr="91" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="12" mb="0" cb="0"/><line nr="101" mi="0" ci="20" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="8" ci="1" mb="2" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="3" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="8" ci="0" mb="2" cb="0"/><line nr="170" mi="2" ci="0" mb="2" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="177" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="5" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="7" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="7" ci="0" mb="2" cb="0"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="2" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="6" ci="0" mb="0" cb="0"/><line nr="195" mi="12" ci="0" mb="0" cb="0"/><line nr="196" mi="12" ci="0" mb="0" cb="0"/><line nr="197" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="152" covered="356"/><counter type="BRANCH" missed="14" covered="16"/><counter type="LINE" missed="33" covered="72"/><counter type="COMPLEXITY" missed="13" covered="19"/><counter type="METHOD" missed="5" covered="12"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="ShortestPathSingleSourceBellmanFord.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="88" mi="0" ci="12" mb="0" cb="2"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="2"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="6" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="11" mb="0" cb="2"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="6" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="2"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="9" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="2"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="2"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="1" cb="1"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="1" cb="1"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="2"/><line nr="236" mi="0" ci="3" mb="1" cb="1"/><line nr="237" mi="5" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="27" covered="469"/><counter type="BRANCH" missed="6" covered="58"/><counter type="LINE" missed="5" covered="102"/><counter type="COMPLEXITY" missed="6" covered="34"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LowestCommonAncestorOfflineUnionFind.java"><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="10" mb="0" cb="2"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="2"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="2"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="27" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="2"/><line nr="76" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="2"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="117" mi="9" ci="1" mb="2" cb="0"/><line nr="118" mi="0" ci="11" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="2"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="380"/><counter type="BRANCH" missed="2" covered="28"/><counter type="LINE" missed="0" covered="71"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="LowestCommonAncestorOffline.java"><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="3" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="9"/><counter type="LINE" missed="8" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="3" covered="2"/></sourcefile><sourcefile name="ShortestPathAllPairsUtils.java"><line nr="38" mi="3" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="1" cb="1"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="2"/><line nr="91" mi="0" ci="12" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="11" mb="0" cb="2"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="12" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="7" ci="1" mb="2" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="19" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="1" cb="1"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="13" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="1" cb="1"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="2"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="7" ci="1" mb="2" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="9" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="7" mb="0" cb="2"/><line nr="213" mi="0" ci="6" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="1" cb="1"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="7" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="1" cb="1"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="0" cb="2"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="2"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="7" ci="1" mb="2" cb="0"/><line nr="240" mi="10" ci="1" mb="2" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="9" mb="0" cb="0"/><line nr="254" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="297" mi="10" ci="0" mb="0" cb="0"/><line nr="302" mi="10" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="12" mb="0" cb="0"/><line nr="328" mi="0" ci="12" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="4" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="0" ci="12" mb="0" cb="0"/><line nr="362" mi="0" ci="12" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="380" mi="7" ci="1" mb="2" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="2"/><line nr="382" mi="0" ci="7" mb="0" cb="0"/><line nr="384" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="530"/><counter type="BRANCH" missed="17" covered="33"/><counter type="LINE" missed="20" covered="120"/><counter type="COMPLEXITY" missed="17" covered="51"/><counter type="METHOD" missed="5" covered="38"/><counter type="CLASS" missed="1" covered="9"/></sourcefile><sourcefile name="VertexScoringImpl.java"><line nr="24" mi="3" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="7" ci="1" mb="2" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="43"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="6" covered="13"/><counter type="COMPLEXITY" missed="5" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="MinimumCostFlows.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="3" mb="3" cb="1"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="3" ci="3" mb="3" cb="1"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="75" mi="10" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="3" ci="3" mb="3" cb="1"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="9" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="3" ci="3" mb="3" cb="1"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="10" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="3" ci="3" mb="3" cb="1"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="3" ci="3" mb="3" cb="1"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="9" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="10" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="10" mb="1" cb="3"/><line nr="229" mi="0" ci="2" mb="0" cb="2"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="19" mb="0" cb="0"/><line nr="235" mi="0" ci="10" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="0" ci="10" mb="0" cb="0"/><line nr="250" mi="0" ci="10" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="19" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="0"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="10" mb="0" cb="0"/><line nr="272" mi="0" ci="10" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="278" mi="0" ci="6" mb="0" cb="0"/><line nr="281" mi="0" ci="6" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="11" mb="0" cb="2"/><line nr="290" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="1" cb="1"/><line nr="298" mi="5" ci="0" mb="0" cb="0"/><line nr="299" mi="0" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="11" mb="0" cb="2"/><line nr="305" mi="0" ci="8" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="1" cb="1"/><line nr="313" mi="0" ci="9" mb="1" cb="3"/><line nr="314" mi="0" ci="2" mb="0" cb="2"/><line nr="315" mi="0" ci="9" mb="1" cb="3"/><line nr="316" mi="0" ci="2" mb="0" cb="2"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><line nr="320" mi="0" ci="5" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="2"/><line nr="322" mi="0" ci="11" mb="0" cb="2"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="325" mi="0" ci="2" mb="1" cb="1"/><line nr="326" mi="0" ci="11" mb="0" cb="2"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="4" mb="0" cb="2"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="332" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="8" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="341" mi="0" ci="5" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="2"/><line nr="343" mi="0" ci="11" mb="0" cb="2"/><line nr="344" mi="0" ci="6" mb="0" cb="0"/><line nr="346" mi="0" ci="2" mb="1" cb="1"/><line nr="347" mi="0" ci="11" mb="0" cb="2"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="2"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="8" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="0" cb="0"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="7" mb="0" cb="0"/><line nr="377" mi="0" ci="11" mb="0" cb="0"/><line nr="380" mi="0" ci="11" mb="0" cb="2"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="11" mb="0" cb="2"/><line nr="383" mi="0" ci="9" mb="0" cb="0"/><line nr="385" mi="0" ci="4" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="3" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="2"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="7" mb="0" cb="0"/><line nr="397" mi="0" ci="2" mb="0" cb="0"/><line nr="398" mi="0" ci="11" mb="0" cb="2"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="8" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="402" mi="0" ci="11" mb="0" cb="2"/><line nr="403" mi="0" ci="5" mb="0" cb="0"/><line nr="404" mi="0" ci="8" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="406" mi="0" ci="2" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="408" mi="0" ci="7" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="11" mb="0" cb="2"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="8" mb="0" cb="0"/><line nr="413" mi="0" ci="1" mb="0" cb="0"/><line nr="414" mi="0" ci="11" mb="0" cb="2"/><line nr="415" mi="0" ci="5" mb="0" cb="0"/><line nr="416" mi="0" ci="8" mb="0" cb="0"/><line nr="417" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="2" mb="0" cb="0"/><line nr="421" mi="0" ci="3" mb="0" cb="0"/><line nr="428" mi="0" ci="2" mb="0" cb="2"/><line nr="429" mi="0" ci="3" mb="0" cb="0"/><line nr="430" mi="0" ci="22" mb="0" cb="0"/><line nr="431" mi="0" ci="5" mb="0" cb="0"/><line nr="432" mi="0" ci="7" mb="0" cb="0"/><line nr="436" mi="0" ci="10" mb="0" cb="2"/><line nr="437" mi="0" ci="7" mb="0" cb="0"/><line nr="442" mi="5" ci="0" mb="0" cb="0"/><line nr="447" mi="0" ci="10" mb="0" cb="2"/><line nr="448" mi="0" ci="7" mb="0" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="2"/><line nr="454" mi="0" ci="6" mb="0" cb="0"/><line nr="456" mi="0" ci="8" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="461" mi="0" ci="22" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="7" mb="0" cb="0"/><line nr="467" mi="0" ci="17" mb="0" cb="2"/><line nr="472" mi="5" ci="0" mb="0" cb="0"/><line nr="477" mi="0" ci="17" mb="0" cb="2"/><line nr="482" mi="0" ci="4" mb="0" cb="2"/><line nr="483" mi="0" ci="6" mb="0" cb="0"/><line nr="485" mi="0" ci="8" mb="0" cb="0"/><line nr="487" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="0" ci="2" mb="0" cb="2"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="13" mb="0" cb="2"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="1" mb="0" cb="0"/><line nr="497" mi="0" ci="13" mb="0" cb="2"/><line nr="501" mi="0" ci="7" mb="0" cb="0"/><line nr="502" mi="0" ci="1" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="509" mi="0" ci="3" mb="0" cb="0"/><line nr="510" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="513" mi="0" ci="4" mb="0" cb="0"/><line nr="515" mi="0" ci="10" mb="1" cb="3"/><line nr="516" mi="0" ci="3" mb="0" cb="0"/><line nr="532" mi="0" ci="6" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="0" ci="7" mb="0" cb="0"/><line nr="536" mi="0" ci="15" mb="0" cb="0"/><line nr="539" mi="0" ci="11" mb="0" cb="2"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="11" mb="0" cb="2"/><line nr="542" mi="0" ci="9" mb="0" cb="0"/><line nr="544" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="3" mb="0" cb="0"/><line nr="550" mi="0" ci="3" mb="0" cb="0"/><line nr="555" mi="0" ci="2" mb="0" cb="2"/><line nr="556" mi="0" ci="3" mb="0" cb="0"/><line nr="557" mi="0" ci="9" mb="0" cb="0"/><line nr="558" mi="0" ci="11" mb="0" cb="2"/><line nr="559" mi="0" ci="5" mb="0" cb="0"/><line nr="560" mi="0" ci="7" mb="0" cb="0"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="562" mi="0" ci="11" mb="0" cb="2"/><line nr="563" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="7" mb="0" cb="0"/><line nr="565" mi="0" ci="1" mb="0" cb="0"/><line nr="566" mi="0" ci="2" mb="0" cb="0"/><line nr="567" mi="0" ci="1" mb="0" cb="0"/><line nr="568" mi="0" ci="9" mb="0" cb="0"/><line nr="569" mi="0" ci="11" mb="0" cb="2"/><line nr="570" mi="0" ci="5" mb="0" cb="0"/><line nr="571" mi="0" ci="7" mb="0" cb="0"/><line nr="572" mi="0" ci="1" mb="0" cb="0"/><line nr="573" mi="0" ci="11" mb="0" cb="2"/><line nr="574" mi="0" ci="5" mb="0" cb="0"/><line nr="575" mi="0" ci="7" mb="0" cb="0"/><line nr="576" mi="0" ci="1" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="589" mi="0" ci="2" mb="0" cb="2"/><line nr="590" mi="0" ci="3" mb="0" cb="0"/><line nr="591" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="0" ci="11" mb="0" cb="2"/><line nr="593" mi="0" ci="4" mb="0" cb="0"/><line nr="594" mi="0" ci="2" mb="0" cb="2"/><line nr="595" mi="0" ci="5" mb="0" cb="0"/><line nr="596" mi="0" ci="5" mb="0" cb="0"/><line nr="597" mi="0" ci="2" mb="0" cb="2"/><line nr="598" mi="0" ci="5" mb="0" cb="0"/><line nr="599" mi="0" ci="5" mb="0" cb="0"/><line nr="602" mi="0" ci="1" mb="0" cb="0"/><line nr="603" mi="0" ci="3" mb="0" cb="0"/><line nr="604" mi="0" ci="11" mb="0" cb="2"/><line nr="605" mi="0" ci="4" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="0" cb="2"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="608" mi="0" ci="5" mb="0" cb="0"/><line nr="609" mi="0" ci="4" mb="0" cb="2"/><line nr="610" mi="0" ci="5" mb="0" cb="0"/><line nr="611" mi="0" ci="5" mb="0" cb="0"/><line nr="616" mi="0" ci="3" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="2"/><line nr="624" mi="0" ci="3" mb="0" cb="0"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="30" mb="0" cb="0"/><line nr="627" mi="0" ci="6" mb="0" cb="0"/><line nr="628" mi="0" ci="11" mb="0" cb="0"/><line nr="632" mi="0" ci="5" mb="0" cb="2"/><line nr="633" mi="0" ci="10" mb="0" cb="0"/><line nr="634" mi="0" ci="7" mb="0" cb="0"/><line nr="639" mi="5" ci="0" mb="0" cb="0"/><line nr="644" mi="0" ci="4" mb="0" cb="2"/><line nr="645" mi="0" ci="10" mb="0" cb="0"/><line nr="646" mi="0" ci="8" mb="0" cb="0"/><line nr="651" mi="0" ci="4" mb="0" cb="2"/><line nr="652" mi="0" ci="11" mb="0" cb="0"/><line nr="654" mi="0" ci="8" mb="0" cb="0"/><line nr="656" mi="0" ci="1" mb="0" cb="0"/><line nr="658" mi="0" ci="1" mb="0" cb="0"/><line nr="659" mi="0" ci="30" mb="0" cb="0"/><line nr="660" mi="0" ci="6" mb="0" cb="0"/><line nr="661" mi="0" ci="11" mb="0" cb="0"/><line nr="665" mi="0" ci="15" mb="0" cb="2"/><line nr="666" mi="0" ci="7" mb="0" cb="0"/><line nr="671" mi="5" ci="0" mb="0" cb="0"/><line nr="676" mi="0" ci="4" mb="0" cb="2"/><line nr="677" mi="0" ci="10" mb="0" cb="0"/><line nr="678" mi="0" ci="8" mb="0" cb="0"/><line nr="683" mi="0" ci="4" mb="0" cb="2"/><line nr="684" mi="0" ci="11" mb="0" cb="0"/><line nr="686" mi="0" ci="8" mb="0" cb="0"/><line nr="688" mi="0" ci="1" mb="0" cb="0"/><line nr="693" mi="0" ci="2" mb="0" cb="2"/><line nr="699" mi="0" ci="3" mb="0" cb="0"/><line nr="700" mi="0" ci="5" mb="0" cb="0"/><line nr="701" mi="0" ci="6" mb="0" cb="0"/><line nr="702" mi="0" ci="3" mb="0" cb="2"/><line nr="703" mi="0" ci="4" mb="0" cb="0"/><line nr="704" mi="0" ci="3" mb="0" cb="2"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="2" mb="0" cb="0"/><line nr="708" mi="0" ci="2" mb="0" cb="0"/><line nr="709" mi="0" ci="1" mb="0" cb="0"/><line nr="715" mi="0" ci="5" mb="0" cb="0"/><line nr="716" mi="0" ci="6" mb="0" cb="0"/><line nr="717" mi="0" ci="3" mb="0" cb="2"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="0" cb="2"/><line nr="720" mi="0" ci="2" mb="0" cb="0"/><line nr="721" mi="0" ci="2" mb="0" cb="0"/><line nr="726" mi="0" ci="7" mb="0" cb="0"/><line nr="729" mi="0" ci="2" mb="0" cb="2"/><line nr="730" mi="0" ci="3" mb="0" cb="0"/><line nr="731" mi="0" ci="11" mb="0" cb="2"/><line nr="732" mi="11" ci="1" mb="2" cb="0"/><line nr="733" mi="0" ci="1" mb="0" cb="0"/><line nr="734" mi="0" ci="11" mb="0" cb="2"/><line nr="735" mi="15" ci="1" mb="2" cb="0"/><line nr="737" mi="0" ci="1" mb="0" cb="0"/><line nr="742" mi="0" ci="3" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><line nr="744" mi="0" ci="3" mb="0" cb="0"/><line nr="745" mi="0" ci="3" mb="0" cb="0"/><line nr="747" mi="0" ci="2" mb="0" cb="0"/><line nr="748" mi="0" ci="3" mb="0" cb="0"/><line nr="750" mi="0" ci="10" mb="1" cb="3"/><line nr="751" mi="0" ci="3" mb="0" cb="0"/><line nr="760" mi="0" ci="2" mb="0" cb="0"/><line nr="761" mi="0" ci="7" mb="0" cb="0"/><line nr="762" mi="0" ci="9" mb="0" cb="0"/><line nr="765" mi="0" ci="11" mb="0" cb="2"/><line nr="766" mi="0" ci="3" mb="0" cb="0"/><line nr="767" mi="0" ci="11" mb="0" cb="2"/><line nr="768" mi="0" ci="9" mb="0" cb="0"/><line nr="770" mi="0" ci="4" mb="0" cb="0"/><line nr="773" mi="0" ci="3" mb="0" cb="0"/><line nr="774" mi="0" ci="3" mb="0" cb="0"/><line nr="778" mi="0" ci="2" mb="0" cb="2"/><line nr="779" mi="0" ci="3" mb="0" cb="0"/><line nr="780" mi="0" ci="4" mb="0" cb="0"/><line nr="781" mi="0" ci="11" mb="0" cb="2"/><line nr="782" mi="0" ci="4" mb="0" cb="0"/><line nr="783" mi="0" ci="2" mb="0" cb="2"/><line nr="784" mi="0" ci="5" mb="0" cb="0"/><line nr="785" mi="0" ci="5" mb="0" cb="0"/><line nr="786" mi="0" ci="2" mb="0" cb="2"/><line nr="787" mi="0" ci="5" mb="0" cb="0"/><line nr="788" mi="0" ci="5" mb="0" cb="0"/><line nr="791" mi="0" ci="2" mb="0" cb="0"/><line nr="792" mi="0" ci="1" mb="0" cb="0"/><line nr="793" mi="0" ci="4" mb="0" cb="0"/><line nr="794" mi="0" ci="11" mb="0" cb="2"/><line nr="795" mi="0" ci="4" mb="0" cb="0"/><line nr="796" mi="0" ci="4" mb="0" cb="2"/><line nr="797" mi="0" ci="5" mb="0" cb="0"/><line nr="798" mi="0" ci="5" mb="0" cb="0"/><line nr="799" mi="0" ci="4" mb="0" cb="2"/><line nr="800" mi="0" ci="5" mb="0" cb="0"/><line nr="801" mi="0" ci="5" mb="0" cb="0"/><line nr="804" mi="0" ci="2" mb="0" cb="0"/><line nr="807" mi="0" ci="3" mb="0" cb="0"/><line nr="813" mi="0" ci="2" mb="0" cb="2"/><line nr="814" mi="0" ci="3" mb="0" cb="0"/><line nr="815" mi="0" ci="22" mb="0" cb="0"/><line nr="816" mi="0" ci="6" mb="0" cb="0"/><line nr="817" mi="0" ci="7" mb="0" cb="0"/><line nr="821" mi="0" ci="10" mb="0" cb="2"/><line nr="822" mi="0" ci="7" mb="0" cb="0"/><line nr="827" mi="5" ci="0" mb="0" cb="0"/><line nr="832" mi="0" ci="10" mb="0" cb="2"/><line nr="833" mi="0" ci="7" mb="0" cb="0"/><line nr="838" mi="0" ci="4" mb="0" cb="2"/><line nr="839" mi="0" ci="6" mb="0" cb="0"/><line nr="841" mi="0" ci="8" mb="0" cb="0"/><line nr="843" mi="0" ci="1" mb="0" cb="0"/><line nr="845" mi="0" ci="1" mb="0" cb="0"/><line nr="846" mi="0" ci="22" mb="0" cb="0"/><line nr="847" mi="0" ci="6" mb="0" cb="0"/><line nr="848" mi="0" ci="7" mb="0" cb="0"/><line nr="852" mi="0" ci="17" mb="0" cb="2"/><line nr="857" mi="5" ci="0" mb="0" cb="0"/><line nr="862" mi="0" ci="17" mb="0" cb="2"/><line nr="867" mi="0" ci="4" mb="0" cb="2"/><line nr="868" mi="0" ci="6" mb="0" cb="0"/><line nr="870" mi="0" ci="8" mb="0" cb="0"/><line nr="872" mi="0" ci="1" mb="0" cb="0"/><line nr="881" mi="0" ci="2" mb="0" cb="2"/><line nr="882" mi="0" ci="3" mb="0" cb="0"/><line nr="883" mi="0" ci="13" mb="0" cb="2"/><line nr="884" mi="0" ci="2" mb="0" cb="0"/><line nr="885" mi="0" ci="1" mb="0" cb="0"/><line nr="886" mi="0" ci="13" mb="0" cb="2"/><line nr="890" mi="0" ci="7" mb="0" cb="0"/><line nr="891" mi="0" ci="1" mb="0" cb="0"/><line nr="895" mi="0" ci="3" mb="0" cb="0"/><line nr="902" mi="0" ci="9" mb="0" cb="0"/><line nr="903" mi="0" ci="1" mb="0" cb="0"/><line nr="908" mi="0" ci="8" mb="0" cb="0"/><line nr="909" mi="0" ci="1" mb="0" cb="0"/><line nr="914" mi="0" ci="2" mb="0" cb="0"/><line nr="915" mi="0" ci="3" mb="0" cb="0"/><line nr="917" mi="1" ci="11" mb="2" cb="4"/><line nr="919" mi="0" ci="3" mb="0" cb="0"/><line nr="921" mi="0" ci="2" mb="0" cb="0"/><line nr="922" mi="0" ci="7" mb="0" cb="0"/><line nr="923" mi="0" ci="13" mb="0" cb="0"/><line nr="925" mi="0" ci="11" mb="0" cb="2"/><line nr="926" mi="0" ci="3" mb="0" cb="0"/><line nr="927" mi="0" ci="11" mb="0" cb="2"/><line nr="928" mi="0" ci="9" mb="0" cb="0"/><line nr="930" mi="0" ci="4" mb="0" cb="0"/><line nr="932" mi="0" ci="3" mb="0" cb="0"/><line nr="933" mi="0" ci="3" mb="0" cb="0"/><line nr="934" mi="0" ci="11" mb="0" cb="2"/><line nr="935" mi="0" ci="6" mb="0" cb="0"/><line nr="936" mi="0" ci="11" mb="0" cb="2"/><line nr="937" mi="0" ci="6" mb="0" cb="0"/><line nr="944" mi="0" ci="4" mb="0" cb="0"/><line nr="946" mi="0" ci="5" mb="0" cb="0"/><line nr="947" mi="0" ci="5" mb="0" cb="0"/><line nr="949" mi="0" ci="3" mb="0" cb="0"/><line nr="951" mi="0" ci="6" mb="0" cb="0"/><line nr="953" mi="0" ci="2" mb="1" cb="1"/><line nr="954" mi="0" ci="3" mb="0" cb="0"/><line nr="955" mi="0" ci="3" mb="0" cb="0"/><line nr="956" mi="0" ci="5" mb="1" cb="1"/><line nr="957" mi="5" ci="0" mb="0" cb="0"/><line nr="958" mi="0" ci="26" mb="0" cb="0"/><line nr="959" mi="0" ci="11" mb="0" cb="0"/><line nr="963" mi="0" ci="12" mb="0" cb="2"/><line nr="968" mi="5" ci="0" mb="0" cb="0"/><line nr="973" mi="0" ci="10" mb="0" cb="2"/><line nr="974" mi="0" ci="7" mb="0" cb="0"/><line nr="979" mi="0" ci="4" mb="0" cb="2"/><line nr="980" mi="0" ci="6" mb="0" cb="0"/><line nr="982" mi="0" ci="8" mb="0" cb="0"/><line nr="984" mi="0" ci="1" mb="0" cb="0"/><line nr="986" mi="0" ci="1" mb="0" cb="0"/><line nr="987" mi="26" ci="0" mb="0" cb="0"/><line nr="988" mi="11" ci="0" mb="0" cb="0"/><line nr="992" mi="12" ci="0" mb="2" cb="0"/><line nr="997" mi="5" ci="0" mb="0" cb="0"/><line nr="1002" mi="17" ci="0" mb="2" cb="0"/><line nr="1007" mi="4" ci="0" mb="2" cb="0"/><line nr="1008" mi="6" ci="0" mb="0" cb="0"/><line nr="1010" mi="8" ci="0" mb="0" cb="0"/><line nr="1012" mi="1" ci="0" mb="0" cb="0"/><line nr="1017" mi="0" ci="2" mb="1" cb="1"/><line nr="1018" mi="0" ci="3" mb="0" cb="0"/><line nr="1019" mi="0" ci="5" mb="1" cb="1"/><line nr="1020" mi="5" ci="0" mb="0" cb="0"/><line nr="1021" mi="0" ci="5" mb="0" cb="0"/><line nr="1022" mi="0" ci="3" mb="0" cb="2"/><line nr="1023" mi="0" ci="2" mb="0" cb="0"/><line nr="1024" mi="0" ci="3" mb="0" cb="2"/><line nr="1025" mi="0" ci="3" mb="0" cb="0"/><line nr="1026" mi="0" ci="2" mb="0" cb="0"/><line nr="1028" mi="0" ci="2" mb="0" cb="0"/><line nr="1029" mi="0" ci="1" mb="0" cb="0"/><line nr="1030" mi="5" ci="0" mb="0" cb="0"/><line nr="1031" mi="3" ci="0" mb="2" cb="0"/><line nr="1032" mi="2" ci="0" mb="0" cb="0"/><line nr="1033" mi="3" ci="0" mb="2" cb="0"/><line nr="1034" mi="3" ci="0" mb="0" cb="0"/><line nr="1035" mi="2" ci="0" mb="0" cb="0"/><line nr="1040" mi="0" ci="2" mb="1" cb="1"/><line nr="1041" mi="0" ci="3" mb="0" cb="0"/><line nr="1042" mi="0" ci="4" mb="0" cb="0"/><line nr="1043" mi="0" ci="6" mb="0" cb="0"/><line nr="1044" mi="0" ci="3" mb="0" cb="2"/><line nr="1045" mi="0" ci="4" mb="0" cb="0"/><line nr="1046" mi="0" ci="3" mb="0" cb="2"/><line nr="1047" mi="0" ci="2" mb="0" cb="0"/><line nr="1048" mi="0" ci="2" mb="0" cb="0"/><line nr="1050" mi="0" ci="2" mb="0" cb="0"/><line nr="1051" mi="0" ci="1" mb="0" cb="0"/><line nr="1052" mi="4" ci="0" mb="0" cb="0"/><line nr="1053" mi="6" ci="0" mb="0" cb="0"/><line nr="1054" mi="3" ci="0" mb="2" cb="0"/><line nr="1055" mi="4" ci="0" mb="0" cb="0"/><line nr="1056" mi="3" ci="0" mb="2" cb="0"/><line nr="1057" mi="2" ci="0" mb="0" cb="0"/><line nr="1058" mi="2" ci="0" mb="0" cb="0"/><line nr="1062" mi="0" ci="2" mb="0" cb="2"/><line nr="1063" mi="0" ci="7" mb="0" cb="0"/><line nr="1066" mi="0" ci="2" mb="1" cb="1"/><line nr="1067" mi="0" ci="3" mb="0" cb="0"/><line nr="1068" mi="0" ci="13" mb="0" cb="2"/><line nr="1069" mi="0" ci="2" mb="0" cb="0"/><line nr="1070" mi="0" ci="1" mb="0" cb="0"/><line nr="1071" mi="13" ci="0" mb="2" cb="0"/><line nr="1073" mi="0" ci="7" mb="0" cb="0"/><line nr="1075" mi="0" ci="1" mb="0" cb="0"/><line nr="1080" mi="0" ci="3" mb="1" cb="1"/><line nr="1081" mi="1" ci="0" mb="0" cb="0"/><line nr="1082" mi="0" ci="3" mb="0" cb="2"/><line nr="1083" mi="0" ci="3" mb="0" cb="0"/><line nr="1084" mi="0" ci="3" mb="1" cb="1"/><line nr="1085" mi="0" ci="3" mb="0" cb="0"/><line nr="1086" mi="0" ci="11" mb="0" cb="2"/><line nr="1087" mi="0" ci="11" mb="0" cb="4"/><line nr="1088" mi="0" ci="6" mb="0" cb="0"/><line nr="1089" mi="0" ci="1" mb="0" cb="0"/><line nr="1090" mi="11" ci="0" mb="2" cb="0"/><line nr="1091" mi="13" ci="0" mb="4" cb="0"/><line nr="1092" mi="6" ci="0" mb="0" cb="0"/><line nr="1094" mi="0" ci="1" mb="0" cb="0"/><line nr="1095" mi="0" ci="3" mb="1" cb="1"/><line nr="1096" mi="3" ci="0" mb="0" cb="0"/><line nr="1097" mi="11" ci="0" mb="2" cb="0"/><line nr="1098" mi="11" ci="0" mb="4" cb="0"/><line nr="1099" mi="6" ci="0" mb="0" cb="0"/><line nr="1100" mi="1" ci="0" mb="0" cb="0"/><line nr="1101" mi="0" ci="11" mb="0" cb="2"/><line nr="1102" mi="0" ci="13" mb="0" cb="4"/><line nr="1103" mi="0" ci="6" mb="0" cb="0"/><line nr="1106" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="438" covered="2605"/><counter type="BRANCH" missed="70" covered="236"/><counter type="LINE" missed="77" covered="492"/><counter type="COMPLEXITY" missed="66" covered="174"/><counter type="METHOD" missed="18" covered="69"/><counter type="CLASS" missed="1" covered="14"/></sourcefile><sourcefile name="TreePathMaximaUtils.java"><line nr="37" mi="3" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="1" cb="3"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="9" mb="0" cb="0"/><line nr="85" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="11" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="0" cb="0"/><line nr="184" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="198" mi="11" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="203" mi="8" ci="0" mb="0" cb="0"/><line nr="208" mi="8" ci="0" mb="0" cb="0"/><line nr="213" mi="4" ci="0" mb="0" cb="0"/><line nr="218" mi="3" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="224" mi="7" ci="1" mb="2" cb="0"/><line nr="225" mi="0" ci="6" mb="1" cb="3"/><line nr="226" mi="8" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="2" ci="8" mb="1" cb="1"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="5" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="2" ci="8" mb="1" cb="1"/><line nr="272" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="7" ci="1" mb="2" cb="0"/><line nr="280" mi="0" ci="3" mb="0" cb="2"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="7" mb="0" cb="2"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="7" ci="1" mb="2" cb="0"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="11" mb="0" cb="2"/><line nr="300" mi="0" ci="8" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="1" cb="1"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="11" mb="0" cb="2"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="2"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="7" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="11" mb="0" cb="2"/><line nr="321" mi="0" ci="7" mb="0" cb="2"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="11" mb="1" cb="3"/><line nr="325" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="411"/><counter type="BRANCH" missed="12" covered="26"/><counter type="LINE" missed="19" covered="97"/><counter type="COMPLEXITY" missed="19" covered="41"/><counter type="METHOD" missed="10" covered="31"/><counter type="CLASS" missed="1" covered="8"/></sourcefile><sourcefile name="LowestCommonAncestorOfflineUtils.java"><line nr="30" mi="3" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="3" ci="3" mb="3" cb="1"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="11" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="11" ci="0" mb="0" cb="0"/><line nr="171" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="8" ci="0" mb="0" cb="0"/><line nr="180" mi="8" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="1" mb="2" cb="0"/><line nr="197" mi="0" ci="6" mb="1" cb="3"/><line nr="198" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="2" ci="8" mb="1" cb="1"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="259" mi="2" ci="8" mb="1" cb="1"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="7" ci="1" mb="2" cb="0"/><line nr="272" mi="0" ci="3" mb="0" cb="2"/><line nr="273" mi="0" ci="7" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="158" covered="197"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="33" covered="48"/><counter type="COMPLEXITY" missed="26" covered="22"/><counter type="METHOD" missed="19" covered="20"/><counter type="CLASS" missed="2" covered="7"/></sourcefile><sourcefile name="FlowCirculation.java"/><sourcefile name="CyclesFinderTarjan.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="1" cb="1"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="16" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="10" ci="1" mb="2" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="2"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="2"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="286"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="2" covered="65"/><counter type="COMPLEXITY" missed="2" covered="18"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="VertexPartitions.java"><line nr="44" mi="3" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="13" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="2"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="14" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="2"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="8" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="34" mb="0" cb="0"/><line nr="103" mi="19" ci="0" mb="6" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="12" mb="0" cb="2"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="2"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="12" mb="0" cb="2"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="2"/><line nr="135" mi="0" ci="11" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="2"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="34" mb="0" cb="0"/><line nr="148" mi="27" ci="0" mb="6" cb="0"/><line nr="149" mi="8" ci="0" mb="2" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="9" mb="1" cb="1"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="8" mb="0" cb="2"/><line nr="170" mi="0" ci="16" mb="0" cb="0"/><line nr="171" mi="0" ci="9" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="2"/><line nr="175" mi="0" ci="16" mb="0" cb="0"/><line nr="176" mi="0" ci="9" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="9" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="183" mi="0" ci="8" mb="0" cb="2"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="2"/><line nr="193" mi="7" ci="1" mb="2" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="2"/><line nr="195" mi="0" ci="16" mb="0" cb="0"/><line nr="196" mi="0" ci="13" mb="0" cb="0"/><line nr="200" mi="12" ci="1" mb="4" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="2"/><line nr="202" mi="0" ci="16" mb="0" cb="0"/><line nr="203" mi="0" ci="13" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="205" mi="0" ci="13" mb="0" cb="0"/><line nr="209" mi="0" ci="9" mb="0" cb="2"/><line nr="210" mi="0" ci="9" mb="0" cb="2"/><line nr="211" mi="0" ci="4" mb="0" cb="4"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="2"/><line nr="215" mi="0" ci="2" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="10" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="8" mb="0" cb="2"/><line nr="227" mi="0" ci="8" mb="0" cb="2"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="2"/><line nr="230" mi="0" ci="9" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="2"/><line nr="232" mi="0" ci="9" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="9" mb="0" cb="0"/><line nr="239" mi="0" ci="10" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="244" mi="8" ci="0" mb="2" cb="0"/><line nr="245" mi="3" ci="0" mb="2" cb="0"/><line nr="246" mi="2" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="250" mi="4" ci="0" mb="0" cb="0"/><line nr="252" mi="7" ci="0" mb="2" cb="0"/><line nr="253" mi="16" ci="0" mb="0" cb="0"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="9" ci="0" mb="0" cb="0"/><line nr="256" mi="6" ci="0" mb="0" cb="0"/><line nr="257" mi="4" ci="0" mb="2" cb="0"/><line nr="258" mi="7" ci="0" mb="0" cb="0"/><line nr="259" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="4" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="7" ci="0" mb="2" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="4" ci="0" mb="0" cb="0"/><line nr="267" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="9" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="274" mi="3" ci="0" mb="0" cb="0"/><line nr="275" mi="13" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="7" mb="0" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="7" mb="0" cb="0"/><line nr="293" mi="8" ci="1" mb="2" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="2"/><line nr="297" mi="0" ci="3" mb="0" cb="0"/><line nr="298" mi="0" ci="7" mb="0" cb="2"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="2" mb="1" cb="1"/><line nr="302" mi="0" ci="8" mb="0" cb="2"/><line nr="303" mi="0" ci="6" mb="0" cb="0"/><line nr="304" mi="0" ci="6" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="2"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="1" cb="1"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="7" ci="0" mb="2" cb="0"/><line nr="316" mi="13" ci="0" mb="2" cb="0"/><line nr="317" mi="8" ci="0" mb="2" cb="0"/><line nr="318" mi="3" ci="0" mb="0" cb="0"/><line nr="319" mi="5" ci="0" mb="0" cb="0"/><line nr="320" mi="10" ci="0" mb="8" cb="0"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="4" ci="0" mb="2" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="324" mi="3" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="5" ci="0" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="328" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="11" ci="0" mb="2" cb="0"/><line nr="330" mi="4" ci="0" mb="0" cb="0"/><line nr="331" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="0" ci="3" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="9" ci="1" mb="2" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="4" mb="0" cb="0"/><line nr="350" mi="0" ci="1" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="8" mb="0" cb="0"/><line nr="364" mi="0" ci="8" mb="0" cb="0"/><line nr="369" mi="0" ci="8" mb="0" cb="0"/><line nr="374" mi="0" ci="9" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="384" mi="0" ci="9" mb="0" cb="0"/><line nr="385" mi="0" ci="8" mb="0" cb="2"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="12" mb="0" cb="2"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="12" mb="0" cb="2"/><line nr="391" mi="0" ci="13" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="13" ci="0" mb="0" cb="0"/><line nr="398" mi="3" ci="0" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="2" mb="0" cb="0"/><line nr="410" mi="0" ci="5" mb="0" cb="0"/><line nr="411" mi="9" ci="1" mb="2" cb="0"/><line nr="412" mi="0" ci="5" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="0"/><line nr="424" mi="0" ci="8" mb="0" cb="0"/><line nr="429" mi="0" ci="8" mb="0" cb="0"/><line nr="434" mi="0" ci="8" mb="0" cb="0"/><line nr="439" mi="0" ci="9" mb="0" cb="0"/><line nr="444" mi="0" ci="3" mb="0" cb="0"/><line nr="449" mi="0" ci="9" mb="0" cb="0"/><line nr="450" mi="0" ci="8" mb="0" cb="2"/><line nr="451" mi="0" ci="5" mb="0" cb="0"/><line nr="452" mi="0" ci="5" mb="0" cb="0"/><line nr="453" mi="0" ci="12" mb="0" cb="2"/><line nr="454" mi="0" ci="5" mb="0" cb="0"/><line nr="455" mi="0" ci="12" mb="0" cb="2"/><line nr="456" mi="0" ci="15" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="462" mi="13" ci="0" mb="0" cb="0"/><line nr="463" mi="3" ci="0" mb="0" cb="0"/><line nr="469" mi="7" ci="1" mb="2" cb="0"/><line nr="470" mi="0" ci="3" mb="0" cb="2"/><line nr="471" mi="0" ci="7" mb="0" cb="0"/><line nr="473" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="393" covered="1119"/><counter type="BRANCH" missed="59" covered="93"/><counter type="LINE" missed="56" covered="182"/><counter type="COMPLEXITY" missed="41" covered="77"/><counter type="METHOD" missed="10" covered="32"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="VertexPartition.java"><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="136" mi="12" ci="0" mb="0" cb="0"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="2"/><line nr="222" mi="0" ci="8" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="2"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="7" mb="0" cb="2"/><line nr="257" mi="0" ci="8" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="4" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="1" cb="1"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="16" mb="0" cb="2"/><line nr="266" mi="0" ci="2" mb="0" cb="2"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="25" covered="156"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="4" covered="31"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaximumFlowAbstract.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="1" cb="3"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="1" cb="3"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="2"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="12" mb="0" cb="2"/><line nr="114" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="12" ci="0" mb="2" cb="0"/><line nr="119" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="15" ci="0" mb="2" cb="0"/><line nr="124" mi="7" ci="0" mb="0" cb="0"/><line nr="125" mi="15" ci="0" mb="2" cb="0"/><line nr="126" mi="8" ci="0" mb="0" cb="0"/><line nr="128" mi="15" ci="0" mb="2" cb="0"/><line nr="129" mi="7" ci="0" mb="2" cb="0"/><line nr="130" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="2" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="12" ci="0" mb="2" cb="0"/><line nr="141" mi="8" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="15" ci="0" mb="2" cb="0"/><line nr="146" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="15" ci="0" mb="2" cb="0"/><line nr="148" mi="8" ci="0" mb="0" cb="0"/><line nr="150" mi="15" ci="0" mb="2" cb="0"/><line nr="151" mi="7" ci="0" mb="2" cb="0"/><line nr="152" mi="7" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="2" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="0" ci="12" mb="0" cb="2"/><line nr="163" mi="0" ci="11" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="15" mb="0" cb="2"/><line nr="168" mi="0" ci="11" mb="0" cb="0"/><line nr="169" mi="0" ci="15" mb="0" cb="2"/><line nr="170" mi="0" ci="12" mb="0" cb="0"/><line nr="172" mi="0" ci="15" mb="0" cb="2"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="0" ci="11" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="2"/><line nr="176" mi="0" ci="10" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="12" mb="0" cb="2"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="15" mb="0" cb="2"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="192" mi="0" ci="15" mb="0" cb="2"/><line nr="193" mi="0" ci="12" mb="0" cb="0"/><line nr="195" mi="0" ci="15" mb="0" cb="2"/><line nr="196" mi="0" ci="7" mb="0" cb="2"/><line nr="197" mi="0" ci="11" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="2"/><line nr="199" mi="0" ci="10" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="8" mb="1" cb="3"/><line nr="211" mi="0" ci="11" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="2"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="217" mi="0" ci="11" mb="0" cb="0"/><line nr="219" mi="0" ci="11" mb="0" cb="2"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="11" mb="0" cb="2"/><line nr="222" mi="0" ci="9" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="2"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="11" mb="0" cb="2"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="8" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="11" mb="0" cb="2"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="8" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="11" mb="0" cb="2"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="8" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="248" mi="0" ci="11" mb="0" cb="2"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="260" mi="0" ci="22" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="10" mb="0" cb="2"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="5" ci="0" mb="0" cb="0"/><line nr="277" mi="10" ci="0" mb="2" cb="0"/><line nr="278" mi="7" ci="0" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="2"/><line nr="284" mi="0" ci="6" mb="0" cb="0"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="22" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="7" mb="0" cb="0"/><line nr="299" mi="0" ci="10" mb="0" cb="2"/><line nr="300" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="10" ci="0" mb="2" cb="0"/><line nr="311" mi="7" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="2"/><line nr="317" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="8" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="347" mi="0" ci="2" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="349" mi="0" ci="3" mb="0" cb="0"/><line nr="350" mi="0" ci="3" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="4" mb="0" cb="0"/><line nr="354" mi="0" ci="4" mb="0" cb="0"/><line nr="355" mi="0" ci="5" mb="0" cb="0"/><line nr="356" mi="0" ci="3" mb="0" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="364" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="2" mb="0" cb="0"/><line nr="369" mi="0" ci="3" mb="0" cb="0"/><line nr="370" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="0" ci="7" mb="0" cb="0"/><line nr="373" mi="0" ci="3" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="3" mb="0" cb="0"/><line nr="378" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="2" mb="0" cb="0"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="382" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="11" mb="0" cb="2"/><line nr="384" mi="0" ci="7" mb="0" cb="0"/><line nr="385" mi="0" ci="11" mb="0" cb="2"/><line nr="386" mi="0" ci="7" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="0"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="0"/><line nr="391" mi="0" ci="4" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="1" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="2"/><line nr="406" mi="0" ci="13" mb="0" cb="2"/><line nr="407" mi="0" ci="16" mb="0" cb="2"/><line nr="410" mi="0" ci="12" mb="0" cb="2"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="17" mb="0" cb="6"/><line nr="413" mi="0" ci="5" mb="0" cb="0"/><line nr="414" mi="0" ci="2" mb="0" cb="0"/><line nr="415" mi="0" ci="4" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="2"/><line nr="419" mi="0" ci="2" mb="0" cb="0"/><line nr="420" mi="0" ci="12" mb="0" cb="2"/><line nr="421" mi="0" ci="7" mb="0" cb="0"/><line nr="424" mi="0" ci="12" mb="0" cb="2"/><line nr="425" mi="0" ci="6" mb="0" cb="2"/><line nr="426" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="18" mb="0" cb="4"/><line nr="429" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="2"/><line nr="434" mi="0" ci="13" mb="0" cb="2"/><line nr="435" mi="0" ci="15" mb="0" cb="2"/><line nr="438" mi="0" ci="12" mb="0" cb="2"/><line nr="439" mi="0" ci="5" mb="0" cb="0"/><line nr="440" mi="0" ci="17" mb="1" cb="5"/><line nr="441" mi="0" ci="4" mb="0" cb="0"/><line nr="442" mi="0" ci="2" mb="0" cb="0"/><line nr="443" mi="0" ci="4" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="1" cb="1"/><line nr="447" mi="2" ci="0" mb="0" cb="0"/><line nr="448" mi="12" ci="0" mb="2" cb="0"/><line nr="449" mi="4" ci="0" mb="0" cb="0"/><line nr="450" mi="4" ci="0" mb="0" cb="0"/><line nr="451" mi="8" ci="0" mb="2" cb="0"/><line nr="453" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="1" ci="0" mb="0" cb="0"/><line nr="456" mi="2" ci="0" mb="0" cb="0"/><line nr="460" mi="12" ci="0" mb="2" cb="0"/><line nr="461" mi="6" ci="0" mb="2" cb="0"/><line nr="462" mi="2" ci="0" mb="0" cb="0"/><line nr="463" mi="18" ci="0" mb="4" cb="0"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="12" mb="0" cb="2"/><line nr="469" mi="0" ci="4" mb="0" cb="2"/><line nr="471" mi="0" ci="10" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="4" mb="0" cb="2"/><line nr="476" mi="0" ci="12" mb="0" cb="2"/><line nr="477" mi="0" ci="14" mb="0" cb="2"/><line nr="478" mi="0" ci="8" mb="0" cb="0"/><line nr="479" mi="0" ci="14" mb="0" cb="2"/><line nr="480" mi="0" ci="8" mb="0" cb="0"/><line nr="481" mi="0" ci="2" mb="0" cb="0"/><line nr="483" mi="0" ci="12" mb="0" cb="2"/><line nr="484" mi="0" ci="15" mb="0" cb="2"/><line nr="485" mi="0" ci="8" mb="0" cb="2"/><line nr="486" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="2" mb="0" cb="0"/><line nr="492" mi="0" ci="4" mb="0" cb="0"/><line nr="493" mi="0" ci="12" mb="0" cb="2"/><line nr="494" mi="0" ci="4" mb="0" cb="2"/><line nr="496" mi="0" ci="9" mb="0" cb="0"/><line nr="499" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="4" mb="0" cb="2"/><line nr="501" mi="0" ci="12" mb="0" cb="2"/><line nr="502" mi="0" ci="14" mb="0" cb="2"/><line nr="503" mi="0" ci="7" mb="0" cb="0"/><line nr="504" mi="0" ci="14" mb="0" cb="2"/><line nr="505" mi="0" ci="7" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="12" mb="0" cb="2"/><line nr="509" mi="0" ci="15" mb="0" cb="2"/><line nr="510" mi="0" ci="8" mb="1" cb="1"/><line nr="511" mi="0" ci="6" mb="0" cb="0"/><line nr="513" mi="0" ci="2" mb="0" cb="0"/><line nr="517" mi="12" ci="0" mb="2" cb="0"/><line nr="518" mi="4" ci="0" mb="2" cb="0"/><line nr="520" mi="14" ci="0" mb="0" cb="0"/><line nr="523" mi="2" ci="0" mb="0" cb="0"/><line nr="524" mi="4" ci="0" mb="2" cb="0"/><line nr="525" mi="12" ci="0" mb="2" cb="0"/><line nr="526" mi="14" ci="0" mb="2" cb="0"/><line nr="527" mi="8" ci="0" mb="0" cb="0"/><line nr="528" mi="14" ci="0" mb="2" cb="0"/><line nr="529" mi="8" ci="0" mb="0" cb="0"/><line nr="530" mi="2" ci="0" mb="0" cb="0"/><line nr="532" mi="12" ci="0" mb="2" cb="0"/><line nr="533" mi="15" ci="0" mb="2" cb="0"/><line nr="534" mi="8" ci="0" mb="2" cb="0"/><line nr="535" mi="10" ci="0" mb="0" cb="0"/><line nr="537" mi="2" ci="0" mb="0" cb="0"/><line nr="541" mi="4" ci="0" mb="0" cb="0"/><line nr="542" mi="12" ci="0" mb="2" cb="0"/><line nr="543" mi="4" ci="0" mb="2" cb="0"/><line nr="545" mi="13" ci="0" mb="0" cb="0"/><line nr="548" mi="2" ci="0" mb="0" cb="0"/><line nr="549" mi="4" ci="0" mb="2" cb="0"/><line nr="550" mi="12" ci="0" mb="2" cb="0"/><line nr="551" mi="14" ci="0" mb="2" cb="0"/><line nr="552" mi="7" ci="0" mb="0" cb="0"/><line nr="553" mi="14" ci="0" mb="2" cb="0"/><line nr="554" mi="7" ci="0" mb="0" cb="0"/><line nr="555" mi="2" ci="0" mb="0" cb="0"/><line nr="557" mi="12" ci="0" mb="2" cb="0"/><line nr="558" mi="15" ci="0" mb="2" cb="0"/><line nr="559" mi="8" ci="0" mb="2" cb="0"/><line nr="560" mi="10" ci="0" mb="0" cb="0"/><line nr="562" mi="2" ci="0" mb="0" cb="0"/><line nr="566" mi="0" ci="5" mb="0" cb="0"/><line nr="567" mi="0" ci="16" mb="0" cb="4"/><counter type="INSTRUCTION" missed="629" covered="1529"/><counter type="BRANCH" missed="86" covered="150"/><counter type="LINE" missed="81" covered="248"/><counter type="COMPLEXITY" missed="54" covered="100"/><counter type="METHOD" missed="8" covered="28"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="MaximumFlowPushRelabel.java"><line nr="72" mi="0" ci="20" mb="0" cb="0"/><line nr="73" mi="0" ci="24" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="13" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="13" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="13" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="13" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="11" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="11" mb="0" cb="0"/><line nr="174" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="10" mb="0" cb="2"/><line nr="228" mi="0" ci="7" mb="0" cb="0"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="232" mi="0" ci="7" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="0"/><line nr="253" mi="0" ci="3" mb="0" cb="0"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="7" ci="1" mb="2" cb="0"/><line nr="256" mi="7" ci="1" mb="2" cb="0"/><line nr="258" mi="4" ci="2" mb="3" cb="1"/><line nr="259" mi="10" ci="0" mb="2" cb="0"/><line nr="260" mi="8" ci="0" mb="2" cb="0"/><line nr="261" mi="5" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="2" cb="0"/><line nr="263" mi="4" ci="0" mb="2" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="3" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="2" cb="0"/><line nr="268" mi="4" ci="0" mb="0" cb="0"/><line nr="271" mi="6" ci="0" mb="0" cb="0"/><line nr="274" mi="8" ci="0" mb="2" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="280" mi="0" ci="2" mb="1" cb="1"/><line nr="281" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="10" ci="1" mb="2" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="12" ci="1" mb="2" cb="0"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="3" mb="0" cb="2"/><line nr="291" mi="0" ci="3" mb="0" cb="2"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="294" mi="0" ci="9" mb="0" cb="2"/><line nr="295" mi="0" ci="3" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="2"/><line nr="297" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="2"/><line nr="300" mi="0" ci="1" mb="0" cb="0"/><line nr="301" mi="0" ci="7" mb="0" cb="0"/><line nr="302" mi="0" ci="9" mb="0" cb="0"/><line nr="303" mi="0" ci="9" mb="0" cb="0"/><line nr="304" mi="0" ci="7" mb="0" cb="0"/><line nr="305" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="9" mb="0" cb="2"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="2"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="2"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="7" mb="0" cb="0"/><line nr="316" mi="0" ci="9" mb="0" cb="0"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><line nr="318" mi="0" ci="7" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="322" mi="0" ci="1" mb="0" cb="0"/><line nr="324" mi="0" ci="3" mb="0" cb="2"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="14" mb="0" cb="2"/><line nr="329" mi="0" ci="6" mb="0" cb="2"/><line nr="330" mi="0" ci="4" mb="0" cb="2"/><line nr="331" mi="0" ci="1" mb="0" cb="0"/><line nr="332" mi="0" ci="6" mb="0" cb="0"/><line nr="334" mi="10" ci="1" mb="2" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="2"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="339" mi="0" ci="4" mb="0" cb="2"/><line nr="340" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="9" mb="0" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="347" mi="0" ci="1" mb="0" cb="0"/><line nr="349" mi="0" ci="2" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="9" ci="0" mb="4" cb="0"/><line nr="357" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="1" ci="0" mb="0" cb="0"/><line nr="361" mi="4" ci="2" mb="3" cb="1"/><line nr="362" mi="3" ci="0" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="4" mb="0" cb="2"/><line nr="367" mi="0" ci="5" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="1" mb="0" cb="0"/><line nr="374" mi="12" ci="1" mb="4" cb="0"/><line nr="375" mi="0" ci="6" mb="0" cb="2"/><line nr="376" mi="0" ci="8" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="0" ci="4" mb="0" cb="2"/><line nr="380" mi="0" ci="3" mb="0" cb="0"/><line nr="381" mi="0" ci="3" mb="0" cb="0"/><line nr="382" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="12" ci="1" mb="4" cb="0"/><line nr="386" mi="0" ci="6" mb="0" cb="2"/><line nr="387" mi="0" ci="8" mb="0" cb="0"/><line nr="388" mi="0" ci="5" mb="0" cb="0"/><line nr="390" mi="0" ci="4" mb="0" cb="2"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="6" mb="0" cb="2"/><line nr="397" mi="0" ci="8" mb="0" cb="0"/><line nr="398" mi="0" ci="4" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="2"/><line nr="404" mi="0" ci="8" mb="0" cb="0"/><line nr="405" mi="0" ci="4" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="0"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="12" ci="1" mb="4" cb="0"/><line nr="411" mi="0" ci="5" mb="0" cb="0"/><line nr="412" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="4" mb="0" cb="0"/><line nr="415" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="12" ci="1" mb="4" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="4" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="429" mi="8" ci="1" mb="2" cb="0"/><line nr="430" mi="0" ci="5" mb="0" cb="0"/><line nr="431" mi="7" ci="1" mb="2" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="0"/><line nr="433" mi="0" ci="3" mb="0" cb="0"/><line nr="435" mi="0" ci="12" mb="0" cb="4"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="6" mb="0" cb="0"/><line nr="441" mi="0" ci="6" mb="0" cb="0"/><line nr="443" mi="0" ci="4" mb="0" cb="0"/><line nr="444" mi="0" ci="1" mb="0" cb="0"/><line nr="449" mi="0" ci="10" mb="0" cb="2"/><line nr="450" mi="0" ci="5" mb="0" cb="0"/><line nr="451" mi="0" ci="3" mb="0" cb="2"/><line nr="452" mi="0" ci="1" mb="0" cb="0"/><line nr="453" mi="0" ci="8" mb="0" cb="2"/><line nr="454" mi="0" ci="3" mb="0" cb="0"/><line nr="455" mi="0" ci="4" mb="0" cb="0"/><line nr="456" mi="0" ci="6" mb="0" cb="0"/><line nr="457" mi="0" ci="1" mb="0" cb="0"/><line nr="458" mi="0" ci="5" mb="0" cb="0"/><line nr="460" mi="0" ci="5" mb="0" cb="0"/><line nr="462" mi="0" ci="10" mb="0" cb="2"/><line nr="463" mi="0" ci="5" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="2"/><line nr="465" mi="0" ci="1" mb="0" cb="0"/><line nr="466" mi="0" ci="8" mb="0" cb="2"/><line nr="467" mi="0" ci="3" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="6" mb="0" cb="0"/><line nr="470" mi="0" ci="1" mb="0" cb="0"/><line nr="471" mi="0" ci="5" mb="0" cb="0"/><line nr="473" mi="0" ci="5" mb="0" cb="0"/><line nr="474" mi="0" ci="1" mb="0" cb="0"/><line nr="476" mi="0" ci="1" mb="0" cb="0"/><line nr="483" mi="10" ci="1" mb="4" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="5" mb="1" cb="2"/><line nr="488" mi="0" ci="2" mb="0" cb="2"/><line nr="489" mi="0" ci="6" mb="0" cb="0"/><line nr="491" mi="0" ci="6" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="2"/><line nr="496" mi="0" ci="6" mb="0" cb="0"/><line nr="498" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="6" ci="0" mb="0" cb="0"/><line nr="508" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="5" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="525" mi="0" ci="13" mb="0" cb="2"/><line nr="526" mi="0" ci="3" mb="0" cb="0"/><line nr="527" mi="0" ci="6" mb="0" cb="0"/><line nr="528" mi="0" ci="5" mb="0" cb="0"/><line nr="529" mi="0" ci="15" mb="0" cb="4"/><line nr="530" mi="0" ci="10" mb="0" cb="4"/><line nr="531" mi="0" ci="4" mb="0" cb="0"/><line nr="534" mi="0" ci="7" mb="0" cb="2"/><line nr="536" mi="0" ci="6" mb="0" cb="0"/><line nr="539" mi="0" ci="9" mb="0" cb="0"/><line nr="540" mi="9" ci="1" mb="2" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="545" mi="0" ci="13" mb="0" cb="2"/><line nr="546" mi="0" ci="3" mb="0" cb="0"/><line nr="547" mi="0" ci="6" mb="0" cb="0"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="549" mi="0" ci="15" mb="0" cb="4"/><line nr="550" mi="0" ci="10" mb="1" cb="3"/><line nr="551" mi="0" ci="4" mb="0" cb="0"/><line nr="554" mi="0" ci="7" mb="0" cb="2"/><line nr="556" mi="0" ci="7" mb="0" cb="0"/><line nr="559" mi="0" ci="10" mb="0" cb="0"/><line nr="560" mi="9" ci="1" mb="2" cb="0"/><line nr="561" mi="0" ci="1" mb="0" cb="0"/><line nr="567" mi="0" ci="11" mb="0" cb="0"/><line nr="568" mi="0" ci="9" mb="0" cb="2"/><line nr="569" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="0" ci="11" mb="0" cb="0"/><line nr="571" mi="0" ci="12" mb="0" cb="0"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="577" mi="0" ci="6" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="579" mi="0" ci="7" mb="0" cb="2"/><line nr="580" mi="0" ci="6" mb="0" cb="0"/><line nr="581" mi="0" ci="5" mb="0" cb="0"/><line nr="582" mi="0" ci="15" mb="0" cb="4"/><line nr="583" mi="0" ci="10" mb="0" cb="4"/><line nr="584" mi="0" ci="4" mb="0" cb="0"/><line nr="587" mi="0" ci="7" mb="0" cb="2"/><line nr="589" mi="0" ci="6" mb="0" cb="0"/><line nr="592" mi="0" ci="9" mb="0" cb="0"/><line nr="593" mi="9" ci="1" mb="2" cb="0"/><line nr="594" mi="0" ci="1" mb="0" cb="0"/><line nr="597" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="11" ci="1" mb="2" cb="0"/><line nr="599" mi="0" ci="6" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="601" mi="6" ci="1" mb="2" cb="0"/><line nr="602" mi="0" ci="15" mb="0" cb="4"/><line nr="603" mi="0" ci="10" mb="0" cb="4"/><line nr="604" mi="0" ci="4" mb="0" cb="0"/><line nr="607" mi="0" ci="7" mb="0" cb="2"/><line nr="609" mi="0" ci="7" mb="0" cb="0"/><line nr="612" mi="0" ci="10" mb="0" cb="0"/><line nr="613" mi="9" ci="1" mb="2" cb="0"/><line nr="614" mi="0" ci="1" mb="0" cb="0"/><line nr="618" mi="0" ci="3" mb="0" cb="0"/><line nr="619" mi="0" ci="3" mb="0" cb="2"/><line nr="622" mi="0" ci="11" mb="0" cb="0"/><line nr="623" mi="0" ci="9" mb="0" cb="2"/><line nr="624" mi="0" ci="1" mb="0" cb="0"/><line nr="625" mi="0" ci="13" mb="0" cb="0"/><line nr="626" mi="7" ci="1" mb="2" cb="0"/><line nr="628" mi="0" ci="1" mb="0" cb="0"/><line nr="629" mi="0" ci="1" mb="0" cb="0"/><line nr="633" mi="0" ci="1" mb="0" cb="0"/><line nr="636" mi="0" ci="3" mb="0" cb="0"/><line nr="637" mi="0" ci="1" mb="0" cb="0"/><line nr="640" mi="0" ci="4" mb="0" cb="0"/><line nr="646" mi="0" ci="13" mb="0" cb="2"/><line nr="647" mi="0" ci="3" mb="0" cb="0"/><line nr="648" mi="0" ci="6" mb="0" cb="0"/><line nr="649" mi="0" ci="5" mb="0" cb="0"/><line nr="650" mi="0" ci="17" mb="0" cb="4"/><line nr="651" mi="0" ci="10" mb="0" cb="4"/><line nr="652" mi="0" ci="4" mb="0" cb="0"/><line nr="655" mi="0" ci="8" mb="0" cb="2"/><line nr="657" mi="0" ci="5" mb="0" cb="0"/><line nr="659" mi="0" ci="5" mb="0" cb="2"/><line nr="660" mi="0" ci="1" mb="0" cb="0"/><line nr="663" mi="0" ci="9" mb="0" cb="0"/><line nr="664" mi="9" ci="1" mb="2" cb="0"/><line nr="665" mi="0" ci="1" mb="0" cb="0"/><line nr="669" mi="0" ci="13" mb="0" cb="2"/><line nr="670" mi="0" ci="3" mb="0" cb="0"/><line nr="671" mi="0" ci="6" mb="0" cb="0"/><line nr="672" mi="0" ci="5" mb="0" cb="0"/><line nr="673" mi="0" ci="17" mb="0" cb="4"/><line nr="674" mi="0" ci="10" mb="1" cb="3"/><line nr="675" mi="0" ci="4" mb="0" cb="0"/><line nr="678" mi="0" ci="8" mb="0" cb="2"/><line nr="680" mi="0" ci="6" mb="0" cb="0"/><line nr="682" mi="0" ci="5" mb="0" cb="2"/><line nr="683" mi="0" ci="1" mb="0" cb="0"/><line nr="686" mi="0" ci="10" mb="0" cb="0"/><line nr="687" mi="9" ci="1" mb="2" cb="0"/><line nr="688" mi="0" ci="1" mb="0" cb="0"/><line nr="694" mi="0" ci="11" mb="0" cb="0"/><line nr="695" mi="0" ci="9" mb="0" cb="2"/><line nr="696" mi="0" ci="1" mb="0" cb="0"/><line nr="697" mi="0" ci="11" mb="0" cb="0"/><line nr="698" mi="0" ci="12" mb="0" cb="0"/><line nr="700" mi="0" ci="1" mb="0" cb="0"/><line nr="704" mi="0" ci="6" mb="0" cb="0"/><line nr="705" mi="0" ci="3" mb="0" cb="0"/><line nr="706" mi="0" ci="7" mb="0" cb="2"/><line nr="707" mi="0" ci="6" mb="0" cb="0"/><line nr="708" mi="0" ci="5" mb="0" cb="0"/><line nr="709" mi="0" ci="17" mb="0" cb="4"/><line nr="710" mi="0" ci="10" mb="0" cb="4"/><line nr="711" mi="0" ci="4" mb="0" cb="0"/><line nr="714" mi="0" ci="8" mb="0" cb="2"/><line nr="716" mi="0" ci="5" mb="0" cb="0"/><line nr="718" mi="0" ci="5" mb="0" cb="2"/><line nr="719" mi="0" ci="1" mb="0" cb="0"/><line nr="722" mi="0" ci="9" mb="0" cb="0"/><line nr="723" mi="9" ci="1" mb="2" cb="0"/><line nr="724" mi="0" ci="1" mb="0" cb="0"/><line nr="727" mi="0" ci="1" mb="0" cb="0"/><line nr="728" mi="0" ci="6" mb="0" cb="0"/><line nr="729" mi="0" ci="11" mb="0" cb="0"/><line nr="730" mi="0" ci="17" mb="0" cb="4"/><line nr="731" mi="0" ci="10" mb="0" cb="4"/><line nr="732" mi="0" ci="4" mb="0" cb="0"/><line nr="735" mi="0" ci="8" mb="0" cb="2"/><line nr="737" mi="0" ci="6" mb="0" cb="0"/><line nr="739" mi="0" ci="5" mb="0" cb="2"/><line nr="740" mi="0" ci="1" mb="0" cb="0"/><line nr="743" mi="0" ci="10" mb="0" cb="0"/><line nr="744" mi="9" ci="1" mb="2" cb="0"/><line nr="745" mi="0" ci="1" mb="0" cb="0"/><line nr="749" mi="0" ci="3" mb="0" cb="0"/><line nr="750" mi="0" ci="3" mb="0" cb="2"/><line nr="753" mi="0" ci="11" mb="0" cb="0"/><line nr="754" mi="0" ci="9" mb="0" cb="2"/><line nr="755" mi="0" ci="1" mb="0" cb="0"/><line nr="756" mi="0" ci="13" mb="0" cb="0"/><line nr="757" mi="7" ci="1" mb="2" cb="0"/><line nr="759" mi="0" ci="1" mb="0" cb="0"/><line nr="760" mi="0" ci="1" mb="0" cb="0"/><line nr="763" mi="0" ci="1" mb="0" cb="0"/><line nr="766" mi="0" ci="6" mb="0" cb="0"/><line nr="769" mi="0" ci="3" mb="0" cb="0"/><line nr="770" mi="0" ci="1" mb="0" cb="0"/><line nr="774" mi="9" ci="1" mb="2" cb="0"/><line nr="775" mi="8" ci="1" mb="2" cb="0"/><line nr="777" mi="0" ci="2" mb="0" cb="0"/><line nr="778" mi="0" ci="6" mb="0" cb="0"/><line nr="780" mi="0" ci="13" mb="0" cb="2"/><line nr="781" mi="0" ci="3" mb="0" cb="0"/><line nr="782" mi="0" ci="6" mb="0" cb="0"/><line nr="783" mi="0" ci="18" mb="0" cb="4"/><line nr="784" mi="0" ci="2" mb="0" cb="2"/><line nr="785" mi="0" ci="5" mb="0" cb="0"/><line nr="786" mi="0" ci="10" mb="0" cb="4"/><line nr="787" mi="0" ci="10" mb="0" cb="4"/><line nr="788" mi="0" ci="4" mb="0" cb="0"/><line nr="791" mi="8" ci="1" mb="2" cb="0"/><line nr="792" mi="0" ci="4" mb="0" cb="0"/><line nr="795" mi="0" ci="5" mb="0" cb="2"/><line nr="796" mi="0" ci="3" mb="0" cb="0"/><line nr="797" mi="0" ci="1" mb="0" cb="0"/><line nr="801" mi="0" ci="7" mb="0" cb="0"/><line nr="803" mi="0" ci="4" mb="1" cb="1"/><line nr="804" mi="0" ci="3" mb="0" cb="0"/><line nr="806" mi="9" ci="0" mb="0" cb="0"/><line nr="807" mi="6" ci="0" mb="0" cb="0"/><line nr="808" mi="6" ci="0" mb="0" cb="0"/><line nr="809" mi="15" ci="0" mb="2" cb="0"/><line nr="811" mi="0" ci="1" mb="0" cb="0"/><line nr="813" mi="0" ci="2" mb="0" cb="0"/><line nr="815" mi="0" ci="1" mb="0" cb="0"/><line nr="818" mi="0" ci="13" mb="0" cb="2"/><line nr="819" mi="0" ci="3" mb="0" cb="0"/><line nr="820" mi="0" ci="6" mb="0" cb="0"/><line nr="821" mi="0" ci="18" mb="0" cb="4"/><line nr="822" mi="0" ci="2" mb="0" cb="2"/><line nr="823" mi="0" ci="5" mb="0" cb="0"/><line nr="824" mi="0" ci="10" mb="1" cb="3"/><line nr="825" mi="0" ci="10" mb="1" cb="3"/><line nr="826" mi="0" ci="4" mb="0" cb="0"/><line nr="829" mi="8" ci="1" mb="2" cb="0"/><line nr="830" mi="0" ci="4" mb="0" cb="0"/><line nr="833" mi="0" ci="5" mb="0" cb="2"/><line nr="834" mi="0" ci="3" mb="0" cb="0"/><line nr="835" mi="0" ci="1" mb="0" cb="0"/><line nr="839" mi="0" ci="7" mb="0" cb="0"/><line nr="841" mi="0" ci="4" mb="1" cb="1"/><line nr="842" mi="0" ci="3" mb="0" cb="0"/><line nr="844" mi="9" ci="0" mb="0" cb="0"/><line nr="845" mi="6" ci="0" mb="0" cb="0"/><line nr="846" mi="6" ci="0" mb="0" cb="0"/><line nr="847" mi="15" ci="0" mb="2" cb="0"/><line nr="849" mi="0" ci="1" mb="0" cb="0"/><line nr="851" mi="0" ci="2" mb="0" cb="0"/><line nr="853" mi="0" ci="1" mb="0" cb="0"/><line nr="859" mi="0" ci="9" mb="0" cb="2"/><line nr="860" mi="0" ci="2" mb="0" cb="2"/><line nr="861" mi="0" ci="5" mb="0" cb="0"/><line nr="862" mi="0" ci="2" mb="0" cb="2"/><line nr="863" mi="0" ci="6" mb="0" cb="0"/><line nr="865" mi="0" ci="5" mb="0" cb="0"/><line nr="869" mi="0" ci="7" mb="0" cb="0"/><line nr="870" mi="0" ci="11" mb="0" cb="2"/><line nr="875" mi="0" ci="3" mb="0" cb="0"/><line nr="876" mi="0" ci="1" mb="0" cb="0"/><line nr="879" mi="0" ci="2" mb="0" cb="2"/><line nr="880" mi="0" ci="2" mb="0" cb="2"/><line nr="881" mi="0" ci="6" mb="0" cb="0"/><line nr="883" mi="0" ci="5" mb="0" cb="0"/><line nr="887" mi="0" ci="11" mb="0" cb="0"/><line nr="888" mi="0" ci="11" mb="0" cb="0"/><line nr="889" mi="11" ci="1" mb="2" cb="0"/><line nr="890" mi="11" ci="1" mb="2" cb="0"/><line nr="891" mi="0" ci="2" mb="0" cb="2"/><line nr="892" mi="8" ci="1" mb="2" cb="0"/><line nr="893" mi="0" ci="4" mb="0" cb="0"/><line nr="894" mi="0" ci="7" mb="0" cb="0"/><line nr="896" mi="0" ci="1" mb="0" cb="0"/><line nr="901" mi="9" ci="1" mb="2" cb="0"/><line nr="902" mi="8" ci="1" mb="2" cb="0"/><line nr="904" mi="0" ci="2" mb="0" cb="0"/><line nr="905" mi="0" ci="6" mb="0" cb="0"/><line nr="906" mi="0" ci="6" mb="0" cb="0"/><line nr="907" mi="0" ci="3" mb="0" cb="0"/><line nr="910" mi="0" ci="7" mb="0" cb="2"/><line nr="911" mi="0" ci="6" mb="0" cb="0"/><line nr="912" mi="0" ci="19" mb="0" cb="4"/><line nr="914" mi="11" ci="1" mb="2" cb="0"/><line nr="915" mi="0" ci="6" mb="0" cb="0"/><line nr="916" mi="0" ci="18" mb="0" cb="4"/><line nr="918" mi="0" ci="2" mb="0" cb="2"/><line nr="919" mi="0" ci="5" mb="0" cb="0"/><line nr="920" mi="0" ci="10" mb="0" cb="4"/><line nr="921" mi="0" ci="10" mb="0" cb="4"/><line nr="922" mi="0" ci="4" mb="0" cb="0"/><line nr="925" mi="8" ci="1" mb="2" cb="0"/><line nr="926" mi="0" ci="4" mb="0" cb="0"/><line nr="929" mi="0" ci="5" mb="0" cb="2"/><line nr="930" mi="0" ci="3" mb="0" cb="0"/><line nr="931" mi="0" ci="1" mb="0" cb="0"/><line nr="935" mi="0" ci="7" mb="0" cb="0"/><line nr="937" mi="0" ci="4" mb="1" cb="1"/><line nr="938" mi="0" ci="3" mb="0" cb="0"/><line nr="940" mi="9" ci="0" mb="0" cb="0"/><line nr="941" mi="6" ci="0" mb="0" cb="0"/><line nr="942" mi="6" ci="0" mb="0" cb="0"/><line nr="943" mi="15" ci="0" mb="2" cb="0"/><line nr="945" mi="0" ci="1" mb="0" cb="0"/><line nr="947" mi="0" ci="2" mb="0" cb="0"/><line nr="949" mi="0" ci="1" mb="0" cb="0"/><line nr="951" mi="0" ci="3" mb="0" cb="0"/><line nr="952" mi="0" ci="3" mb="0" cb="2"/><line nr="956" mi="0" ci="9" mb="0" cb="2"/><line nr="957" mi="0" ci="2" mb="0" cb="2"/><line nr="958" mi="0" ci="5" mb="0" cb="0"/><line nr="959" mi="0" ci="2" mb="0" cb="2"/><line nr="960" mi="0" ci="6" mb="0" cb="0"/><line nr="962" mi="0" ci="5" mb="0" cb="0"/><line nr="966" mi="0" ci="7" mb="0" cb="0"/><line nr="967" mi="0" ci="11" mb="0" cb="2"/><line nr="972" mi="0" ci="3" mb="0" cb="0"/><line nr="973" mi="0" ci="1" mb="0" cb="0"/><line nr="976" mi="0" ci="2" mb="0" cb="2"/><line nr="977" mi="0" ci="2" mb="0" cb="2"/><line nr="978" mi="0" ci="6" mb="0" cb="0"/><line nr="980" mi="0" ci="5" mb="0" cb="0"/><line nr="984" mi="0" ci="13" mb="0" cb="0"/><line nr="985" mi="7" ci="1" mb="2" cb="0"/><line nr="986" mi="0" ci="2" mb="0" cb="2"/><line nr="987" mi="8" ci="1" mb="2" cb="0"/><line nr="988" mi="0" ci="4" mb="0" cb="0"/><line nr="989" mi="0" ci="7" mb="0" cb="0"/><line nr="990" mi="0" ci="1" mb="0" cb="0"/><line nr="993" mi="0" ci="1" mb="0" cb="0"/><line nr="1004" mi="0" ci="1" mb="0" cb="0"/><line nr="1007" mi="0" ci="3" mb="0" cb="0"/><line nr="1008" mi="0" ci="1" mb="0" cb="0"/><line nr="1011" mi="0" ci="4" mb="0" cb="0"/><line nr="1016" mi="8" ci="1" mb="2" cb="0"/><line nr="1017" mi="0" ci="2" mb="0" cb="0"/><line nr="1018" mi="0" ci="2" mb="0" cb="0"/><line nr="1019" mi="0" ci="2" mb="0" cb="0"/><line nr="1020" mi="0" ci="2" mb="0" cb="0"/><line nr="1021" mi="0" ci="2" mb="0" cb="0"/><line nr="1022" mi="0" ci="2" mb="0" cb="0"/><line nr="1023" mi="0" ci="9" mb="0" cb="2"/><line nr="1024" mi="0" ci="5" mb="0" cb="0"/><line nr="1025" mi="0" ci="2" mb="0" cb="0"/><line nr="1028" mi="0" ci="7" mb="0" cb="2"/><line nr="1029" mi="0" ci="6" mb="0" cb="0"/><line nr="1030" mi="0" ci="5" mb="0" cb="0"/><line nr="1031" mi="0" ci="12" mb="0" cb="0"/><line nr="1032" mi="8" ci="1" mb="2" cb="0"/><line nr="1033" mi="0" ci="9" mb="0" cb="0"/><line nr="1034" mi="12" ci="1" mb="2" cb="0"/><line nr="1036" mi="0" ci="8" mb="0" cb="4"/><line nr="1037" mi="0" ci="3" mb="0" cb="0"/><line nr="1039" mi="11" ci="1" mb="2" cb="0"/><line nr="1040" mi="0" ci="6" mb="0" cb="0"/><line nr="1041" mi="0" ci="5" mb="0" cb="0"/><line nr="1042" mi="0" ci="11" mb="0" cb="0"/><line nr="1043" mi="8" ci="1" mb="2" cb="0"/><line nr="1044" mi="0" ci="9" mb="0" cb="0"/><line nr="1045" mi="18" ci="1" mb="2" cb="0"/><line nr="1047" mi="0" ci="8" mb="0" cb="4"/><line nr="1048" mi="0" ci="2" mb="0" cb="0"/><line nr="1051" mi="0" ci="9" mb="0" cb="0"/><line nr="1052" mi="0" ci="9" mb="0" cb="0"/><line nr="1053" mi="12" ci="1" mb="2" cb="0"/><line nr="1054" mi="12" ci="1" mb="2" cb="0"/><line nr="1056" mi="0" ci="3" mb="0" cb="2"/><line nr="1057" mi="0" ci="5" mb="0" cb="2"/><line nr="1058" mi="0" ci="5" mb="0" cb="0"/><line nr="1059" mi="0" ci="2" mb="0" cb="2"/><line nr="1060" mi="0" ci="5" mb="0" cb="2"/><line nr="1061" mi="0" ci="4" mb="0" cb="0"/><line nr="1063" mi="0" ci="6" mb="0" cb="2"/><line nr="1065" mi="0" ci="2" mb="0" cb="0"/><line nr="1070" mi="8" ci="1" mb="2" cb="0"/><line nr="1071" mi="0" ci="2" mb="0" cb="0"/><line nr="1072" mi="0" ci="2" mb="0" cb="0"/><line nr="1073" mi="0" ci="2" mb="0" cb="0"/><line nr="1074" mi="0" ci="2" mb="0" cb="0"/><line nr="1075" mi="0" ci="2" mb="0" cb="0"/><line nr="1076" mi="0" ci="2" mb="0" cb="0"/><line nr="1077" mi="0" ci="9" mb="0" cb="2"/><line nr="1078" mi="0" ci="5" mb="0" cb="0"/><line nr="1079" mi="0" ci="2" mb="0" cb="0"/><line nr="1082" mi="0" ci="7" mb="0" cb="2"/><line nr="1083" mi="0" ci="6" mb="0" cb="0"/><line nr="1084" mi="0" ci="5" mb="0" cb="0"/><line nr="1085" mi="0" ci="12" mb="0" cb="0"/><line nr="1086" mi="8" ci="1" mb="2" cb="0"/><line nr="1087" mi="0" ci="9" mb="0" cb="0"/><line nr="1088" mi="12" ci="1" mb="2" cb="0"/><line nr="1090" mi="0" ci="8" mb="0" cb="4"/><line nr="1091" mi="0" ci="3" mb="0" cb="0"/><line nr="1093" mi="11" ci="1" mb="2" cb="0"/><line nr="1094" mi="0" ci="6" mb="0" cb="0"/><line nr="1095" mi="0" ci="5" mb="0" cb="0"/><line nr="1096" mi="0" ci="14" mb="0" cb="0"/><line nr="1097" mi="0" ci="8" mb="0" cb="0"/><line nr="1098" mi="8" ci="1" mb="2" cb="0"/><line nr="1099" mi="0" ci="9" mb="0" cb="0"/><line nr="1101" mi="0" ci="8" mb="0" cb="4"/><line nr="1102" mi="0" ci="2" mb="0" cb="0"/><line nr="1105" mi="0" ci="9" mb="0" cb="0"/><line nr="1106" mi="0" ci="9" mb="0" cb="0"/><line nr="1107" mi="12" ci="1" mb="2" cb="0"/><line nr="1108" mi="12" ci="1" mb="2" cb="0"/><line nr="1110" mi="0" ci="3" mb="0" cb="2"/><line nr="1111" mi="0" ci="5" mb="0" cb="2"/><line nr="1112" mi="0" ci="5" mb="0" cb="0"/><line nr="1113" mi="0" ci="2" mb="0" cb="2"/><line nr="1114" mi="0" ci="5" mb="0" cb="2"/><line nr="1115" mi="0" ci="4" mb="0" cb="0"/><line nr="1117" mi="0" ci="6" mb="0" cb="2"/><line nr="1119" mi="0" ci="2" mb="0" cb="0"/><line nr="1123" mi="0" ci="1" mb="0" cb="0"/><line nr="1126" mi="0" ci="3" mb="0" cb="0"/><line nr="1127" mi="0" ci="1" mb="0" cb="0"/><line nr="1130" mi="0" ci="4" mb="0" cb="0"/><line nr="1135" mi="8" ci="1" mb="2" cb="0"/><line nr="1136" mi="0" ci="2" mb="0" cb="0"/><line nr="1137" mi="0" ci="2" mb="0" cb="0"/><line nr="1138" mi="0" ci="2" mb="0" cb="0"/><line nr="1139" mi="0" ci="2" mb="0" cb="0"/><line nr="1140" mi="0" ci="2" mb="0" cb="0"/><line nr="1141" mi="0" ci="2" mb="0" cb="0"/><line nr="1142" mi="0" ci="9" mb="0" cb="2"/><line nr="1143" mi="0" ci="5" mb="0" cb="0"/><line nr="1144" mi="0" ci="2" mb="0" cb="0"/><line nr="1147" mi="0" ci="7" mb="0" cb="2"/><line nr="1148" mi="0" ci="6" mb="0" cb="0"/><line nr="1149" mi="0" ci="5" mb="0" cb="0"/><line nr="1150" mi="0" ci="12" mb="0" cb="0"/><line nr="1151" mi="6" ci="1" mb="2" cb="0"/><line nr="1152" mi="0" ci="9" mb="0" cb="0"/><line nr="1153" mi="10" ci="1" mb="2" cb="0"/><line nr="1155" mi="0" ci="8" mb="0" cb="4"/><line nr="1156" mi="0" ci="3" mb="0" cb="0"/><line nr="1158" mi="11" ci="1" mb="2" cb="0"/><line nr="1159" mi="0" ci="6" mb="0" cb="0"/><line nr="1160" mi="0" ci="5" mb="0" cb="0"/><line nr="1161" mi="0" ci="11" mb="0" cb="0"/><line nr="1162" mi="6" ci="1" mb="2" cb="0"/><line nr="1163" mi="0" ci="9" mb="0" cb="0"/><line nr="1164" mi="15" ci="1" mb="2" cb="0"/><line nr="1166" mi="0" ci="8" mb="0" cb="4"/><line nr="1167" mi="0" ci="2" mb="0" cb="0"/><line nr="1170" mi="0" ci="9" mb="0" cb="0"/><line nr="1171" mi="0" ci="9" mb="0" cb="0"/><line nr="1172" mi="10" ci="1" mb="2" cb="0"/><line nr="1173" mi="10" ci="1" mb="2" cb="0"/><line nr="1175" mi="0" ci="3" mb="0" cb="2"/><line nr="1176" mi="0" ci="5" mb="0" cb="2"/><line nr="1177" mi="0" ci="5" mb="0" cb="0"/><line nr="1178" mi="0" ci="2" mb="0" cb="2"/><line nr="1179" mi="0" ci="5" mb="0" cb="2"/><line nr="1180" mi="0" ci="4" mb="0" cb="0"/><line nr="1182" mi="0" ci="6" mb="0" cb="2"/><line nr="1184" mi="0" ci="2" mb="0" cb="0"/><line nr="1189" mi="8" ci="1" mb="2" cb="0"/><line nr="1190" mi="0" ci="2" mb="0" cb="0"/><line nr="1191" mi="0" ci="2" mb="0" cb="0"/><line nr="1192" mi="0" ci="2" mb="0" cb="0"/><line nr="1193" mi="0" ci="2" mb="0" cb="0"/><line nr="1194" mi="0" ci="2" mb="0" cb="0"/><line nr="1195" mi="0" ci="2" mb="0" cb="0"/><line nr="1196" mi="0" ci="9" mb="0" cb="2"/><line nr="1197" mi="0" ci="5" mb="0" cb="0"/><line nr="1198" mi="0" ci="2" mb="0" cb="0"/><line nr="1201" mi="0" ci="7" mb="0" cb="2"/><line nr="1202" mi="0" ci="6" mb="0" cb="0"/><line nr="1203" mi="0" ci="5" mb="0" cb="0"/><line nr="1204" mi="0" ci="12" mb="0" cb="0"/><line nr="1205" mi="6" ci="1" mb="2" cb="0"/><line nr="1206" mi="0" ci="9" mb="0" cb="0"/><line nr="1207" mi="10" ci="1" mb="2" cb="0"/><line nr="1209" mi="0" ci="8" mb="0" cb="4"/><line nr="1210" mi="0" ci="3" mb="0" cb="0"/><line nr="1212" mi="11" ci="1" mb="2" cb="0"/><line nr="1213" mi="0" ci="6" mb="0" cb="0"/><line nr="1214" mi="0" ci="5" mb="0" cb="0"/><line nr="1215" mi="0" ci="14" mb="0" cb="0"/><line nr="1216" mi="0" ci="8" mb="0" cb="0"/><line nr="1217" mi="6" ci="1" mb="2" cb="0"/><line nr="1218" mi="0" ci="9" mb="0" cb="0"/><line nr="1220" mi="0" ci="8" mb="0" cb="4"/><line nr="1221" mi="0" ci="2" mb="0" cb="0"/><line nr="1224" mi="0" ci="9" mb="0" cb="0"/><line nr="1225" mi="0" ci="9" mb="0" cb="0"/><line nr="1226" mi="10" ci="1" mb="2" cb="0"/><line nr="1227" mi="10" ci="1" mb="2" cb="0"/><line nr="1229" mi="0" ci="3" mb="0" cb="2"/><line nr="1230" mi="0" ci="5" mb="0" cb="2"/><line nr="1231" mi="0" ci="5" mb="0" cb="0"/><line nr="1232" mi="0" ci="2" mb="0" cb="2"/><line nr="1233" mi="0" ci="5" mb="0" cb="2"/><line nr="1234" mi="0" ci="4" mb="0" cb="0"/><line nr="1236" mi="0" ci="6" mb="0" cb="2"/><line nr="1238" mi="0" ci="2" mb="0" cb="0"/><line nr="1246" mi="0" ci="2" mb="0" cb="0"/><line nr="1247" mi="0" ci="2" mb="0" cb="0"/><line nr="1248" mi="0" ci="3" mb="0" cb="2"/><line nr="1249" mi="0" ci="4" mb="0" cb="2"/><line nr="1250" mi="0" ci="4" mb="0" cb="0"/><line nr="1251" mi="0" ci="7" mb="0" cb="2"/><line nr="1252" mi="0" ci="1" mb="0" cb="0"/><line nr="1253" mi="8" ci="1" mb="2" cb="0"/><line nr="1255" mi="0" ci="7" mb="0" cb="0"/><line nr="1256" mi="0" ci="4" mb="0" cb="0"/><line nr="1257" mi="0" ci="7" mb="0" cb="2"/><line nr="1258" mi="0" ci="7" mb="0" cb="0"/><line nr="1260" mi="0" ci="5" mb="0" cb="2"/><line nr="1261" mi="0" ci="2" mb="0" cb="0"/><line nr="1262" mi="0" ci="1" mb="0" cb="0"/><line nr="1264" mi="0" ci="4" mb="0" cb="2"/><line nr="1265" mi="0" ci="4" mb="0" cb="0"/><line nr="1266" mi="0" ci="7" mb="0" cb="2"/><line nr="1267" mi="0" ci="1" mb="0" cb="0"/><line nr="1268" mi="8" ci="1" mb="2" cb="0"/><line nr="1270" mi="0" ci="7" mb="0" cb="0"/><line nr="1271" mi="0" ci="4" mb="0" cb="0"/><line nr="1272" mi="0" ci="7" mb="0" cb="2"/><line nr="1273" mi="0" ci="7" mb="0" cb="0"/><line nr="1275" mi="0" ci="5" mb="0" cb="2"/><line nr="1276" mi="0" ci="2" mb="0" cb="0"/><line nr="1277" mi="0" ci="1" mb="0" cb="0"/><line nr="1279" mi="0" ci="1" mb="0" cb="0"/><line nr="1287" mi="0" ci="1" mb="0" cb="0"/><line nr="1289" mi="0" ci="1" mb="0" cb="0"/><line nr="1291" mi="0" ci="1" mb="0" cb="0"/><line nr="1293" mi="0" ci="1" mb="0" cb="0"/><line nr="1295" mi="0" ci="1" mb="0" cb="0"/><line nr="1298" mi="0" ci="5" mb="1" cb="4"/><line nr="1300" mi="0" ci="5" mb="0" cb="0"/><line nr="1302" mi="0" ci="5" mb="0" cb="0"/><line nr="1304" mi="0" ci="5" mb="0" cb="0"/><line nr="1306" mi="0" ci="5" mb="0" cb="0"/><line nr="1308" mi="6" ci="0" mb="0" cb="0"/><line nr="1314" mi="0" ci="2" mb="0" cb="0"/><line nr="1315" mi="0" ci="5" mb="0" cb="0"/><line nr="1316" mi="0" ci="1" mb="0" cb="0"/><line nr="1320" mi="0" ci="5" mb="0" cb="0"/><line nr="1323" mi="0" ci="3" mb="0" cb="0"/><line nr="1324" mi="0" ci="1" mb="0" cb="0"/><line nr="1328" mi="0" ci="8" mb="0" cb="2"/><line nr="1333" mi="0" ci="4" mb="0" cb="0"/><line nr="1338" mi="0" ci="4" mb="0" cb="0"/><line nr="1339" mi="0" ci="1" mb="0" cb="0"/><line nr="1342" mi="0" ci="1" mb="0" cb="0"/><line nr="1345" mi="0" ci="3" mb="0" cb="0"/><line nr="1346" mi="0" ci="1" mb="0" cb="0"/><line nr="1350" mi="0" ci="12" mb="0" cb="2"/><line nr="1351" mi="0" ci="9" mb="0" cb="2"/><line nr="1352" mi="0" ci="2" mb="0" cb="0"/><line nr="1353" mi="0" ci="2" mb="0" cb="0"/><line nr="1359" mi="9" ci="1" mb="2" cb="0"/><line nr="1360" mi="0" ci="9" mb="1" cb="1"/><line nr="1361" mi="0" ci="8" mb="0" cb="0"/><line nr="1362" mi="8" ci="0" mb="0" cb="0"/><line nr="1367" mi="0" ci="1" mb="0" cb="0"/><line nr="1372" mi="0" ci="3" mb="0" cb="0"/><line nr="1373" mi="0" ci="1" mb="0" cb="0"/><line nr="1377" mi="0" ci="3" mb="0" cb="0"/><line nr="1378" mi="0" ci="1" mb="0" cb="0"/><line nr="1382" mi="0" ci="8" mb="0" cb="2"/><line nr="1383" mi="0" ci="7" mb="0" cb="0"/><line nr="1384" mi="0" ci="1" mb="0" cb="0"/><line nr="1388" mi="0" ci="13" mb="0" cb="2"/><line nr="1389" mi="0" ci="8" mb="0" cb="2"/><line nr="1390" mi="0" ci="2" mb="0" cb="0"/><line nr="1391" mi="0" ci="2" mb="0" cb="0"/><line nr="1397" mi="11" ci="1" mb="2" cb="0"/><line nr="1398" mi="0" ci="8" mb="1" cb="1"/><line nr="1399" mi="0" ci="7" mb="0" cb="0"/><line nr="1400" mi="7" ci="0" mb="0" cb="0"/><line nr="1405" mi="0" ci="1" mb="0" cb="0"/><line nr="1408" mi="0" ci="3" mb="0" cb="0"/><line nr="1412" mi="0" ci="3" mb="0" cb="0"/><line nr="1413" mi="0" ci="5" mb="0" cb="0"/><line nr="1414" mi="0" ci="6" mb="0" cb="0"/><line nr="1415" mi="0" ci="1" mb="0" cb="0"/><line nr="1419" mi="0" ci="3" mb="0" cb="0"/><line nr="1420" mi="0" ci="3" mb="0" cb="0"/><line nr="1421" mi="0" ci="3" mb="0" cb="0"/><line nr="1422" mi="0" ci="1" mb="0" cb="0"/><line nr="1426" mi="0" ci="11" mb="0" cb="2"/><line nr="1427" mi="0" ci="2" mb="0" cb="0"/><line nr="1428" mi="0" ci="1" mb="0" cb="0"/><line nr="1433" mi="0" ci="4" mb="0" cb="2"/><line nr="1434" mi="0" ci="4" mb="0" cb="0"/><line nr="1435" mi="0" ci="6" mb="0" cb="0"/><line nr="1436" mi="0" ci="3" mb="0" cb="0"/><line nr="1438" mi="0" ci="7" mb="0" cb="0"/><line nr="1439" mi="0" ci="1" mb="0" cb="0"/><line nr="1443" mi="0" ci="4" mb="0" cb="2"/><line nr="1444" mi="0" ci="6" mb="0" cb="0"/><line nr="1445" mi="0" ci="3" mb="0" cb="0"/><line nr="1446" mi="0" ci="1" mb="0" cb="0"/><line nr="1450" mi="0" ci="9" mb="0" cb="2"/><line nr="1451" mi="0" ci="7" mb="0" cb="2"/><line nr="1452" mi="0" ci="2" mb="0" cb="0"/><line nr="1453" mi="0" ci="2" mb="0" cb="0"/><line nr="1459" mi="8" ci="1" mb="2" cb="0"/><line nr="1460" mi="0" ci="4" mb="0" cb="0"/><line nr="1461" mi="0" ci="5" mb="1" cb="1"/><line nr="1462" mi="0" ci="2" mb="0" cb="0"/><line nr="1463" mi="4" ci="0" mb="0" cb="0"/><line nr="1464" mi="1" ci="0" mb="0" cb="0"/><line nr="1470" mi="0" ci="2" mb="0" cb="0"/><line nr="1471" mi="0" ci="2" mb="0" cb="0"/><line nr="1472" mi="0" ci="2" mb="0" cb="0"/><line nr="1473" mi="0" ci="4" mb="0" cb="0"/><line nr="1476" mi="0" ci="3" mb="0" cb="0"/><line nr="1479" mi="0" ci="3" mb="0" cb="0"/><line nr="1480" mi="0" ci="4" mb="0" cb="0"/><line nr="1482" mi="0" ci="3" mb="0" cb="2"/><line nr="1484" mi="0" ci="8" mb="0" cb="2"/><line nr="1485" mi="0" ci="9" mb="0" cb="0"/><line nr="1487" mi="0" ci="9" mb="0" cb="2"/><line nr="1488" mi="0" ci="16" mb="1" cb="7"/><line nr="1489" mi="0" ci="1" mb="0" cb="0"/><line nr="1490" mi="0" ci="4" mb="0" cb="0"/><line nr="1491" mi="0" ci="2" mb="0" cb="0"/><line nr="1492" mi="0" ci="13" mb="0" cb="2"/><line nr="1493" mi="0" ci="6" mb="0" cb="0"/><line nr="1494" mi="0" ci="4" mb="0" cb="2"/><line nr="1495" mi="0" ci="1" mb="0" cb="0"/><line nr="1496" mi="0" ci="5" mb="0" cb="0"/><line nr="1497" mi="0" ci="4" mb="0" cb="2"/><line nr="1498" mi="0" ci="4" mb="0" cb="0"/><line nr="1499" mi="0" ci="4" mb="0" cb="0"/><line nr="1500" mi="0" ci="2" mb="0" cb="0"/><line nr="1501" mi="0" ci="1" mb="0" cb="0"/><line nr="1503" mi="0" ci="5" mb="0" cb="2"/><line nr="1506" mi="0" ci="3" mb="0" cb="0"/><line nr="1509" mi="0" ci="2" mb="0" cb="0"/><line nr="1510" mi="0" ci="6" mb="0" cb="2"/><line nr="1511" mi="0" ci="6" mb="0" cb="0"/><line nr="1512" mi="0" ci="5" mb="0" cb="0"/><line nr="1513" mi="0" ci="8" mb="0" cb="4"/><line nr="1514" mi="0" ci="1" mb="0" cb="0"/><line nr="1515" mi="0" ci="4" mb="0" cb="0"/><line nr="1516" mi="0" ci="4" mb="0" cb="2"/><line nr="1517" mi="0" ci="2" mb="0" cb="0"/><line nr="1519" mi="0" ci="3" mb="0" cb="2"/><line nr="1520" mi="0" ci="2" mb="0" cb="0"/><line nr="1521" mi="0" ci="6" mb="0" cb="0"/><line nr="1522" mi="0" ci="1" mb="0" cb="0"/><line nr="1527" mi="0" ci="6" mb="0" cb="2"/><line nr="1529" mi="0" ci="4" mb="0" cb="0"/><line nr="1530" mi="0" ci="4" mb="0" cb="2"/><line nr="1531" mi="0" ci="3" mb="0" cb="2"/><line nr="1532" mi="7" ci="1" mb="2" cb="0"/><line nr="1533" mi="0" ci="5" mb="0" cb="0"/><line nr="1535" mi="0" ci="4" mb="0" cb="0"/><line nr="1536" mi="0" ci="2" mb="0" cb="0"/><line nr="1539" mi="0" ci="3" mb="0" cb="2"/><line nr="1540" mi="0" ci="1" mb="0" cb="0"/><line nr="1541" mi="0" ci="4" mb="0" cb="0"/><line nr="1542" mi="0" ci="7" mb="0" cb="0"/><line nr="1549" mi="0" ci="8" mb="0" cb="2"/><line nr="1550" mi="0" ci="9" mb="0" cb="0"/><line nr="1552" mi="0" ci="8" mb="0" cb="2"/><line nr="1553" mi="0" ci="16" mb="1" cb="7"/><line nr="1554" mi="0" ci="1" mb="0" cb="0"/><line nr="1555" mi="0" ci="4" mb="0" cb="0"/><line nr="1556" mi="0" ci="2" mb="0" cb="0"/><line nr="1557" mi="0" ci="13" mb="0" cb="2"/><line nr="1558" mi="0" ci="6" mb="0" cb="0"/><line nr="1560" mi="0" ci="6" mb="0" cb="2"/><line nr="1561" mi="0" ci="4" mb="0" cb="2"/><line nr="1562" mi="0" ci="1" mb="0" cb="0"/><line nr="1563" mi="0" ci="6" mb="0" cb="0"/><line nr="1565" mi="10" ci="1" mb="2" cb="0"/><line nr="1566" mi="0" ci="4" mb="0" cb="2"/><line nr="1567" mi="0" ci="1" mb="0" cb="0"/><line nr="1568" mi="0" ci="5" mb="0" cb="0"/><line nr="1570" mi="0" ci="4" mb="0" cb="2"/><line nr="1571" mi="0" ci="4" mb="0" cb="0"/><line nr="1572" mi="0" ci="4" mb="0" cb="0"/><line nr="1573" mi="0" ci="2" mb="0" cb="0"/><line nr="1574" mi="0" ci="1" mb="0" cb="0"/><line nr="1576" mi="0" ci="5" mb="0" cb="2"/><line nr="1579" mi="0" ci="4" mb="0" cb="0"/><line nr="1582" mi="0" ci="2" mb="0" cb="0"/><line nr="1583" mi="0" ci="6" mb="0" cb="2"/><line nr="1584" mi="0" ci="6" mb="0" cb="0"/><line nr="1585" mi="0" ci="6" mb="0" cb="2"/><line nr="1586" mi="0" ci="5" mb="0" cb="0"/><line nr="1587" mi="0" ci="8" mb="0" cb="4"/><line nr="1588" mi="0" ci="1" mb="0" cb="0"/><line nr="1590" mi="10" ci="1" mb="2" cb="0"/><line nr="1591" mi="0" ci="5" mb="0" cb="0"/><line nr="1592" mi="0" ci="8" mb="0" cb="4"/><line nr="1593" mi="0" ci="1" mb="0" cb="0"/><line nr="1595" mi="0" ci="4" mb="0" cb="0"/><line nr="1596" mi="0" ci="4" mb="0" cb="2"/><line nr="1597" mi="0" ci="2" mb="0" cb="0"/><line nr="1599" mi="0" ci="3" mb="0" cb="2"/><line nr="1600" mi="0" ci="2" mb="0" cb="0"/><line nr="1601" mi="0" ci="6" mb="0" cb="0"/><line nr="1602" mi="0" ci="1" mb="0" cb="0"/><line nr="1607" mi="0" ci="6" mb="0" cb="2"/><line nr="1609" mi="0" ci="4" mb="0" cb="0"/><line nr="1610" mi="0" ci="4" mb="0" cb="2"/><line nr="1611" mi="0" ci="3" mb="0" cb="2"/><line nr="1612" mi="7" ci="1" mb="2" cb="0"/><line nr="1613" mi="0" ci="5" mb="0" cb="0"/><line nr="1615" mi="0" ci="4" mb="0" cb="0"/><line nr="1616" mi="0" ci="2" mb="0" cb="0"/><line nr="1619" mi="0" ci="3" mb="0" cb="2"/><line nr="1620" mi="0" ci="1" mb="0" cb="0"/><line nr="1621" mi="0" ci="4" mb="0" cb="0"/><line nr="1622" mi="0" ci="7" mb="0" cb="0"/><line nr="1631" mi="0" ci="3" mb="0" cb="2"/><line nr="1632" mi="0" ci="5" mb="0" cb="0"/><line nr="1636" mi="0" ci="1" mb="0" cb="0"/><line nr="1648" mi="0" ci="2" mb="0" cb="0"/><line nr="1650" mi="0" ci="2" mb="0" cb="0"/><line nr="1651" mi="0" ci="3" mb="0" cb="0"/><line nr="1656" mi="0" ci="2" mb="0" cb="0"/><line nr="1660" mi="0" ci="3" mb="0" cb="0"/><line nr="1661" mi="0" ci="3" mb="0" cb="0"/><line nr="1662" mi="7" ci="1" mb="2" cb="0"/><line nr="1663" mi="7" ci="1" mb="2" cb="0"/><line nr="1665" mi="0" ci="4" mb="0" cb="0"/><line nr="1666" mi="0" ci="4" mb="0" cb="0"/><line nr="1667" mi="0" ci="3" mb="0" cb="2"/><line nr="1668" mi="0" ci="3" mb="0" cb="2"/><line nr="1669" mi="0" ci="3" mb="0" cb="0"/><line nr="1670" mi="0" ci="9" mb="0" cb="2"/><line nr="1671" mi="0" ci="3" mb="0" cb="0"/><line nr="1672" mi="0" ci="4" mb="0" cb="2"/><line nr="1673" mi="0" ci="1" mb="0" cb="0"/><line nr="1674" mi="0" ci="3" mb="0" cb="0"/><line nr="1675" mi="0" ci="4" mb="0" cb="2"/><line nr="1676" mi="0" ci="1" mb="0" cb="0"/><line nr="1677" mi="0" ci="3" mb="0" cb="0"/><line nr="1678" mi="0" ci="3" mb="0" cb="0"/><line nr="1679" mi="0" ci="1" mb="0" cb="0"/><line nr="1680" mi="0" ci="9" mb="0" cb="2"/><line nr="1681" mi="0" ci="3" mb="0" cb="0"/><line nr="1682" mi="0" ci="4" mb="0" cb="2"/><line nr="1683" mi="0" ci="1" mb="0" cb="0"/><line nr="1684" mi="0" ci="3" mb="0" cb="0"/><line nr="1685" mi="0" ci="4" mb="0" cb="2"/><line nr="1686" mi="0" ci="1" mb="0" cb="0"/><line nr="1687" mi="0" ci="3" mb="0" cb="0"/><line nr="1688" mi="0" ci="3" mb="0" cb="0"/><line nr="1689" mi="0" ci="1" mb="0" cb="0"/><line nr="1690" mi="0" ci="1" mb="0" cb="0"/><line nr="1692" mi="0" ci="3" mb="0" cb="2"/><line nr="1693" mi="0" ci="3" mb="0" cb="0"/><line nr="1694" mi="0" ci="14" mb="0" cb="2"/><line nr="1696" mi="0" ci="6" mb="0" cb="2"/><line nr="1697" mi="0" ci="4" mb="0" cb="2"/><line nr="1698" mi="0" ci="1" mb="0" cb="0"/><line nr="1699" mi="0" ci="6" mb="0" cb="0"/><line nr="1701" mi="10" ci="1" mb="2" cb="0"/><line nr="1702" mi="0" ci="4" mb="0" cb="2"/><line nr="1703" mi="0" ci="1" mb="0" cb="0"/><line nr="1704" mi="0" ci="5" mb="0" cb="0"/><line nr="1706" mi="0" ci="4" mb="0" cb="2"/><line nr="1707" mi="0" ci="1" mb="0" cb="0"/><line nr="1708" mi="0" ci="3" mb="0" cb="0"/><line nr="1709" mi="0" ci="3" mb="0" cb="0"/><line nr="1710" mi="0" ci="1" mb="0" cb="0"/><line nr="1711" mi="0" ci="1" mb="0" cb="0"/><line nr="1713" mi="9" ci="1" mb="2" cb="0"/><line nr="1714" mi="0" ci="6" mb="0" cb="0"/><line nr="1715" mi="0" ci="12" mb="0" cb="2"/><line nr="1716" mi="0" ci="4" mb="0" cb="2"/><line nr="1717" mi="0" ci="3" mb="0" cb="0"/><line nr="1718" mi="0" ci="2" mb="0" cb="0"/><line nr="1719" mi="0" ci="7" mb="0" cb="0"/><line nr="1734" mi="0" ci="1" mb="0" cb="0"/><line nr="1744" mi="0" ci="8" mb="0" cb="0"/><line nr="1746" mi="0" ci="7" mb="0" cb="0"/><line nr="1747" mi="0" ci="4" mb="0" cb="0"/><line nr="1748" mi="0" ci="6" mb="0" cb="0"/><line nr="1750" mi="0" ci="5" mb="0" cb="0"/><line nr="1751" mi="0" ci="1" mb="0" cb="0"/><line nr="1755" mi="0" ci="3" mb="0" cb="2"/><line nr="1756" mi="0" ci="10" mb="0" cb="2"/><line nr="1757" mi="0" ci="3" mb="0" cb="0"/><line nr="1758" mi="0" ci="4" mb="0" cb="0"/><line nr="1759" mi="0" ci="17" mb="0" cb="4"/><line nr="1760" mi="0" ci="8" mb="0" cb="4"/><line nr="1761" mi="0" ci="3" mb="0" cb="0"/><line nr="1762" mi="0" ci="4" mb="0" cb="0"/><line nr="1764" mi="0" ci="2" mb="0" cb="0"/><line nr="1766" mi="0" ci="15" mb="0" cb="2"/><line nr="1768" mi="0" ci="7" mb="0" cb="2"/><line nr="1769" mi="0" ci="4" mb="0" cb="0"/><line nr="1770" mi="0" ci="19" mb="0" cb="4"/><line nr="1771" mi="0" ci="8" mb="0" cb="4"/><line nr="1772" mi="0" ci="3" mb="0" cb="0"/><line nr="1773" mi="0" ci="4" mb="0" cb="0"/><line nr="1775" mi="0" ci="1" mb="0" cb="0"/><line nr="1776" mi="11" ci="1" mb="2" cb="0"/><line nr="1777" mi="0" ci="4" mb="0" cb="0"/><line nr="1778" mi="0" ci="19" mb="1" cb="3"/><line nr="1779" mi="0" ci="8" mb="0" cb="4"/><line nr="1780" mi="0" ci="3" mb="0" cb="0"/><line nr="1781" mi="0" ci="5" mb="0" cb="0"/><line nr="1784" mi="0" ci="1" mb="0" cb="0"/><line nr="1786" mi="0" ci="1" mb="0" cb="0"/><line nr="1789" mi="0" ci="8" mb="0" cb="0"/><line nr="1790" mi="11" ci="1" mb="2" cb="0"/><line nr="1792" mi="0" ci="10" mb="0" cb="0"/><line nr="1793" mi="0" ci="8" mb="0" cb="0"/><line nr="1794" mi="0" ci="8" mb="0" cb="0"/><line nr="1795" mi="0" ci="1" mb="0" cb="0"/><line nr="1799" mi="7" ci="1" mb="2" cb="0"/><line nr="1800" mi="0" ci="5" mb="0" cb="0"/><line nr="1801" mi="0" ci="5" mb="0" cb="0"/><line nr="1802" mi="8" ci="1" mb="2" cb="0"/><line nr="1803" mi="0" ci="4" mb="0" cb="0"/><line nr="1805" mi="0" ci="6" mb="0" cb="0"/><line nr="1806" mi="8" ci="1" mb="2" cb="0"/><line nr="1807" mi="0" ci="6" mb="0" cb="0"/><line nr="1808" mi="0" ci="3" mb="0" cb="2"/><line nr="1809" mi="0" ci="1" mb="0" cb="0"/><line nr="1810" mi="0" ci="6" mb="0" cb="0"/><line nr="1812" mi="8" ci="1" mb="2" cb="0"/><line nr="1815" mi="0" ci="2" mb="0" cb="0"/><line nr="1816" mi="0" ci="6" mb="0" cb="0"/><line nr="1817" mi="0" ci="8" mb="0" cb="0"/><line nr="1818" mi="0" ci="5" mb="0" cb="0"/><line nr="1819" mi="0" ci="3" mb="0" cb="2"/><line nr="1820" mi="0" ci="1" mb="0" cb="0"/><line nr="1822" mi="0" ci="1" mb="0" cb="0"/><line nr="1826" mi="0" ci="2" mb="0" cb="0"/><line nr="1829" mi="0" ci="6" mb="0" cb="2"/><line nr="1830" mi="0" ci="5" mb="0" cb="0"/><line nr="1831" mi="8" ci="1" mb="2" cb="0"/><line nr="1832" mi="0" ci="6" mb="0" cb="0"/><line nr="1834" mi="10" ci="1" mb="2" cb="0"/><line nr="1835" mi="0" ci="5" mb="0" cb="0"/><line nr="1836" mi="8" ci="1" mb="2" cb="0"/><line nr="1837" mi="0" ci="4" mb="0" cb="0"/><line nr="1840" mi="0" ci="6" mb="0" cb="0"/><line nr="1841" mi="0" ci="4" mb="0" cb="0"/><line nr="1842" mi="0" ci="6" mb="0" cb="2"/><line nr="1843" mi="8" ci="1" mb="2" cb="0"/><line nr="1844" mi="0" ci="3" mb="0" cb="0"/><line nr="1845" mi="0" ci="6" mb="0" cb="0"/><line nr="1847" mi="10" ci="1" mb="2" cb="0"/><line nr="1848" mi="8" ci="1" mb="2" cb="0"/><line nr="1849" mi="0" ci="5" mb="0" cb="0"/><line nr="1851" mi="0" ci="4" mb="0" cb="0"/><line nr="1852" mi="0" ci="3" mb="0" cb="2"/><line nr="1853" mi="0" ci="1" mb="0" cb="0"/><line nr="1854" mi="0" ci="2" mb="0" cb="0"/><line nr="1855" mi="0" ci="1" mb="0" cb="0"/><line nr="1856" mi="8" ci="1" mb="2" cb="0"/><line nr="1859" mi="0" ci="2" mb="0" cb="0"/><line nr="1860" mi="0" ci="6" mb="0" cb="0"/><line nr="1861" mi="0" ci="6" mb="0" cb="2"/><line nr="1862" mi="0" ci="8" mb="0" cb="0"/><line nr="1863" mi="0" ci="6" mb="0" cb="0"/><line nr="1865" mi="10" ci="1" mb="2" cb="0"/><line nr="1866" mi="0" ci="8" mb="0" cb="0"/><line nr="1867" mi="0" ci="5" mb="0" cb="0"/><line nr="1869" mi="0" ci="3" mb="0" cb="2"/><line nr="1870" mi="0" ci="1" mb="0" cb="0"/><line nr="1872" mi="0" ci="1" mb="0" cb="0"/><line nr="1876" mi="0" ci="3" mb="0" cb="2"/><line nr="1877" mi="0" ci="8" mb="0" cb="0"/><line nr="1878" mi="0" ci="14" mb="0" cb="2"/><line nr="1879" mi="0" ci="4" mb="0" cb="2"/><line nr="1880" mi="0" ci="1" mb="0" cb="0"/><line nr="1881" mi="0" ci="4" mb="0" cb="0"/><line nr="1882" mi="0" ci="4" mb="0" cb="2"/><line nr="1883" mi="0" ci="10" mb="0" cb="0"/><line nr="1884" mi="0" ci="1" mb="0" cb="0"/><line nr="1885" mi="0" ci="3" mb="0" cb="2"/><line nr="1886" mi="0" ci="1" mb="0" cb="0"/><line nr="1889" mi="0" ci="7" mb="0" cb="0"/><line nr="1890" mi="0" ci="14" mb="0" cb="2"/><line nr="1891" mi="0" ci="4" mb="0" cb="2"/><line nr="1892" mi="0" ci="1" mb="0" cb="0"/><line nr="1893" mi="0" ci="4" mb="0" cb="0"/><line nr="1894" mi="0" ci="6" mb="0" cb="2"/><line nr="1895" mi="0" ci="4" mb="0" cb="2"/><line nr="1896" mi="0" ci="11" mb="0" cb="0"/><line nr="1898" mi="10" ci="1" mb="2" cb="0"/><line nr="1899" mi="0" ci="4" mb="0" cb="2"/><line nr="1900" mi="0" ci="10" mb="0" cb="0"/><line nr="1902" mi="0" ci="1" mb="0" cb="0"/><line nr="1903" mi="0" ci="3" mb="0" cb="2"/><line nr="1904" mi="0" ci="1" mb="0" cb="0"/><line nr="1907" mi="0" ci="1" mb="0" cb="0"/><line nr="1911" mi="0" ci="7" mb="0" cb="0"/><line nr="1916" mi="0" ci="11" mb="0" cb="2"/><line nr="1920" mi="0" ci="5" mb="0" cb="0"/><line nr="1924" mi="0" ci="10" mb="0" cb="0"/><line nr="1929" mi="0" ci="10" mb="0" cb="2"/><line nr="1934" mi="0" ci="10" mb="0" cb="2"/><line nr="1938" mi="7" ci="1" mb="2" cb="0"/><line nr="1939" mi="0" ci="12" mb="0" cb="0"/><line nr="1944" mi="7" ci="1" mb="2" cb="0"/><line nr="1945" mi="0" ci="10" mb="0" cb="2"/><line nr="1950" mi="0" ci="10" mb="0" cb="2"/><line nr="1955" mi="0" ci="1" mb="0" cb="0"/><line nr="1963" mi="0" ci="8" mb="0" cb="0"/><line nr="1965" mi="0" ci="7" mb="0" cb="0"/><line nr="1966" mi="0" ci="4" mb="0" cb="0"/><line nr="1967" mi="0" ci="6" mb="0" cb="0"/><line nr="1969" mi="0" ci="5" mb="0" cb="0"/><line nr="1970" mi="0" ci="1" mb="0" cb="0"/><line nr="1974" mi="0" ci="3" mb="0" cb="2"/><line nr="1975" mi="0" ci="10" mb="0" cb="2"/><line nr="1976" mi="0" ci="3" mb="0" cb="0"/><line nr="1977" mi="0" ci="4" mb="0" cb="0"/><line nr="1978" mi="0" ci="15" mb="0" cb="4"/><line nr="1979" mi="0" ci="8" mb="0" cb="4"/><line nr="1980" mi="0" ci="3" mb="0" cb="0"/><line nr="1981" mi="0" ci="4" mb="0" cb="0"/><line nr="1983" mi="0" ci="2" mb="0" cb="0"/><line nr="1985" mi="0" ci="15" mb="0" cb="2"/><line nr="1987" mi="0" ci="7" mb="0" cb="2"/><line nr="1988" mi="0" ci="4" mb="0" cb="0"/><line nr="1989" mi="0" ci="17" mb="0" cb="4"/><line nr="1990" mi="0" ci="8" mb="0" cb="4"/><line nr="1991" mi="0" ci="3" mb="0" cb="0"/><line nr="1992" mi="0" ci="4" mb="0" cb="0"/><line nr="1994" mi="0" ci="1" mb="0" cb="0"/><line nr="1995" mi="11" ci="1" mb="2" cb="0"/><line nr="1996" mi="0" ci="4" mb="0" cb="0"/><line nr="1997" mi="0" ci="17" mb="0" cb="4"/><line nr="1998" mi="0" ci="8" mb="0" cb="4"/><line nr="1999" mi="0" ci="3" mb="0" cb="0"/><line nr="2000" mi="0" ci="5" mb="0" cb="0"/><line nr="2003" mi="0" ci="1" mb="0" cb="0"/><line nr="2005" mi="0" ci="1" mb="0" cb="0"/><line nr="2008" mi="0" ci="8" mb="0" cb="0"/><line nr="2009" mi="9" ci="1" mb="2" cb="0"/><line nr="2011" mi="0" ci="10" mb="0" cb="0"/><line nr="2012" mi="0" ci="8" mb="0" cb="0"/><line nr="2013" mi="0" ci="8" mb="0" cb="0"/><line nr="2014" mi="0" ci="1" mb="0" cb="0"/><line nr="2018" mi="7" ci="1" mb="2" cb="0"/><line nr="2019" mi="0" ci="5" mb="0" cb="0"/><line nr="2020" mi="0" ci="5" mb="0" cb="0"/><line nr="2021" mi="8" ci="1" mb="2" cb="0"/><line nr="2022" mi="0" ci="4" mb="0" cb="0"/><line nr="2024" mi="0" ci="6" mb="0" cb="0"/><line nr="2025" mi="8" ci="1" mb="2" cb="0"/><line nr="2026" mi="0" ci="6" mb="0" cb="0"/><line nr="2027" mi="0" ci="3" mb="0" cb="2"/><line nr="2028" mi="0" ci="1" mb="0" cb="0"/><line nr="2029" mi="0" ci="6" mb="0" cb="0"/><line nr="2031" mi="6" ci="1" mb="2" cb="0"/><line nr="2034" mi="0" ci="2" mb="0" cb="0"/><line nr="2035" mi="0" ci="6" mb="0" cb="0"/><line nr="2036" mi="0" ci="8" mb="0" cb="0"/><line nr="2037" mi="0" ci="5" mb="0" cb="0"/><line nr="2038" mi="0" ci="3" mb="0" cb="2"/><line nr="2039" mi="0" ci="1" mb="0" cb="0"/><line nr="2041" mi="0" ci="1" mb="0" cb="0"/><line nr="2045" mi="0" ci="2" mb="0" cb="0"/><line nr="2048" mi="0" ci="6" mb="0" cb="2"/><line nr="2049" mi="0" ci="5" mb="0" cb="0"/><line nr="2050" mi="8" ci="1" mb="2" cb="0"/><line nr="2051" mi="0" ci="6" mb="0" cb="0"/><line nr="2053" mi="10" ci="1" mb="2" cb="0"/><line nr="2054" mi="0" ci="5" mb="0" cb="0"/><line nr="2055" mi="8" ci="1" mb="2" cb="0"/><line nr="2056" mi="0" ci="4" mb="0" cb="0"/><line nr="2059" mi="0" ci="6" mb="0" cb="0"/><line nr="2060" mi="0" ci="4" mb="0" cb="0"/><line nr="2061" mi="0" ci="6" mb="0" cb="2"/><line nr="2062" mi="6" ci="1" mb="2" cb="0"/><line nr="2063" mi="0" ci="3" mb="0" cb="0"/><line nr="2064" mi="0" ci="6" mb="0" cb="0"/><line nr="2066" mi="10" ci="1" mb="2" cb="0"/><line nr="2067" mi="6" ci="1" mb="2" cb="0"/><line nr="2068" mi="0" ci="5" mb="0" cb="0"/><line nr="2070" mi="0" ci="4" mb="0" cb="0"/><line nr="2071" mi="0" ci="3" mb="0" cb="2"/><line nr="2072" mi="0" ci="1" mb="0" cb="0"/><line nr="2073" mi="0" ci="2" mb="0" cb="0"/><line nr="2074" mi="0" ci="1" mb="0" cb="0"/><line nr="2075" mi="6" ci="1" mb="2" cb="0"/><line nr="2078" mi="0" ci="2" mb="0" cb="0"/><line nr="2079" mi="0" ci="6" mb="0" cb="0"/><line nr="2080" mi="0" ci="6" mb="0" cb="2"/><line nr="2081" mi="0" ci="8" mb="0" cb="0"/><line nr="2082" mi="0" ci="6" mb="0" cb="0"/><line nr="2084" mi="10" ci="1" mb="2" cb="0"/><line nr="2085" mi="0" ci="8" mb="0" cb="0"/><line nr="2086" mi="0" ci="5" mb="0" cb="0"/><line nr="2088" mi="0" ci="3" mb="0" cb="2"/><line nr="2089" mi="0" ci="1" mb="0" cb="0"/><line nr="2091" mi="0" ci="1" mb="0" cb="0"/><line nr="2095" mi="0" ci="3" mb="0" cb="2"/><line nr="2096" mi="0" ci="8" mb="0" cb="0"/><line nr="2097" mi="0" ci="14" mb="0" cb="2"/><line nr="2098" mi="0" ci="4" mb="0" cb="2"/><line nr="2099" mi="0" ci="1" mb="0" cb="0"/><line nr="2100" mi="0" ci="4" mb="0" cb="0"/><line nr="2101" mi="0" ci="2" mb="0" cb="2"/><line nr="2102" mi="0" ci="10" mb="0" cb="0"/><line nr="2103" mi="0" ci="1" mb="0" cb="0"/><line nr="2104" mi="0" ci="3" mb="0" cb="2"/><line nr="2105" mi="0" ci="1" mb="0" cb="0"/><line nr="2108" mi="0" ci="7" mb="0" cb="0"/><line nr="2109" mi="0" ci="14" mb="0" cb="2"/><line nr="2110" mi="0" ci="4" mb="0" cb="2"/><line nr="2111" mi="0" ci="1" mb="0" cb="0"/><line nr="2112" mi="0" ci="4" mb="0" cb="0"/><line nr="2113" mi="0" ci="6" mb="0" cb="2"/><line nr="2114" mi="0" ci="2" mb="0" cb="2"/><line nr="2115" mi="0" ci="11" mb="0" cb="0"/><line nr="2117" mi="10" ci="1" mb="2" cb="0"/><line nr="2118" mi="0" ci="2" mb="0" cb="2"/><line nr="2119" mi="0" ci="10" mb="0" cb="0"/><line nr="2121" mi="0" ci="1" mb="0" cb="0"/><line nr="2122" mi="0" ci="3" mb="0" cb="2"/><line nr="2123" mi="0" ci="1" mb="0" cb="0"/><line nr="2126" mi="0" ci="1" mb="0" cb="0"/><line nr="2130" mi="0" ci="8" mb="0" cb="0"/><line nr="2135" mi="0" ci="9" mb="0" cb="2"/><line nr="2139" mi="0" ci="5" mb="0" cb="0"/><line nr="2143" mi="0" ci="10" mb="0" cb="0"/><line nr="2148" mi="0" ci="8" mb="0" cb="2"/><line nr="2153" mi="0" ci="8" mb="0" cb="2"/><line nr="2157" mi="7" ci="1" mb="2" cb="0"/><line nr="2158" mi="0" ci="12" mb="0" cb="0"/><line nr="2163" mi="7" ci="1" mb="2" cb="0"/><line nr="2164" mi="0" ci="8" mb="0" cb="2"/><line nr="2169" mi="0" ci="8" mb="0" cb="2"/><counter type="INSTRUCTION" missed="1288" covered="5409"/><counter type="BRANCH" missed="282" covered="686"/><counter type="LINE" missed="41" covered="1180"/><counter type="COMPLEXITY" missed="157" covered="456"/><counter type="METHOD" missed="7" covered="120"/><counter type="CLASS" missed="0" covered="19"/></sourcefile><sourcefile name="MinimumMeanCycleHoward.java"><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="79" mi="0" ci="13" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="2"/><line nr="98" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="13" mb="0" cb="2"/><line nr="108" mi="0" ci="13" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="2"/><line nr="119" mi="0" ci="9" mb="0" cb="2"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="7" ci="1" mb="2" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="7" ci="1" mb="2" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="1" cb="3"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="11" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="13" mb="0" cb="2"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="2"/><line nr="183" mi="0" ci="4" mb="0" cb="2"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="2" mb="0" cb="2"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="11" mb="0" cb="2"/><line nr="199" mi="0" ci="13" mb="0" cb="4"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="1" cb="3"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="9" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="2"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="2"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="442"/><counter type="BRANCH" missed="7" covered="59"/><counter type="LINE" missed="4" covered="113"/><counter type="COMPLEXITY" missed="5" covered="32"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTreeBoruvka.java"><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="1" cb="1"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="7" ci="1" mb="2" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="2"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="6" mb="0" cb="2"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="2"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="8" mb="0" cb="4"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="2"/><line nr="169" mi="0" ci="5" mb="0" cb="2"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="2"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="9" mb="0" cb="2"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="7" ci="1" mb="2" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="11" mb="0" cb="2"/><line nr="200" mi="0" ci="3" mb="0" cb="2"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="7" mb="0" cb="2"/><line nr="210" mi="0" ci="8" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="425"/><counter type="BRANCH" missed="5" covered="49"/><counter type="LINE" missed="1" covered="106"/><counter type="COMPLEXITY" missed="3" covered="31"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="CyclesFinder.java"><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="9" ci="0" mb="3" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="2" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="0"/><counter type="BRANCH" missed="7" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="MatchingWeightedBlossomV.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="11" ci="1" mb="2" cb="0"/><line nr="78" mi="11" ci="1" mb="2" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="86" mi="0" ci="13" mb="0" cb="0"/><line nr="87" mi="11" ci="1" mb="2" cb="0"/><line nr="88" mi="11" ci="1" mb="2" cb="0"/><line nr="89" mi="7" ci="1" mb="2" cb="0"/><line nr="90" mi="7" ci="1" mb="2" cb="0"/><line nr="94" mi="0" ci="11" mb="0" cb="2"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="7" ci="1" mb="2" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="15" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="15" mb="0" cb="2"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="2"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="8" ci="1" mb="2" cb="0"/><line nr="119" mi="0" ci="9" mb="0" cb="2"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="1" cb="1"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="2"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="2"/><line nr="173" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="12" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="11" mb="0" cb="2"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="2"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="11" mb="0" cb="2"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="2"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="11" mb="0" cb="2"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="4" ci="7" mb="1" cb="1"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="11" mb="0" cb="2"/><line nr="234" mi="7" ci="1" mb="2" cb="0"/><line nr="235" mi="9" ci="1" mb="2" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="11" mb="0" cb="2"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="6" mb="0" cb="0"/><line nr="245" mi="0" ci="9" mb="0" cb="2"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="12" ci="1" mb="2" cb="0"/><line nr="248" mi="3" ci="0" mb="2" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="11" mb="0" cb="2"/><line nr="254" mi="0" ci="3" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="2"/><line nr="259" mi="0" ci="13" mb="0" cb="2"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="11" ci="1" mb="2" cb="0"/><line nr="263" mi="4" ci="0" mb="2" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="16" mb="0" cb="4"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="2" mb="0" cb="2"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="2"/><line nr="282" mi="0" ci="12" mb="0" cb="2"/><line nr="284" mi="0" ci="3" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="0" cb="2"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="2"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="10" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="1" cb="1"/><line nr="297" mi="1" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="7" ci="1" mb="2" cb="0"/><line nr="307" mi="0" ci="11" mb="0" cb="2"/><line nr="308" mi="8" ci="1" mb="2" cb="0"/><line nr="309" mi="9" ci="1" mb="2" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="11" mb="0" cb="2"/><line nr="313" mi="8" ci="1" mb="2" cb="0"/><line nr="314" mi="9" ci="1" mb="2" cb="0"/><line nr="315" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="2"/><line nr="321" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="8" mb="0" cb="2"/><line nr="324" mi="0" ci="2" mb="0" cb="2"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="337" mi="0" ci="17" mb="0" cb="2"/><line nr="338" mi="7" ci="1" mb="2" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="0" ci="11" mb="0" cb="2"/><line nr="341" mi="0" ci="6" mb="0" cb="0"/><line nr="342" mi="0" ci="11" mb="0" cb="2"/><line nr="343" mi="0" ci="6" mb="0" cb="0"/><line nr="344" mi="7" ci="1" mb="2" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="17" mb="0" cb="2"/><line nr="349" mi="0" ci="11" mb="0" cb="2"/><line nr="350" mi="8" ci="1" mb="2" cb="0"/><line nr="351" mi="0" ci="11" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="17" mb="0" cb="2"/><line nr="356" mi="0" ci="11" mb="0" cb="2"/><line nr="357" mi="9" ci="2" mb="2" cb="0"/><line nr="360" mi="0" ci="17" mb="0" cb="2"/><line nr="361" mi="0" ci="3" mb="0" cb="2"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="363" mi="0" ci="2" mb="0" cb="0"/><line nr="364" mi="0" ci="11" mb="0" cb="2"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="11" mb="0" cb="2"/><line nr="367" mi="0" ci="6" mb="0" cb="0"/><line nr="368" mi="0" ci="6" mb="0" cb="0"/><line nr="371" mi="0" ci="4" mb="0" cb="0"/><line nr="372" mi="0" ci="3" mb="1" cb="1"/><line nr="373" mi="0" ci="3" mb="0" cb="2"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="8" ci="1" mb="2" cb="0"/><line nr="376" mi="0" ci="9" mb="0" cb="4"/><line nr="377" mi="0" ci="9" mb="0" cb="0"/><line nr="378" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="7" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="0"/><line nr="382" mi="0" ci="6" mb="0" cb="0"/><line nr="383" mi="0" ci="1" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="386" mi="0" ci="1" mb="0" cb="0"/><line nr="388" mi="0" ci="3" mb="0" cb="2"/><line nr="389" mi="0" ci="4" mb="0" cb="0"/><line nr="390" mi="8" ci="1" mb="2" cb="0"/><line nr="391" mi="0" ci="6" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="394" mi="0" ci="3" mb="0" cb="2"/><line nr="395" mi="0" ci="3" mb="0" cb="2"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="8" ci="1" mb="2" cb="0"/><line nr="398" mi="0" ci="12" mb="1" cb="5"/><line nr="399" mi="0" ci="9" mb="0" cb="0"/><line nr="400" mi="0" ci="2" mb="0" cb="0"/><line nr="401" mi="0" ci="3" mb="0" cb="0"/><line nr="402" mi="0" ci="7" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="0" ci="6" mb="0" cb="0"/><line nr="405" mi="0" ci="1" mb="0" cb="0"/><line nr="407" mi="0" ci="6" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="410" mi="0" ci="3" mb="0" cb="2"/><line nr="411" mi="0" ci="4" mb="0" cb="0"/><line nr="412" mi="8" ci="1" mb="2" cb="0"/><line nr="413" mi="0" ci="6" mb="0" cb="0"/><line nr="414" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="3" mb="0" cb="0"/><line nr="419" mi="0" ci="17" mb="0" cb="2"/><line nr="420" mi="0" ci="3" mb="0" cb="2"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="0"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="2" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="9" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="4" mb="0" cb="2"/><line nr="443" mi="0" ci="3" mb="0" cb="0"/><line nr="444" mi="0" ci="4" mb="0" cb="0"/><line nr="446" mi="8" ci="1" mb="2" cb="0"/><line nr="447" mi="0" ci="3" mb="0" cb="0"/><line nr="448" mi="0" ci="3" mb="0" cb="0"/><line nr="450" mi="10" ci="1" mb="4" cb="0"/><line nr="451" mi="10" ci="1" mb="4" cb="0"/><line nr="453" mi="0" ci="4" mb="0" cb="0"/><line nr="454" mi="7" ci="1" mb="2" cb="0"/><line nr="455" mi="0" ci="3" mb="0" cb="0"/><line nr="456" mi="7" ci="1" mb="2" cb="0"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="460" mi="0" ci="4" mb="0" cb="0"/><line nr="461" mi="0" ci="2" mb="0" cb="2"/><line nr="462" mi="0" ci="2" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="2"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="3" mb="0" cb="2"/><line nr="470" mi="0" ci="2" mb="0" cb="0"/><line nr="471" mi="0" ci="3" mb="0" cb="2"/><line nr="472" mi="0" ci="1" mb="0" cb="0"/><line nr="473" mi="0" ci="5" mb="0" cb="0"/><line nr="475" mi="0" ci="3" mb="0" cb="0"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="2"/><line nr="483" mi="0" ci="3" mb="0" cb="0"/><line nr="484" mi="0" ci="4" mb="0" cb="0"/><line nr="486" mi="8" ci="1" mb="2" cb="0"/><line nr="487" mi="0" ci="3" mb="0" cb="0"/><line nr="488" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="4" mb="0" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="494" mi="10" ci="1" mb="4" cb="0"/><line nr="495" mi="10" ci="1" mb="4" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="0"/><line nr="500" mi="0" ci="3" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="502" mi="0" ci="7" mb="0" cb="0"/><line nr="504" mi="7" ci="1" mb="2" cb="0"/><line nr="505" mi="0" ci="3" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="7" mb="0" cb="0"/><line nr="511" mi="0" ci="3" mb="0" cb="0"/><line nr="512" mi="0" ci="1" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="523" mi="0" ci="18" mb="0" cb="0"/><line nr="524" mi="10" ci="1" mb="4" cb="0"/><line nr="525" mi="10" ci="1" mb="4" cb="0"/><line nr="526" mi="10" ci="1" mb="4" cb="0"/><line nr="527" mi="0" ci="3" mb="0" cb="0"/><line nr="531" mi="0" ci="11" mb="0" cb="2"/><line nr="532" mi="0" ci="3" mb="0" cb="0"/><line nr="533" mi="0" ci="6" mb="0" cb="4"/><line nr="536" mi="0" ci="5" mb="1" cb="3"/><line nr="537" mi="7" ci="1" mb="2" cb="0"/><line nr="538" mi="0" ci="4" mb="0" cb="0"/><line nr="540" mi="0" ci="7" mb="0" cb="0"/><line nr="541" mi="0" ci="4" mb="0" cb="2"/><line nr="542" mi="0" ci="4" mb="0" cb="0"/><line nr="543" mi="0" ci="8" mb="0" cb="0"/><line nr="546" mi="0" ci="7" mb="0" cb="0"/><line nr="548" mi="0" ci="1" mb="0" cb="0"/><line nr="550" mi="0" ci="11" mb="0" cb="2"/><line nr="551" mi="0" ci="3" mb="0" cb="0"/><line nr="552" mi="0" ci="6" mb="0" cb="4"/><line nr="555" mi="0" ci="5" mb="1" cb="3"/><line nr="556" mi="7" ci="1" mb="2" cb="0"/><line nr="557" mi="0" ci="4" mb="0" cb="0"/><line nr="559" mi="0" ci="7" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="2"/><line nr="561" mi="0" ci="4" mb="0" cb="0"/><line nr="562" mi="0" ci="8" mb="0" cb="0"/><line nr="565" mi="0" ci="7" mb="0" cb="0"/><line nr="567" mi="0" ci="1" mb="0" cb="0"/><line nr="570" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="11" mb="0" cb="2"/><line nr="572" mi="0" ci="3" mb="0" cb="0"/><line nr="573" mi="0" ci="7" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="2"/><line nr="576" mi="0" ci="7" mb="1" cb="3"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="583" mi="0" ci="6" mb="0" cb="4"/><line nr="585" mi="0" ci="5" mb="1" cb="3"/><line nr="586" mi="7" ci="1" mb="2" cb="0"/><line nr="587" mi="0" ci="4" mb="0" cb="0"/><line nr="589" mi="0" ci="4" mb="0" cb="2"/><line nr="591" mi="0" ci="7" mb="0" cb="2"/><line nr="593" mi="0" ci="3" mb="0" cb="0"/><line nr="594" mi="0" ci="4" mb="0" cb="0"/><line nr="595" mi="0" ci="6" mb="0" cb="0"/><line nr="598" mi="0" ci="4" mb="0" cb="0"/><line nr="600" mi="0" ci="7" mb="0" cb="4"/><line nr="602" mi="0" ci="4" mb="0" cb="0"/><line nr="603" mi="0" ci="6" mb="0" cb="0"/><line nr="605" mi="0" ci="1" mb="0" cb="0"/><line nr="606" mi="0" ci="11" mb="0" cb="2"/><line nr="607" mi="0" ci="3" mb="0" cb="0"/><line nr="608" mi="0" ci="7" mb="0" cb="0"/><line nr="609" mi="0" ci="3" mb="0" cb="2"/><line nr="611" mi="0" ci="7" mb="1" cb="3"/><line nr="613" mi="0" ci="3" mb="0" cb="0"/><line nr="615" mi="0" ci="4" mb="0" cb="0"/><line nr="618" mi="0" ci="6" mb="0" cb="4"/><line nr="620" mi="0" ci="5" mb="1" cb="3"/><line nr="621" mi="7" ci="1" mb="2" cb="0"/><line nr="622" mi="0" ci="4" mb="0" cb="0"/><line nr="624" mi="0" ci="4" mb="0" cb="2"/><line nr="626" mi="0" ci="7" mb="0" cb="2"/><line nr="628" mi="0" ci="3" mb="0" cb="0"/><line nr="629" mi="0" ci="4" mb="0" cb="0"/><line nr="630" mi="0" ci="6" mb="0" cb="0"/><line nr="633" mi="0" ci="4" mb="0" cb="0"/><line nr="635" mi="0" ci="7" mb="0" cb="4"/><line nr="637" mi="0" ci="4" mb="0" cb="0"/><line nr="638" mi="0" ci="6" mb="0" cb="0"/><line nr="640" mi="0" ci="1" mb="0" cb="0"/><line nr="641" mi="7" ci="1" mb="2" cb="0"/><line nr="642" mi="0" ci="3" mb="0" cb="0"/><line nr="644" mi="7" ci="1" mb="2" cb="0"/><line nr="645" mi="0" ci="3" mb="0" cb="0"/><line nr="646" mi="0" ci="3" mb="0" cb="2"/><line nr="647" mi="0" ci="3" mb="0" cb="0"/><line nr="650" mi="0" ci="3" mb="0" cb="0"/><line nr="654" mi="7" ci="1" mb="2" cb="0"/><line nr="655" mi="7" ci="1" mb="2" cb="0"/><line nr="660" mi="0" ci="3" mb="0" cb="0"/><line nr="661" mi="0" ci="3" mb="0" cb="0"/><line nr="662" mi="0" ci="3" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="665" mi="0" ci="2" mb="0" cb="2"/><line nr="666" mi="0" ci="3" mb="0" cb="0"/><line nr="667" mi="0" ci="4" mb="0" cb="0"/><line nr="668" mi="0" ci="4" mb="0" cb="0"/><line nr="670" mi="0" ci="3" mb="0" cb="0"/><line nr="672" mi="0" ci="3" mb="0" cb="0"/><line nr="673" mi="0" ci="1" mb="0" cb="0"/><line nr="682" mi="0" ci="9" mb="0" cb="0"/><line nr="686" mi="0" ci="13" mb="0" cb="0"/><line nr="687" mi="0" ci="7" mb="0" cb="0"/><line nr="688" mi="0" ci="4" mb="0" cb="0"/><line nr="689" mi="10" ci="1" mb="4" cb="0"/><line nr="690" mi="0" ci="3" mb="0" cb="2"/><line nr="692" mi="0" ci="2" mb="0" cb="0"/><line nr="694" mi="0" ci="6" mb="0" cb="0"/><line nr="695" mi="0" ci="1" mb="0" cb="0"/><line nr="697" mi="0" ci="3" mb="0" cb="0"/><line nr="698" mi="0" ci="3" mb="0" cb="2"/><line nr="700" mi="0" ci="2" mb="0" cb="0"/><line nr="701" mi="0" ci="6" mb="0" cb="0"/><line nr="702" mi="0" ci="3" mb="0" cb="2"/><line nr="703" mi="0" ci="3" mb="0" cb="0"/><line nr="704" mi="0" ci="3" mb="0" cb="0"/><line nr="705" mi="10" ci="1" mb="4" cb="0"/><line nr="706" mi="7" ci="1" mb="2" cb="0"/><line nr="707" mi="0" ci="3" mb="0" cb="0"/><line nr="708" mi="0" ci="3" mb="0" cb="0"/><line nr="709" mi="10" ci="1" mb="4" cb="0"/><line nr="711" mi="0" ci="2" mb="0" cb="0"/><line nr="712" mi="0" ci="1" mb="0" cb="0"/><line nr="715" mi="0" ci="3" mb="0" cb="0"/><line nr="716" mi="7" ci="1" mb="2" cb="0"/><line nr="717" mi="0" ci="3" mb="0" cb="0"/><line nr="718" mi="10" ci="1" mb="4" cb="0"/><line nr="719" mi="0" ci="7" mb="0" cb="0"/><line nr="720" mi="10" ci="1" mb="4" cb="0"/><line nr="723" mi="0" ci="3" mb="0" cb="2"/><line nr="724" mi="0" ci="2" mb="0" cb="0"/><line nr="725" mi="10" ci="1" mb="4" cb="0"/><line nr="726" mi="0" ci="3" mb="0" cb="0"/><line nr="727" mi="10" ci="1" mb="4" cb="0"/><line nr="728" mi="7" ci="1" mb="2" cb="0"/><line nr="729" mi="0" ci="3" mb="0" cb="0"/><line nr="730" mi="0" ci="3" mb="0" cb="0"/><line nr="731" mi="10" ci="1" mb="4" cb="0"/><line nr="732" mi="0" ci="3" mb="0" cb="2"/><line nr="733" mi="0" ci="3" mb="0" cb="0"/><line nr="734" mi="0" ci="1" mb="0" cb="0"/><line nr="736" mi="7" ci="1" mb="2" cb="0"/><line nr="737" mi="0" ci="4" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><line nr="744" mi="0" ci="4" mb="0" cb="0"/><line nr="745" mi="0" ci="27" mb="0" cb="2"/><line nr="746" mi="0" ci="3" mb="0" cb="2"/><line nr="747" mi="0" ci="9" mb="0" cb="0"/><line nr="748" mi="10" ci="1" mb="4" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="0"/><line nr="750" mi="0" ci="3" mb="0" cb="0"/><line nr="751" mi="0" ci="3" mb="0" cb="0"/><line nr="754" mi="0" ci="3" mb="0" cb="0"/><line nr="755" mi="0" ci="9" mb="0" cb="0"/><line nr="756" mi="10" ci="1" mb="4" cb="0"/><line nr="757" mi="0" ci="3" mb="0" cb="0"/><line nr="759" mi="0" ci="3" mb="0" cb="2"/><line nr="760" mi="0" ci="3" mb="0" cb="0"/><line nr="762" mi="0" ci="4" mb="0" cb="0"/><line nr="765" mi="0" ci="9" mb="0" cb="0"/><line nr="766" mi="10" ci="1" mb="4" cb="0"/><line nr="767" mi="0" ci="3" mb="0" cb="0"/><line nr="768" mi="0" ci="3" mb="0" cb="0"/><line nr="771" mi="0" ci="3" mb="0" cb="0"/><line nr="772" mi="0" ci="2" mb="0" cb="0"/><line nr="773" mi="0" ci="3" mb="0" cb="0"/><line nr="774" mi="0" ci="4" mb="0" cb="0"/><line nr="775" mi="0" ci="3" mb="0" cb="0"/><line nr="776" mi="0" ci="3" mb="0" cb="0"/><line nr="777" mi="0" ci="5" mb="0" cb="0"/><line nr="780" mi="0" ci="4" mb="0" cb="0"/><line nr="781" mi="0" ci="4" mb="0" cb="0"/><line nr="783" mi="0" ci="2" mb="0" cb="0"/><line nr="784" mi="0" ci="3" mb="0" cb="2"/><line nr="785" mi="0" ci="4" mb="0" cb="0"/><line nr="786" mi="0" ci="4" mb="0" cb="2"/><line nr="788" mi="0" ci="5" mb="0" cb="0"/><line nr="791" mi="0" ci="3" mb="0" cb="0"/><line nr="793" mi="0" ci="3" mb="0" cb="2"/><line nr="795" mi="0" ci="5" mb="0" cb="0"/><line nr="796" mi="0" ci="2" mb="0" cb="2"/><line nr="798" mi="0" ci="4" mb="0" cb="0"/><line nr="800" mi="0" ci="3" mb="0" cb="2"/><line nr="801" mi="8" ci="1" mb="2" cb="0"/><line nr="802" mi="7" ci="1" mb="2" cb="0"/><line nr="803" mi="0" ci="4" mb="0" cb="0"/><line nr="805" mi="8" ci="1" mb="2" cb="0"/><line nr="806" mi="7" ci="1" mb="2" cb="0"/><line nr="807" mi="0" ci="4" mb="0" cb="0"/><line nr="810" mi="0" ci="3" mb="0" cb="0"/><line nr="811" mi="0" ci="2" mb="0" cb="0"/><line nr="812" mi="0" ci="25" mb="0" cb="2"/><line nr="813" mi="0" ci="8" mb="0" cb="2"/><line nr="814" mi="0" ci="5" mb="0" cb="4"/><line nr="815" mi="0" ci="1" mb="0" cb="0"/><line nr="818" mi="0" ci="3" mb="0" cb="2"/><line nr="819" mi="0" ci="8" mb="0" cb="0"/><line nr="821" mi="7" ci="1" mb="2" cb="0"/><line nr="822" mi="0" ci="7" mb="0" cb="0"/><line nr="824" mi="0" ci="3" mb="0" cb="0"/><line nr="826" mi="0" ci="3" mb="0" cb="2"/><line nr="828" mi="0" ci="7" mb="0" cb="2"/><line nr="829" mi="0" ci="4" mb="0" cb="0"/><line nr="830" mi="0" ci="3" mb="0" cb="0"/><line nr="831" mi="0" ci="12" mb="0" cb="4"/><line nr="833" mi="0" ci="3" mb="0" cb="2"/><line nr="834" mi="0" ci="4" mb="0" cb="0"/><line nr="836" mi="0" ci="3" mb="0" cb="2"/><line nr="837" mi="0" ci="3" mb="0" cb="2"/><line nr="838" mi="0" ci="8" mb="0" cb="0"/><line nr="843" mi="0" ci="2" mb="0" cb="0"/><line nr="844" mi="0" ci="3" mb="0" cb="0"/><line nr="846" mi="0" ci="3" mb="0" cb="0"/><line nr="848" mi="0" ci="1" mb="0" cb="0"/><line nr="849" mi="0" ci="7" mb="0" cb="2"/><line nr="850" mi="0" ci="4" mb="0" cb="0"/><line nr="851" mi="0" ci="3" mb="0" cb="0"/><line nr="852" mi="0" ci="12" mb="0" cb="4"/><line nr="854" mi="0" ci="3" mb="0" cb="2"/><line nr="855" mi="0" ci="4" mb="0" cb="0"/><line nr="857" mi="0" ci="3" mb="0" cb="2"/><line nr="858" mi="0" ci="3" mb="0" cb="2"/><line nr="859" mi="0" ci="8" mb="0" cb="0"/><line nr="864" mi="0" ci="2" mb="0" cb="0"/><line nr="865" mi="0" ci="3" mb="0" cb="0"/><line nr="867" mi="0" ci="3" mb="0" cb="0"/><line nr="869" mi="0" ci="1" mb="0" cb="0"/><line nr="872" mi="0" ci="9" mb="0" cb="2"/><line nr="873" mi="0" ci="3" mb="0" cb="0"/><line nr="874" mi="0" ci="3" mb="0" cb="0"/><line nr="875" mi="0" ci="3" mb="0" cb="0"/><line nr="876" mi="0" ci="3" mb="0" cb="0"/><line nr="878" mi="0" ci="2" mb="0" cb="2"/><line nr="879" mi="0" ci="3" mb="0" cb="2"/><line nr="880" mi="0" ci="1" mb="0" cb="0"/><line nr="881" mi="0" ci="3" mb="0" cb="0"/><line nr="882" mi="0" ci="5" mb="0" cb="0"/><line nr="884" mi="0" ci="3" mb="0" cb="0"/><line nr="885" mi="0" ci="2" mb="0" cb="0"/><line nr="886" mi="0" ci="4" mb="0" cb="0"/><line nr="887" mi="0" ci="3" mb="0" cb="2"/><line nr="888" mi="0" ci="1" mb="0" cb="0"/><line nr="890" mi="0" ci="1" mb="0" cb="0"/><line nr="892" mi="0" ci="3" mb="0" cb="0"/><line nr="893" mi="0" ci="3" mb="0" cb="0"/><line nr="896" mi="0" ci="7" mb="0" cb="0"/><line nr="897" mi="7" ci="1" mb="2" cb="0"/><line nr="898" mi="0" ci="3" mb="0" cb="0"/><line nr="899" mi="0" ci="4" mb="0" cb="0"/><line nr="900" mi="0" ci="3" mb="0" cb="2"/><line nr="901" mi="0" ci="1" mb="0" cb="0"/><line nr="905" mi="0" ci="3" mb="0" cb="2"/><line nr="906" mi="0" ci="5" mb="0" cb="2"/><line nr="907" mi="0" ci="6" mb="0" cb="0"/><line nr="909" mi="9" ci="1" mb="2" cb="0"/><line nr="910" mi="0" ci="5" mb="0" cb="0"/><line nr="913" mi="0" ci="9" mb="0" cb="0"/><line nr="916" mi="0" ci="3" mb="0" cb="0"/><line nr="920" mi="7" ci="1" mb="2" cb="0"/><line nr="921" mi="0" ci="3" mb="0" cb="2"/><line nr="922" mi="0" ci="6" mb="0" cb="0"/><line nr="924" mi="0" ci="5" mb="0" cb="0"/><line nr="925" mi="0" ci="4" mb="0" cb="0"/><line nr="927" mi="0" ci="4" mb="0" cb="2"/><line nr="929" mi="0" ci="6" mb="0" cb="0"/><line nr="931" mi="0" ci="4" mb="0" cb="0"/><line nr="932" mi="0" ci="4" mb="0" cb="0"/><line nr="934" mi="0" ci="6" mb="0" cb="0"/><line nr="935" mi="0" ci="1" mb="0" cb="0"/><line nr="938" mi="0" ci="3" mb="0" cb="2"/><line nr="939" mi="0" ci="1" mb="0" cb="0"/><line nr="941" mi="0" ci="3" mb="0" cb="0"/><line nr="942" mi="0" ci="3" mb="0" cb="2"/><line nr="943" mi="0" ci="4" mb="0" cb="0"/><line nr="945" mi="0" ci="3" mb="0" cb="0"/><line nr="946" mi="0" ci="5" mb="0" cb="0"/><line nr="947" mi="0" ci="5" mb="0" cb="0"/><line nr="948" mi="0" ci="4" mb="0" cb="0"/><line nr="950" mi="0" ci="1" mb="0" cb="0"/><line nr="953" mi="0" ci="4" mb="0" cb="0"/><line nr="954" mi="0" ci="1" mb="0" cb="0"/><line nr="957" mi="0" ci="4" mb="0" cb="0"/><line nr="958" mi="0" ci="1" mb="0" cb="0"/><line nr="969" mi="0" ci="2" mb="0" cb="2"/><line nr="970" mi="0" ci="4" mb="0" cb="0"/><line nr="971" mi="0" ci="4" mb="0" cb="0"/><line nr="973" mi="0" ci="4" mb="0" cb="0"/><line nr="974" mi="0" ci="3" mb="0" cb="0"/><line nr="976" mi="6" ci="1" mb="2" cb="0"/><line nr="979" mi="0" ci="7" mb="0" cb="4"/><line nr="981" mi="0" ci="7" mb="0" cb="0"/><line nr="982" mi="0" ci="10" mb="0" cb="2"/><line nr="983" mi="0" ci="3" mb="0" cb="0"/><line nr="987" mi="0" ci="9" mb="0" cb="0"/><line nr="988" mi="0" ci="3" mb="0" cb="2"/><line nr="990" mi="0" ci="4" mb="0" cb="0"/><line nr="992" mi="0" ci="3" mb="0" cb="2"/><line nr="993" mi="0" ci="4" mb="0" cb="2"/><line nr="995" mi="0" ci="4" mb="0" cb="0"/><line nr="996" mi="0" ci="6" mb="0" cb="0"/><line nr="999" mi="0" ci="4" mb="0" cb="0"/><line nr="1001" mi="0" ci="4" mb="0" cb="2"/><line nr="1003" mi="7" ci="1" mb="2" cb="0"/><line nr="1004" mi="0" ci="4" mb="0" cb="0"/><line nr="1005" mi="0" ci="6" mb="0" cb="0"/><line nr="1007" mi="0" ci="1" mb="0" cb="0"/><line nr="1016" mi="0" ci="9" mb="0" cb="0"/><line nr="1017" mi="7" ci="1" mb="2" cb="0"/><line nr="1018" mi="7" ci="1" mb="2" cb="0"/><line nr="1019" mi="7" ci="1" mb="2" cb="0"/><line nr="1021" mi="0" ci="3" mb="0" cb="0"/><line nr="1022" mi="0" ci="3" mb="0" cb="0"/><line nr="1024" mi="0" ci="3" mb="0" cb="0"/><line nr="1025" mi="0" ci="6" mb="0" cb="0"/><line nr="1026" mi="0" ci="5" mb="0" cb="0"/><line nr="1028" mi="0" ci="6" mb="0" cb="0"/><line nr="1029" mi="0" ci="5" mb="0" cb="0"/><line nr="1031" mi="0" ci="2" mb="0" cb="0"/><line nr="1032" mi="0" ci="3" mb="0" cb="0"/><line nr="1033" mi="3" ci="5" mb="1" cb="1"/><line nr="1034" mi="3" ci="0" mb="0" cb="0"/><line nr="1035" mi="4" ci="0" mb="0" cb="0"/><line nr="1036" mi="4" ci="0" mb="0" cb="0"/><line nr="1037" mi="3" ci="0" mb="2" cb="0"/><line nr="1038" mi="3" ci="0" mb="0" cb="0"/><line nr="1039" mi="3" ci="0" mb="0" cb="0"/><line nr="1040" mi="3" ci="0" mb="0" cb="0"/><line nr="1041" mi="10" ci="0" mb="0" cb="0"/><line nr="1043" mi="4" ci="0" mb="0" cb="0"/><line nr="1044" mi="3" ci="0" mb="0" cb="0"/><line nr="1047" mi="0" ci="3" mb="0" cb="0"/><line nr="1048" mi="0" ci="3" mb="0" cb="0"/><line nr="1049" mi="0" ci="1" mb="0" cb="0"/><line nr="1050" mi="0" ci="3" mb="0" cb="0"/><line nr="1051" mi="8" ci="1" mb="2" cb="0"/><line nr="1052" mi="8" ci="1" mb="2" cb="0"/><line nr="1053" mi="0" ci="5" mb="0" cb="0"/><line nr="1054" mi="0" ci="2" mb="0" cb="0"/><line nr="1055" mi="0" ci="3" mb="0" cb="0"/><line nr="1056" mi="0" ci="3" mb="0" cb="2"/><line nr="1057" mi="0" ci="1" mb="0" cb="0"/><line nr="1058" mi="0" ci="4" mb="0" cb="0"/><line nr="1060" mi="0" ci="3" mb="0" cb="0"/><line nr="1061" mi="0" ci="5" mb="0" cb="0"/><line nr="1062" mi="0" ci="2" mb="0" cb="0"/><line nr="1063" mi="0" ci="3" mb="0" cb="0"/><line nr="1064" mi="0" ci="4" mb="0" cb="0"/><line nr="1066" mi="0" ci="3" mb="0" cb="0"/><line nr="1067" mi="0" ci="1" mb="0" cb="0"/><line nr="1068" mi="0" ci="4" mb="0" cb="0"/><line nr="1070" mi="0" ci="2" mb="0" cb="0"/><line nr="1071" mi="0" ci="3" mb="0" cb="0"/><line nr="1072" mi="0" ci="6" mb="0" cb="0"/><line nr="1073" mi="0" ci="4" mb="0" cb="0"/><line nr="1074" mi="0" ci="3" mb="0" cb="2"/><line nr="1075" mi="0" ci="2" mb="0" cb="0"/><line nr="1076" mi="0" ci="5" mb="0" cb="2"/><line nr="1077" mi="0" ci="4" mb="0" cb="0"/><line nr="1078" mi="0" ci="5" mb="0" cb="0"/><line nr="1080" mi="0" ci="3" mb="0" cb="0"/><line nr="1081" mi="0" ci="2" mb="0" cb="0"/><line nr="1082" mi="0" ci="3" mb="0" cb="0"/><line nr="1083" mi="0" ci="6" mb="0" cb="0"/><line nr="1084" mi="0" ci="2" mb="0" cb="2"/><line nr="1085" mi="0" ci="3" mb="0" cb="0"/><line nr="1087" mi="0" ci="3" mb="0" cb="0"/><line nr="1089" mi="0" ci="2" mb="0" cb="0"/><line nr="1090" mi="0" ci="3" mb="0" cb="0"/><line nr="1091" mi="0" ci="3" mb="0" cb="0"/><line nr="1092" mi="0" ci="4" mb="0" cb="0"/><line nr="1093" mi="0" ci="2" mb="0" cb="0"/><line nr="1094" mi="0" ci="3" mb="0" cb="0"/><line nr="1095" mi="0" ci="6" mb="0" cb="0"/><line nr="1096" mi="0" ci="3" mb="0" cb="0"/><line nr="1097" mi="0" ci="3" mb="0" cb="2"/><line nr="1098" mi="0" ci="6" mb="0" cb="0"/><line nr="1099" mi="0" ci="1" mb="0" cb="0"/><line nr="1101" mi="0" ci="2" mb="0" cb="0"/><line nr="1104" mi="0" ci="5" mb="0" cb="0"/><line nr="1105" mi="0" ci="2" mb="0" cb="0"/><line nr="1106" mi="0" ci="4" mb="0" cb="0"/><line nr="1107" mi="0" ci="2" mb="0" cb="0"/><line nr="1108" mi="0" ci="3" mb="0" cb="0"/><line nr="1109" mi="0" ci="6" mb="0" cb="0"/><line nr="1111" mi="0" ci="5" mb="0" cb="0"/><line nr="1112" mi="0" ci="2" mb="0" cb="0"/><line nr="1113" mi="0" ci="3" mb="0" cb="0"/><line nr="1114" mi="0" ci="6" mb="0" cb="0"/><line nr="1115" mi="0" ci="3" mb="0" cb="0"/><line nr="1116" mi="0" ci="2" mb="0" cb="0"/><line nr="1117" mi="0" ci="3" mb="0" cb="0"/><line nr="1118" mi="0" ci="3" mb="0" cb="0"/><line nr="1120" mi="0" ci="5" mb="0" cb="0"/><line nr="1121" mi="0" ci="3" mb="1" cb="1"/><line nr="1122" mi="0" ci="1" mb="0" cb="0"/><line nr="1124" mi="0" ci="2" mb="0" cb="0"/><line nr="1127" mi="0" ci="5" mb="0" cb="0"/><line nr="1128" mi="0" ci="4" mb="0" cb="0"/><line nr="1129" mi="0" ci="4" mb="0" cb="0"/><line nr="1130" mi="0" ci="4" mb="0" cb="2"/><line nr="1131" mi="0" ci="5" mb="0" cb="0"/><line nr="1133" mi="0" ci="3" mb="0" cb="0"/><line nr="1135" mi="0" ci="3" mb="0" cb="2"/><line nr="1136" mi="0" ci="5" mb="0" cb="0"/><line nr="1138" mi="0" ci="4" mb="0" cb="0"/><line nr="1140" mi="0" ci="3" mb="0" cb="0"/><line nr="1141" mi="0" ci="3" mb="0" cb="0"/><line nr="1144" mi="0" ci="2" mb="0" cb="0"/><line nr="1145" mi="7" ci="1" mb="2" cb="0"/><line nr="1146" mi="0" ci="9" mb="0" cb="0"/><line nr="1147" mi="0" ci="3" mb="0" cb="2"/><line nr="1148" mi="0" ci="3" mb="0" cb="0"/><line nr="1149" mi="0" ci="11" mb="0" cb="2"/><line nr="1150" mi="0" ci="5" mb="0" cb="2"/><line nr="1151" mi="0" ci="6" mb="0" cb="0"/><line nr="1152" mi="0" ci="11" mb="0" cb="2"/><line nr="1153" mi="0" ci="5" mb="0" cb="2"/><line nr="1154" mi="0" ci="6" mb="0" cb="0"/><line nr="1155" mi="0" ci="3" mb="0" cb="0"/><line nr="1157" mi="0" ci="5" mb="0" cb="2"/><line nr="1158" mi="0" ci="1" mb="0" cb="0"/><line nr="1160" mi="0" ci="5" mb="0" cb="0"/><line nr="1161" mi="7" ci="1" mb="2" cb="0"/><line nr="1162" mi="0" ci="9" mb="0" cb="0"/><line nr="1164" mi="0" ci="11" mb="0" cb="2"/><line nr="1165" mi="0" ci="4" mb="0" cb="2"/><line nr="1166" mi="0" ci="6" mb="0" cb="0"/><line nr="1167" mi="0" ci="4" mb="0" cb="0"/><line nr="1168" mi="6" ci="4" mb="3" cb="1"/><line nr="1169" mi="8" ci="0" mb="0" cb="0"/><line nr="1170" mi="3" ci="0" mb="0" cb="0"/><line nr="1172" mi="0" ci="1" mb="0" cb="0"/><line nr="1173" mi="0" ci="11" mb="0" cb="2"/><line nr="1174" mi="0" ci="4" mb="0" cb="2"/><line nr="1175" mi="0" ci="6" mb="0" cb="0"/><line nr="1176" mi="0" ci="4" mb="0" cb="0"/><line nr="1177" mi="6" ci="4" mb="3" cb="1"/><line nr="1178" mi="8" ci="0" mb="0" cb="0"/><line nr="1179" mi="3" ci="0" mb="0" cb="0"/><line nr="1181" mi="0" ci="1" mb="0" cb="0"/><line nr="1182" mi="0" ci="3" mb="0" cb="0"/><line nr="1183" mi="0" ci="6" mb="0" cb="0"/><line nr="1186" mi="0" ci="3" mb="1" cb="1"/><line nr="1187" mi="0" ci="5" mb="0" cb="0"/><line nr="1188" mi="0" ci="3" mb="1" cb="1"/><line nr="1189" mi="0" ci="5" mb="0" cb="0"/><line nr="1190" mi="0" ci="3" mb="0" cb="0"/><line nr="1191" mi="0" ci="11" mb="0" cb="2"/><line nr="1192" mi="0" ci="4" mb="0" cb="0"/><line nr="1194" mi="0" ci="6" mb="0" cb="0"/><line nr="1195" mi="0" ci="3" mb="0" cb="0"/><line nr="1196" mi="0" ci="3" mb="0" cb="0"/><line nr="1198" mi="0" ci="3" mb="0" cb="2"/><line nr="1199" mi="0" ci="1" mb="0" cb="0"/><line nr="1201" mi="0" ci="7" mb="0" cb="4"/><line nr="1202" mi="0" ci="7" mb="0" cb="0"/><line nr="1204" mi="0" ci="3" mb="0" cb="2"/><line nr="1205" mi="0" ci="6" mb="0" cb="0"/><line nr="1206" mi="0" ci="3" mb="0" cb="2"/><line nr="1207" mi="0" ci="5" mb="0" cb="0"/><line nr="1209" mi="0" ci="8" mb="0" cb="0"/><line nr="1210" mi="0" ci="3" mb="0" cb="2"/><line nr="1211" mi="0" ci="4" mb="0" cb="0"/><line nr="1213" mi="0" ci="3" mb="0" cb="2"/><line nr="1214" mi="0" ci="4" mb="0" cb="2"/><line nr="1215" mi="0" ci="4" mb="0" cb="0"/><line nr="1217" mi="0" ci="9" mb="1" cb="1"/><line nr="1218" mi="3" ci="0" mb="0" cb="0"/><line nr="1219" mi="0" ci="4" mb="0" cb="0"/><line nr="1220" mi="0" ci="6" mb="0" cb="0"/><line nr="1222" mi="0" ci="4" mb="0" cb="2"/><line nr="1223" mi="7" ci="1" mb="2" cb="0"/><line nr="1224" mi="0" ci="4" mb="0" cb="0"/><line nr="1225" mi="0" ci="6" mb="0" cb="0"/><line nr="1228" mi="0" ci="1" mb="0" cb="0"/><line nr="1229" mi="0" ci="11" mb="0" cb="2"/><line nr="1230" mi="0" ci="4" mb="0" cb="0"/><line nr="1232" mi="0" ci="6" mb="0" cb="0"/><line nr="1233" mi="0" ci="3" mb="0" cb="0"/><line nr="1234" mi="0" ci="3" mb="0" cb="0"/><line nr="1236" mi="0" ci="3" mb="0" cb="2"/><line nr="1237" mi="0" ci="1" mb="0" cb="0"/><line nr="1239" mi="0" ci="7" mb="0" cb="4"/><line nr="1240" mi="0" ci="7" mb="0" cb="0"/><line nr="1242" mi="0" ci="3" mb="0" cb="2"/><line nr="1243" mi="0" ci="6" mb="0" cb="0"/><line nr="1244" mi="0" ci="3" mb="0" cb="2"/><line nr="1245" mi="0" ci="5" mb="0" cb="0"/><line nr="1247" mi="0" ci="8" mb="0" cb="0"/><line nr="1248" mi="0" ci="3" mb="0" cb="2"/><line nr="1249" mi="0" ci="4" mb="0" cb="0"/><line nr="1251" mi="0" ci="3" mb="0" cb="2"/><line nr="1252" mi="0" ci="4" mb="0" cb="2"/><line nr="1253" mi="0" ci="4" mb="0" cb="0"/><line nr="1255" mi="0" ci="9" mb="1" cb="1"/><line nr="1256" mi="3" ci="0" mb="0" cb="0"/><line nr="1257" mi="0" ci="4" mb="0" cb="0"/><line nr="1258" mi="0" ci="6" mb="0" cb="0"/><line nr="1260" mi="0" ci="4" mb="0" cb="2"/><line nr="1261" mi="7" ci="1" mb="2" cb="0"/><line nr="1262" mi="0" ci="4" mb="0" cb="0"/><line nr="1263" mi="0" ci="6" mb="0" cb="0"/><line nr="1266" mi="0" ci="1" mb="0" cb="0"/><line nr="1268" mi="0" ci="11" mb="0" cb="2"/><line nr="1269" mi="0" ci="3" mb="0" cb="0"/><line nr="1270" mi="0" ci="3" mb="0" cb="0"/><line nr="1271" mi="0" ci="3" mb="0" cb="0"/><line nr="1272" mi="0" ci="1" mb="0" cb="0"/><line nr="1273" mi="0" ci="3" mb="0" cb="0"/><line nr="1276" mi="0" ci="3" mb="0" cb="0"/><line nr="1280" mi="0" ci="3" mb="0" cb="2"/><line nr="1281" mi="0" ci="4" mb="0" cb="0"/><line nr="1282" mi="0" ci="3" mb="0" cb="0"/><line nr="1283" mi="0" ci="2" mb="0" cb="0"/><line nr="1285" mi="0" ci="2" mb="0" cb="0"/><line nr="1290" mi="0" ci="9" mb="0" cb="0"/><line nr="1291" mi="0" ci="3" mb="0" cb="0"/><line nr="1292" mi="0" ci="3" mb="0" cb="0"/><line nr="1293" mi="0" ci="3" mb="0" cb="0"/><line nr="1294" mi="0" ci="3" mb="0" cb="0"/><line nr="1295" mi="0" ci="6" mb="0" cb="0"/><line nr="1296" mi="0" ci="1" mb="0" cb="0"/><line nr="1299" mi="0" ci="9" mb="0" cb="0"/><line nr="1300" mi="7" ci="1" mb="2" cb="0"/><line nr="1301" mi="0" ci="3" mb="0" cb="0"/><line nr="1302" mi="0" ci="3" mb="0" cb="0"/><line nr="1306" mi="0" ci="11" mb="0" cb="2"/><line nr="1307" mi="0" ci="3" mb="0" cb="0"/><line nr="1308" mi="0" ci="3" mb="0" cb="0"/><line nr="1309" mi="0" ci="3" mb="0" cb="0"/><line nr="1310" mi="0" ci="1" mb="0" cb="0"/><line nr="1311" mi="0" ci="11" mb="0" cb="2"/><line nr="1312" mi="0" ci="3" mb="0" cb="0"/><line nr="1313" mi="0" ci="3" mb="0" cb="0"/><line nr="1314" mi="0" ci="3" mb="0" cb="0"/><line nr="1315" mi="0" ci="1" mb="0" cb="0"/><line nr="1317" mi="0" ci="11" mb="0" cb="2"/><line nr="1318" mi="7" ci="1" mb="2" cb="0"/><line nr="1319" mi="7" ci="1" mb="2" cb="0"/><line nr="1321" mi="0" ci="3" mb="0" cb="0"/><line nr="1322" mi="7" ci="1" mb="2" cb="0"/><line nr="1323" mi="7" ci="1" mb="2" cb="0"/><line nr="1325" mi="0" ci="3" mb="0" cb="2"/><line nr="1327" mi="0" ci="3" mb="0" cb="2"/><line nr="1328" mi="0" ci="3" mb="0" cb="0"/><line nr="1331" mi="0" ci="11" mb="0" cb="2"/><line nr="1332" mi="0" ci="3" mb="0" cb="0"/><line nr="1333" mi="0" ci="6" mb="0" cb="4"/><line nr="1334" mi="0" ci="4" mb="0" cb="2"/><line nr="1335" mi="0" ci="6" mb="0" cb="0"/><line nr="1339" mi="7" ci="1" mb="2" cb="0"/><line nr="1342" mi="0" ci="6" mb="0" cb="0"/><line nr="1344" mi="0" ci="1" mb="0" cb="0"/><line nr="1345" mi="0" ci="11" mb="0" cb="2"/><line nr="1346" mi="0" ci="3" mb="0" cb="0"/><line nr="1347" mi="0" ci="6" mb="0" cb="4"/><line nr="1348" mi="0" ci="4" mb="0" cb="2"/><line nr="1349" mi="0" ci="6" mb="0" cb="0"/><line nr="1353" mi="7" ci="1" mb="2" cb="0"/><line nr="1356" mi="0" ci="6" mb="0" cb="0"/><line nr="1358" mi="0" ci="1" mb="0" cb="0"/><line nr="1360" mi="0" ci="1" mb="0" cb="0"/><line nr="1362" mi="0" ci="3" mb="0" cb="0"/><line nr="1363" mi="0" ci="6" mb="0" cb="0"/><line nr="1364" mi="0" ci="3" mb="0" cb="0"/><line nr="1365" mi="0" ci="3" mb="0" cb="0"/><line nr="1366" mi="0" ci="1" mb="0" cb="0"/><line nr="1367" mi="0" ci="11" mb="0" cb="2"/><line nr="1368" mi="0" ci="3" mb="0" cb="0"/><line nr="1369" mi="0" ci="3" mb="0" cb="0"/><line nr="1379" mi="0" ci="5" mb="0" cb="0"/><line nr="1382" mi="0" ci="11" mb="0" cb="2"/><line nr="1383" mi="0" ci="5" mb="0" cb="0"/><line nr="1389" mi="0" ci="1" mb="0" cb="0"/><line nr="1390" mi="0" ci="5" mb="0" cb="0"/><line nr="1393" mi="0" ci="11" mb="0" cb="2"/><line nr="1394" mi="0" ci="4" mb="0" cb="0"/><line nr="1397" mi="8" ci="1" mb="2" cb="0"/><line nr="1398" mi="0" ci="3" mb="0" cb="0"/><line nr="1400" mi="0" ci="3" mb="0" cb="0"/><line nr="1401" mi="0" ci="1" mb="0" cb="0"/><line nr="1402" mi="0" ci="3" mb="0" cb="0"/><line nr="1403" mi="0" ci="1" mb="0" cb="0"/><line nr="1404" mi="0" ci="11" mb="0" cb="2"/><line nr="1405" mi="0" ci="3" mb="0" cb="0"/><line nr="1406" mi="0" ci="3" mb="0" cb="0"/><line nr="1416" mi="0" ci="5" mb="0" cb="0"/><line nr="1419" mi="0" ci="11" mb="0" cb="2"/><line nr="1420" mi="0" ci="5" mb="0" cb="0"/><line nr="1426" mi="0" ci="1" mb="0" cb="0"/><line nr="1427" mi="0" ci="5" mb="0" cb="0"/><line nr="1430" mi="0" ci="11" mb="0" cb="2"/><line nr="1431" mi="0" ci="4" mb="0" cb="0"/><line nr="1434" mi="8" ci="1" mb="2" cb="0"/><line nr="1435" mi="0" ci="3" mb="0" cb="0"/><line nr="1437" mi="0" ci="3" mb="0" cb="0"/><line nr="1438" mi="0" ci="1" mb="0" cb="0"/><line nr="1439" mi="0" ci="3" mb="0" cb="0"/><line nr="1440" mi="0" ci="1" mb="0" cb="0"/><line nr="1443" mi="0" ci="11" mb="0" cb="2"/><line nr="1444" mi="0" ci="4" mb="0" cb="0"/><line nr="1447" mi="8" ci="1" mb="2" cb="0"/><line nr="1448" mi="0" ci="3" mb="0" cb="0"/><line nr="1450" mi="0" ci="3" mb="0" cb="0"/><line nr="1451" mi="0" ci="1" mb="0" cb="0"/><line nr="1452" mi="0" ci="3" mb="0" cb="0"/><line nr="1455" mi="0" ci="11" mb="0" cb="2"/><line nr="1456" mi="0" ci="4" mb="0" cb="0"/><line nr="1459" mi="8" ci="1" mb="2" cb="0"/><line nr="1460" mi="0" ci="3" mb="0" cb="0"/><line nr="1462" mi="0" ci="4" mb="0" cb="0"/><line nr="1463" mi="0" ci="1" mb="0" cb="0"/><line nr="1464" mi="0" ci="3" mb="0" cb="0"/><line nr="1467" mi="0" ci="11" mb="0" cb="2"/><line nr="1468" mi="0" ci="3" mb="0" cb="0"/><line nr="1469" mi="7" ci="1" mb="2" cb="0"/><line nr="1470" mi="7" ci="1" mb="2" cb="0"/><line nr="1471" mi="0" ci="2" mb="0" cb="0"/><line nr="1472" mi="0" ci="2" mb="0" cb="0"/><line nr="1473" mi="0" ci="3" mb="0" cb="0"/><line nr="1474" mi="0" ci="3" mb="0" cb="0"/><line nr="1475" mi="0" ci="6" mb="0" cb="0"/><line nr="1476" mi="0" ci="6" mb="0" cb="0"/><line nr="1477" mi="0" ci="1" mb="0" cb="0"/><line nr="1478" mi="0" ci="3" mb="0" cb="0"/><line nr="1479" mi="0" ci="2" mb="0" cb="0"/><line nr="1480" mi="0" ci="3" mb="0" cb="0"/><line nr="1481" mi="0" ci="6" mb="0" cb="0"/><line nr="1484" mi="0" ci="3" mb="0" cb="2"/><line nr="1485" mi="0" ci="3" mb="0" cb="0"/><line nr="1486" mi="0" ci="3" mb="0" cb="0"/><line nr="1487" mi="0" ci="6" mb="0" cb="0"/><line nr="1488" mi="0" ci="3" mb="0" cb="2"/><line nr="1489" mi="0" ci="3" mb="0" cb="0"/><line nr="1490" mi="0" ci="3" mb="0" cb="0"/><line nr="1491" mi="0" ci="3" mb="0" cb="0"/><line nr="1492" mi="0" ci="7" mb="0" cb="0"/><line nr="1494" mi="0" ci="3" mb="0" cb="0"/><line nr="1497" mi="0" ci="3" mb="0" cb="0"/><line nr="1498" mi="0" ci="5" mb="0" cb="0"/><line nr="1499" mi="0" ci="3" mb="0" cb="2"/><line nr="1500" mi="0" ci="5" mb="0" cb="0"/><line nr="1503" mi="0" ci="6" mb="0" cb="0"/><line nr="1504" mi="0" ci="2" mb="0" cb="0"/><line nr="1505" mi="0" ci="6" mb="0" cb="0"/><line nr="1506" mi="0" ci="1" mb="0" cb="0"/><line nr="1509" mi="0" ci="17" mb="0" cb="2"/><line nr="1510" mi="0" ci="3" mb="0" cb="2"/><line nr="1511" mi="0" ci="1" mb="0" cb="0"/><line nr="1512" mi="0" ci="2" mb="0" cb="0"/><line nr="1514" mi="0" ci="3" mb="0" cb="0"/><line nr="1515" mi="0" ci="2" mb="0" cb="0"/><line nr="1516" mi="0" ci="3" mb="0" cb="0"/><line nr="1517" mi="0" ci="3" mb="0" cb="2"/><line nr="1518" mi="7" ci="1" mb="2" cb="0"/><line nr="1520" mi="0" ci="3" mb="0" cb="0"/><line nr="1524" mi="0" ci="5" mb="0" cb="2"/><line nr="1525" mi="0" ci="5" mb="0" cb="0"/><line nr="1526" mi="0" ci="5" mb="0" cb="2"/><line nr="1527" mi="0" ci="5" mb="0" cb="0"/><line nr="1529" mi="0" ci="11" mb="0" cb="0"/><line nr="1530" mi="0" ci="4" mb="0" cb="0"/><line nr="1531" mi="0" ci="2" mb="0" cb="2"/><line nr="1532" mi="0" ci="2" mb="0" cb="0"/><line nr="1533" mi="0" ci="1" mb="0" cb="0"/><line nr="1535" mi="0" ci="2" mb="0" cb="2"/><line nr="1536" mi="0" ci="2" mb="0" cb="0"/><line nr="1537" mi="0" ci="1" mb="0" cb="0"/><line nr="1539" mi="0" ci="4" mb="0" cb="2"/><line nr="1540" mi="0" ci="2" mb="0" cb="0"/><line nr="1541" mi="0" ci="1" mb="0" cb="0"/><line nr="1543" mi="0" ci="4" mb="0" cb="2"/><line nr="1544" mi="0" ci="2" mb="0" cb="0"/><line nr="1545" mi="0" ci="1" mb="0" cb="0"/><line nr="1549" mi="0" ci="4" mb="0" cb="2"/><line nr="1550" mi="0" ci="4" mb="0" cb="0"/><line nr="1553" mi="0" ci="4" mb="0" cb="0"/><line nr="1555" mi="0" ci="6" mb="0" cb="2"/><line nr="1556" mi="9" ci="1" mb="2" cb="0"/><line nr="1557" mi="0" ci="4" mb="0" cb="0"/><line nr="1558" mi="0" ci="3" mb="0" cb="0"/><line nr="1559" mi="9" ci="1" mb="2" cb="0"/><line nr="1560" mi="0" ci="4" mb="0" cb="0"/><line nr="1561" mi="0" ci="3" mb="0" cb="0"/><line nr="1562" mi="0" ci="1" mb="0" cb="0"/><line nr="1564" mi="0" ci="2" mb="0" cb="0"/><line nr="1565" mi="0" ci="3" mb="0" cb="2"/><line nr="1566" mi="0" ci="1" mb="0" cb="0"/><line nr="1567" mi="0" ci="2" mb="0" cb="0"/><line nr="1568" mi="0" ci="3" mb="0" cb="0"/><line nr="1569" mi="0" ci="1" mb="0" cb="0"/><line nr="1575" mi="0" ci="5" mb="0" cb="0"/><line nr="1576" mi="0" ci="3" mb="0" cb="0"/><line nr="1577" mi="0" ci="7" mb="0" cb="2"/><line nr="1578" mi="10" ci="1" mb="2" cb="0"/><line nr="1579" mi="0" ci="9" mb="0" cb="0"/><line nr="1581" mi="0" ci="7" mb="0" cb="0"/><line nr="1585" mi="0" ci="5" mb="0" cb="0"/><line nr="1586" mi="0" ci="11" mb="0" cb="2"/><line nr="1587" mi="0" ci="3" mb="0" cb="0"/><line nr="1589" mi="0" ci="2" mb="0" cb="0"/><line nr="1590" mi="0" ci="15" mb="1" cb="3"/><line nr="1591" mi="0" ci="2" mb="0" cb="0"/><line nr="1592" mi="0" ci="15" mb="0" cb="4"/><line nr="1593" mi="0" ci="2" mb="0" cb="0"/><line nr="1594" mi="0" ci="4" mb="0" cb="2"/><line nr="1595" mi="0" ci="6" mb="0" cb="0"/><line nr="1596" mi="0" ci="4" mb="0" cb="2"/><line nr="1597" mi="0" ci="5" mb="0" cb="0"/><line nr="1598" mi="0" ci="4" mb="0" cb="2"/><line nr="1599" mi="0" ci="3" mb="0" cb="0"/><line nr="1602" mi="0" ci="3" mb="0" cb="0"/><line nr="1603" mi="0" ci="1" mb="0" cb="0"/><line nr="1604" mi="0" ci="6" mb="0" cb="0"/><line nr="1605" mi="0" ci="1" mb="0" cb="0"/><line nr="1611" mi="0" ci="2" mb="0" cb="0"/><line nr="1613" mi="0" ci="2" mb="0" cb="0"/><line nr="1614" mi="0" ci="11" mb="0" cb="2"/><line nr="1615" mi="0" ci="3" mb="0" cb="0"/><line nr="1616" mi="0" ci="5" mb="0" cb="2"/><line nr="1617" mi="0" ci="5" mb="0" cb="0"/><line nr="1618" mi="0" ci="7" mb="0" cb="0"/><line nr="1620" mi="0" ci="1" mb="0" cb="0"/><line nr="1621" mi="0" ci="8" mb="0" cb="2"/><line nr="1624" mi="0" ci="6" mb="0" cb="0"/><line nr="1627" mi="0" ci="11" mb="0" cb="2"/><line nr="1628" mi="0" ci="5" mb="0" cb="0"/><line nr="1631" mi="0" ci="11" mb="0" cb="2"/><line nr="1632" mi="0" ci="3" mb="0" cb="0"/><line nr="1633" mi="0" ci="3" mb="0" cb="2"/><line nr="1634" mi="0" ci="1" mb="0" cb="0"/><line nr="1635" mi="0" ci="3" mb="0" cb="0"/><line nr="1639" mi="0" ci="6" mb="0" cb="0"/><line nr="1640" mi="0" ci="3" mb="0" cb="0"/><line nr="1642" mi="0" ci="11" mb="0" cb="2"/><line nr="1643" mi="0" ci="2" mb="0" cb="0"/><line nr="1644" mi="0" ci="3" mb="0" cb="0"/><line nr="1646" mi="0" ci="6" mb="0" cb="2"/><line nr="1647" mi="0" ci="13" mb="0" cb="0"/><line nr="1648" mi="0" ci="7" mb="0" cb="4"/><line nr="1649" mi="0" ci="6" mb="0" cb="2"/><line nr="1650" mi="0" ci="5" mb="0" cb="0"/><line nr="1654" mi="0" ci="6" mb="0" cb="2"/><line nr="1655" mi="0" ci="13" mb="0" cb="0"/><line nr="1656" mi="0" ci="6" mb="0" cb="2"/><line nr="1657" mi="0" ci="13" mb="0" cb="0"/><line nr="1660" mi="0" ci="4" mb="0" cb="2"/><line nr="1661" mi="0" ci="4" mb="0" cb="0"/><line nr="1662" mi="0" ci="8" mb="0" cb="4"/><line nr="1663" mi="0" ci="3" mb="0" cb="0"/><line nr="1666" mi="0" ci="3" mb="0" cb="0"/><line nr="1667" mi="0" ci="2" mb="0" cb="0"/><line nr="1668" mi="0" ci="3" mb="0" cb="0"/><line nr="1670" mi="0" ci="4" mb="0" cb="0"/><line nr="1671" mi="0" ci="5" mb="0" cb="0"/><line nr="1672" mi="0" ci="1" mb="0" cb="0"/><line nr="1674" mi="0" ci="6" mb="0" cb="0"/><line nr="1675" mi="0" ci="6" mb="0" cb="0"/><line nr="1676" mi="0" ci="1" mb="0" cb="0"/><line nr="1677" mi="0" ci="11" mb="0" cb="2"/><line nr="1678" mi="0" ci="2" mb="0" cb="0"/><line nr="1679" mi="0" ci="3" mb="0" cb="0"/><line nr="1681" mi="0" ci="6" mb="0" cb="2"/><line nr="1682" mi="0" ci="13" mb="0" cb="0"/><line nr="1683" mi="0" ci="7" mb="0" cb="4"/><line nr="1684" mi="0" ci="6" mb="0" cb="2"/><line nr="1685" mi="0" ci="5" mb="0" cb="0"/><line nr="1689" mi="0" ci="6" mb="0" cb="2"/><line nr="1690" mi="0" ci="13" mb="0" cb="0"/><line nr="1691" mi="0" ci="6" mb="0" cb="2"/><line nr="1692" mi="0" ci="13" mb="0" cb="0"/><line nr="1695" mi="0" ci="4" mb="0" cb="2"/><line nr="1696" mi="0" ci="4" mb="0" cb="0"/><line nr="1697" mi="0" ci="8" mb="0" cb="4"/><line nr="1698" mi="0" ci="3" mb="0" cb="0"/><line nr="1701" mi="0" ci="3" mb="0" cb="0"/><line nr="1702" mi="0" ci="2" mb="0" cb="0"/><line nr="1703" mi="0" ci="3" mb="0" cb="0"/><line nr="1705" mi="0" ci="4" mb="0" cb="0"/><line nr="1706" mi="0" ci="5" mb="0" cb="0"/><line nr="1707" mi="0" ci="1" mb="0" cb="0"/><line nr="1709" mi="0" ci="6" mb="0" cb="0"/><line nr="1710" mi="0" ci="6" mb="0" cb="0"/><line nr="1711" mi="0" ci="1" mb="0" cb="0"/><line nr="1713" mi="0" ci="4" mb="0" cb="2"/><line nr="1714" mi="0" ci="1" mb="0" cb="0"/><line nr="1715" mi="0" ci="4" mb="0" cb="0"/><line nr="1719" mi="0" ci="5" mb="0" cb="0"/><line nr="1720" mi="0" ci="3" mb="0" cb="0"/><line nr="1721" mi="0" ci="3" mb="0" cb="0"/><line nr="1722" mi="0" ci="3" mb="0" cb="0"/><line nr="1723" mi="0" ci="3" mb="0" cb="2"/><line nr="1724" mi="0" ci="1" mb="0" cb="0"/><line nr="1726" mi="0" ci="1" mb="0" cb="0"/><line nr="1727" mi="0" ci="1" mb="0" cb="0"/><line nr="1730" mi="0" ci="11" mb="0" cb="0"/><line nr="1734" mi="0" ci="10" mb="0" cb="0"/><line nr="1735" mi="0" ci="8" mb="0" cb="0"/><line nr="1739" mi="0" ci="7" mb="0" cb="2"/><line nr="1744" mi="0" ci="2" mb="0" cb="0"/><line nr="1745" mi="0" ci="3" mb="0" cb="0"/><line nr="1746" mi="0" ci="5" mb="0" cb="0"/><line nr="1747" mi="0" ci="2" mb="0" cb="0"/><line nr="1755" mi="0" ci="11" mb="0" cb="0"/><line nr="1759" mi="0" ci="10" mb="0" cb="0"/><line nr="1760" mi="0" ci="7" mb="0" cb="0"/><line nr="1761" mi="0" ci="11" mb="0" cb="2"/><line nr="1765" mi="0" ci="7" mb="0" cb="4"/><line nr="1766" mi="0" ci="2" mb="0" cb="0"/><line nr="1767" mi="0" ci="4" mb="0" cb="0"/><line nr="1768" mi="0" ci="3" mb="0" cb="0"/><line nr="1769" mi="0" ci="7" mb="0" cb="2"/><line nr="1774" mi="0" ci="2" mb="0" cb="0"/><line nr="1775" mi="0" ci="3" mb="0" cb="0"/><line nr="1776" mi="0" ci="5" mb="0" cb="0"/><line nr="1777" mi="0" ci="10" mb="0" cb="2"/><line nr="1778" mi="0" ci="2" mb="0" cb="0"/><line nr="1786" mi="7" ci="1" mb="2" cb="0"/><line nr="1787" mi="0" ci="3" mb="0" cb="2"/><line nr="1788" mi="0" ci="4" mb="0" cb="0"/><line nr="1789" mi="0" ci="3" mb="0" cb="0"/><line nr="1790" mi="0" ci="3" mb="0" cb="0"/><line nr="1791" mi="0" ci="4" mb="0" cb="0"/><line nr="1792" mi="0" ci="3" mb="0" cb="0"/><line nr="1793" mi="0" ci="4" mb="0" cb="0"/><line nr="1794" mi="0" ci="3" mb="0" cb="0"/><line nr="1795" mi="0" ci="3" mb="0" cb="0"/><line nr="1797" mi="0" ci="1" mb="0" cb="0"/><line nr="1801" mi="0" ci="6" mb="0" cb="0"/><line nr="1802" mi="0" ci="3" mb="0" cb="2"/><line nr="1803" mi="0" ci="3" mb="0" cb="0"/><line nr="1804" mi="0" ci="4" mb="0" cb="0"/><line nr="1806" mi="0" ci="2" mb="0" cb="0"/><line nr="1808" mi="0" ci="3" mb="0" cb="2"/><line nr="1809" mi="0" ci="3" mb="0" cb="0"/><line nr="1810" mi="0" ci="4" mb="0" cb="0"/><line nr="1812" mi="0" ci="2" mb="0" cb="0"/><line nr="1815" mi="0" ci="3" mb="0" cb="2"/><line nr="1816" mi="0" ci="4" mb="0" cb="2"/><line nr="1817" mi="0" ci="5" mb="0" cb="0"/><line nr="1818" mi="0" ci="4" mb="0" cb="2"/><line nr="1819" mi="0" ci="5" mb="0" cb="0"/><line nr="1820" mi="0" ci="2" mb="0" cb="2"/><line nr="1821" mi="0" ci="10" mb="0" cb="0"/><line nr="1822" mi="0" ci="2" mb="0" cb="0"/><line nr="1824" mi="0" ci="3" mb="0" cb="2"/><line nr="1825" mi="8" ci="1" mb="4" cb="0"/><line nr="1826" mi="0" ci="4" mb="0" cb="2"/><line nr="1827" mi="0" ci="5" mb="0" cb="0"/><line nr="1828" mi="0" ci="4" mb="0" cb="2"/><line nr="1829" mi="0" ci="5" mb="0" cb="0"/><line nr="1830" mi="0" ci="2" mb="0" cb="2"/><line nr="1831" mi="0" ci="10" mb="0" cb="0"/><line nr="1833" mi="0" ci="4" mb="0" cb="0"/><line nr="1834" mi="0" ci="4" mb="0" cb="0"/><line nr="1835" mi="0" ci="4" mb="0" cb="0"/><line nr="1836" mi="0" ci="3" mb="0" cb="0"/><line nr="1838" mi="0" ci="2" mb="0" cb="0"/><line nr="1879" mi="0" ci="5" mb="0" cb="0"/><line nr="1882" mi="0" ci="4" mb="0" cb="0"/><line nr="1883" mi="0" ci="4" mb="0" cb="0"/><line nr="1884" mi="0" ci="6" mb="0" cb="0"/><line nr="1885" mi="0" ci="6" mb="0" cb="0"/><line nr="1886" mi="0" ci="6" mb="0" cb="0"/><line nr="1887" mi="0" ci="4" mb="0" cb="0"/><line nr="1888" mi="0" ci="4" mb="0" cb="0"/><line nr="1889" mi="0" ci="6" mb="0" cb="0"/><line nr="1890" mi="0" ci="6" mb="0" cb="0"/><line nr="1891" mi="0" ci="4" mb="0" cb="0"/><line nr="1892" mi="0" ci="4" mb="0" cb="0"/><line nr="1893" mi="0" ci="6" mb="0" cb="0"/><line nr="1894" mi="0" ci="6" mb="0" cb="0"/><line nr="1895" mi="0" ci="4" mb="0" cb="0"/><line nr="1896" mi="0" ci="4" mb="0" cb="0"/><line nr="1897" mi="0" ci="6" mb="0" cb="0"/><line nr="1898" mi="0" ci="6" mb="0" cb="0"/><line nr="1899" mi="0" ci="4" mb="0" cb="0"/><line nr="1900" mi="0" ci="4" mb="0" cb="0"/><line nr="1901" mi="0" ci="6" mb="0" cb="0"/><line nr="1902" mi="0" ci="6" mb="0" cb="0"/><line nr="1903" mi="0" ci="4" mb="0" cb="0"/><line nr="1904" mi="0" ci="4" mb="0" cb="0"/><line nr="1905" mi="0" ci="6" mb="0" cb="0"/><line nr="1906" mi="0" ci="6" mb="0" cb="0"/><line nr="1909" mi="0" ci="1" mb="0" cb="0"/><line nr="1913" mi="0" ci="2" mb="0" cb="0"/><line nr="1914" mi="0" ci="3" mb="1" cb="1"/><line nr="1915" mi="4" ci="0" mb="0" cb="0"/><line nr="1916" mi="0" ci="3" mb="1" cb="1"/><line nr="1917" mi="4" ci="0" mb="0" cb="0"/><line nr="1918" mi="0" ci="3" mb="1" cb="1"/><line nr="1919" mi="4" ci="0" mb="0" cb="0"/><line nr="1920" mi="0" ci="3" mb="1" cb="1"/><line nr="1921" mi="0" ci="4" mb="0" cb="0"/><line nr="1923" mi="6" ci="0" mb="0" cb="0"/><line nr="1925" mi="0" ci="1" mb="0" cb="0"/><line nr="1928" mi="11" ci="1" mb="2" cb="0"/><line nr="1929" mi="0" ci="3" mb="0" cb="0"/><line nr="1930" mi="0" ci="8" mb="0" cb="0"/><line nr="1931" mi="0" ci="6" mb="0" cb="0"/><line nr="1932" mi="0" ci="6" mb="0" cb="0"/><line nr="1939" mi="0" ci="2" mb="0" cb="0"/><line nr="1940" mi="0" ci="3" mb="0" cb="0"/><line nr="1941" mi="0" ci="3" mb="0" cb="0"/><line nr="1943" mi="0" ci="1" mb="0" cb="0"/><line nr="1992" mi="0" ci="9" mb="0" cb="0"/><line nr="1994" mi="0" ci="2" mb="0" cb="0"/><line nr="1995" mi="0" ci="3" mb="0" cb="0"/><line nr="1996" mi="0" ci="1" mb="0" cb="0"/><line nr="1999" mi="0" ci="10" mb="0" cb="2"/><line nr="2003" mi="0" ci="10" mb="0" cb="2"/><line nr="2007" mi="0" ci="10" mb="0" cb="2"/><line nr="2011" mi="0" ci="11" mb="0" cb="0"/><line nr="2012" mi="0" ci="1" mb="0" cb="0"/><line nr="2015" mi="0" ci="11" mb="0" cb="0"/><line nr="2016" mi="0" ci="1" mb="0" cb="0"/><line nr="2019" mi="0" ci="11" mb="0" cb="0"/><line nr="2020" mi="0" ci="1" mb="0" cb="0"/><line nr="2023" mi="0" ci="10" mb="0" cb="2"/><line nr="2027" mi="0" ci="15" mb="0" cb="2"/><line nr="2028" mi="0" ci="1" mb="0" cb="0"/><line nr="2031" mi="0" ci="10" mb="0" cb="2"/><line nr="2035" mi="1" ci="14" mb="1" cb="1"/><line nr="2036" mi="0" ci="1" mb="0" cb="0"/><line nr="2039" mi="0" ci="10" mb="0" cb="2"/><line nr="2043" mi="0" ci="15" mb="0" cb="2"/><line nr="2044" mi="0" ci="1" mb="0" cb="0"/><line nr="2047" mi="0" ci="10" mb="0" cb="2"/><line nr="2051" mi="0" ci="15" mb="0" cb="2"/><line nr="2052" mi="0" ci="1" mb="0" cb="0"/><line nr="2055" mi="0" ci="10" mb="0" cb="2"/><line nr="2059" mi="0" ci="15" mb="0" cb="2"/><line nr="2060" mi="0" ci="1" mb="0" cb="0"/><line nr="2063" mi="0" ci="7" mb="0" cb="2"/><line nr="2067" mi="0" ci="5" mb="0" cb="0"/><line nr="2071" mi="0" ci="5" mb="0" cb="0"/><line nr="2075" mi="0" ci="5" mb="0" cb="2"/><line nr="2076" mi="0" ci="4" mb="0" cb="0"/><line nr="2078" mi="9" ci="1" mb="2" cb="0"/><line nr="2079" mi="0" ci="4" mb="0" cb="0"/><line nr="2084" mi="0" ci="2" mb="0" cb="0"/><line nr="2086" mi="0" ci="4" mb="0" cb="2"/><line nr="2087" mi="0" ci="4" mb="0" cb="0"/><line nr="2088" mi="0" ci="5" mb="1" cb="1"/><line nr="2089" mi="5" ci="0" mb="0" cb="0"/><line nr="2094" mi="0" ci="8" mb="0" cb="2"/><line nr="2095" mi="0" ci="3" mb="0" cb="0"/><line nr="2096" mi="0" ci="3" mb="0" cb="0"/><line nr="2098" mi="0" ci="2" mb="0" cb="0"/><line nr="2102" mi="0" ci="2" mb="0" cb="0"/><line nr="2103" mi="0" ci="2" mb="0" cb="0"/><line nr="2105" mi="0" ci="4" mb="0" cb="2"/><line nr="2106" mi="0" ci="6" mb="0" cb="0"/><line nr="2107" mi="0" ci="5" mb="1" cb="1"/><line nr="2108" mi="5" ci="0" mb="0" cb="0"/><line nr="2113" mi="0" ci="2" mb="0" cb="2"/><line nr="2114" mi="0" ci="8" mb="0" cb="2"/><line nr="2115" mi="0" ci="3" mb="0" cb="0"/><line nr="2116" mi="0" ci="3" mb="0" cb="0"/><line nr="2119" mi="0" ci="2" mb="0" cb="0"/><line nr="2123" mi="10" ci="1" mb="4" cb="0"/><line nr="2124" mi="0" ci="3" mb="0" cb="2"/><line nr="2125" mi="0" ci="5" mb="0" cb="0"/><line nr="2126" mi="0" ci="4" mb="0" cb="0"/><line nr="2127" mi="0" ci="5" mb="0" cb="0"/><line nr="2128" mi="0" ci="5" mb="0" cb="0"/><line nr="2130" mi="0" ci="9" mb="0" cb="0"/><line nr="2132" mi="0" ci="3" mb="0" cb="0"/><line nr="2133" mi="0" ci="1" mb="0" cb="0"/><line nr="2136" mi="10" ci="1" mb="4" cb="0"/><line nr="2137" mi="0" ci="3" mb="0" cb="2"/><line nr="2138" mi="0" ci="5" mb="0" cb="0"/><line nr="2139" mi="0" ci="4" mb="0" cb="0"/><line nr="2140" mi="0" ci="5" mb="0" cb="0"/><line nr="2141" mi="0" ci="5" mb="0" cb="0"/><line nr="2143" mi="0" ci="9" mb="0" cb="0"/><line nr="2145" mi="0" ci="3" mb="0" cb="0"/><line nr="2146" mi="0" ci="1" mb="0" cb="0"/><line nr="2149" mi="8" ci="1" mb="2" cb="0"/><line nr="2150" mi="0" ci="4" mb="0" cb="2"/><line nr="2151" mi="8" ci="1" mb="2" cb="0"/><line nr="2152" mi="0" ci="4" mb="0" cb="0"/><line nr="2154" mi="0" ci="5" mb="0" cb="0"/><line nr="2155" mi="0" ci="5" mb="0" cb="0"/><line nr="2156" mi="0" ci="4" mb="0" cb="0"/><line nr="2158" mi="0" ci="6" mb="0" cb="0"/><line nr="2159" mi="0" ci="1" mb="0" cb="0"/><line nr="2162" mi="8" ci="1" mb="2" cb="0"/><line nr="2163" mi="0" ci="4" mb="0" cb="2"/><line nr="2164" mi="8" ci="1" mb="2" cb="0"/><line nr="2165" mi="0" ci="4" mb="0" cb="0"/><line nr="2167" mi="0" ci="5" mb="0" cb="0"/><line nr="2168" mi="0" ci="5" mb="0" cb="0"/><line nr="2169" mi="0" ci="4" mb="0" cb="0"/><line nr="2171" mi="0" ci="6" mb="0" cb="0"/><line nr="2172" mi="0" ci="1" mb="0" cb="0"/><line nr="2175" mi="0" ci="11" mb="0" cb="0"/><line nr="2179" mi="0" ci="11" mb="0" cb="0"/><line nr="2180" mi="0" ci="3" mb="0" cb="0"/><line nr="2181" mi="0" ci="7" mb="0" cb="0"/><line nr="2185" mi="0" ci="7" mb="0" cb="2"/><line nr="2190" mi="0" ci="2" mb="0" cb="0"/><line nr="2191" mi="0" ci="4" mb="0" cb="0"/><line nr="2192" mi="0" ci="5" mb="0" cb="0"/><line nr="2194" mi="0" ci="7" mb="0" cb="2"/><line nr="2195" mi="0" ci="3" mb="0" cb="0"/><line nr="2196" mi="0" ci="3" mb="0" cb="0"/><line nr="2201" mi="0" ci="3" mb="1" cb="1"/><line nr="2202" mi="4" ci="0" mb="0" cb="0"/><line nr="2204" mi="0" ci="7" mb="0" cb="2"/><line nr="2205" mi="0" ci="8" mb="0" cb="0"/><line nr="2206" mi="12" ci="1" mb="4" cb="0"/><line nr="2207" mi="0" ci="3" mb="0" cb="0"/><line nr="2208" mi="0" ci="3" mb="0" cb="0"/><line nr="2209" mi="0" ci="1" mb="0" cb="0"/><line nr="2210" mi="0" ci="6" mb="0" cb="0"/><line nr="2211" mi="0" ci="3" mb="0" cb="2"/><line nr="2212" mi="0" ci="4" mb="0" cb="0"/><line nr="2213" mi="0" ci="4" mb="0" cb="0"/><line nr="2214" mi="0" ci="4" mb="0" cb="0"/><line nr="2218" mi="0" ci="11" mb="0" cb="0"/><line nr="2219" mi="0" ci="1" mb="0" cb="0"/><line nr="2226" mi="0" ci="11" mb="0" cb="0"/><line nr="2230" mi="0" ci="11" mb="0" cb="0"/><line nr="2231" mi="0" ci="3" mb="0" cb="0"/><line nr="2232" mi="0" ci="7" mb="0" cb="0"/><line nr="2236" mi="0" ci="7" mb="0" cb="2"/><line nr="2241" mi="0" ci="2" mb="0" cb="0"/><line nr="2242" mi="0" ci="4" mb="0" cb="0"/><line nr="2243" mi="0" ci="5" mb="0" cb="0"/><line nr="2245" mi="0" ci="7" mb="0" cb="2"/><line nr="2246" mi="0" ci="3" mb="0" cb="0"/><line nr="2247" mi="0" ci="3" mb="0" cb="0"/><line nr="2252" mi="0" ci="3" mb="1" cb="1"/><line nr="2253" mi="4" ci="0" mb="0" cb="0"/><line nr="2255" mi="0" ci="7" mb="0" cb="2"/><line nr="2256" mi="0" ci="8" mb="0" cb="0"/><line nr="2257" mi="12" ci="1" mb="4" cb="0"/><line nr="2258" mi="0" ci="3" mb="0" cb="0"/><line nr="2259" mi="0" ci="3" mb="0" cb="0"/><line nr="2260" mi="0" ci="1" mb="0" cb="0"/><line nr="2261" mi="0" ci="6" mb="0" cb="0"/><line nr="2262" mi="0" ci="3" mb="0" cb="2"/><line nr="2263" mi="0" ci="4" mb="0" cb="0"/><line nr="2264" mi="0" ci="4" mb="0" cb="0"/><line nr="2265" mi="0" ci="4" mb="0" cb="0"/><line nr="2269" mi="0" ci="11" mb="0" cb="0"/><line nr="2270" mi="0" ci="1" mb="0" cb="0"/><line nr="2278" mi="17" ci="0" mb="6" cb="0"/><line nr="2279" mi="3" ci="0" mb="0" cb="0"/><line nr="2280" mi="12" ci="0" mb="4" cb="0"/><line nr="2281" mi="7" ci="0" mb="2" cb="0"/><line nr="2282" mi="21" ci="0" mb="0" cb="0"/><line nr="2331" mi="0" ci="9" mb="0" cb="0"/><line nr="2333" mi="0" ci="2" mb="0" cb="0"/><line nr="2334" mi="7" ci="1" mb="2" cb="0"/><line nr="2335" mi="7" ci="1" mb="2" cb="0"/><line nr="2336" mi="0" ci="3" mb="0" cb="0"/><line nr="2337" mi="0" ci="8" mb="0" cb="0"/><line nr="2338" mi="0" ci="8" mb="0" cb="0"/><line nr="2339" mi="0" ci="1" mb="0" cb="0"/><line nr="2342" mi="0" ci="4" mb="0" cb="2"/><line nr="2343" mi="0" ci="3" mb="0" cb="0"/><line nr="2345" mi="8" ci="1" mb="2" cb="0"/><line nr="2346" mi="0" ci="3" mb="0" cb="0"/><line nr="2351" mi="0" ci="4" mb="0" cb="2"/><line nr="2352" mi="0" ci="3" mb="0" cb="0"/><line nr="2354" mi="8" ci="1" mb="2" cb="0"/><line nr="2355" mi="0" ci="3" mb="0" cb="0"/><line nr="2360" mi="0" ci="4" mb="0" cb="2"/><line nr="2361" mi="0" ci="5" mb="0" cb="0"/><line nr="2363" mi="8" ci="1" mb="2" cb="0"/><line nr="2364" mi="0" ci="4" mb="0" cb="0"/><line nr="2366" mi="0" ci="1" mb="0" cb="0"/><line nr="2369" mi="0" ci="3" mb="0" cb="0"/><line nr="2370" mi="0" ci="3" mb="0" cb="0"/><line nr="2371" mi="0" ci="1" mb="0" cb="0"/><line nr="2374" mi="0" ci="3" mb="0" cb="0"/><line nr="2375" mi="0" ci="3" mb="0" cb="0"/><line nr="2376" mi="0" ci="1" mb="0" cb="0"/><line nr="2379" mi="0" ci="3" mb="0" cb="0"/><line nr="2380" mi="0" ci="3" mb="0" cb="2"/><line nr="2381" mi="0" ci="2" mb="0" cb="0"/><line nr="2382" mi="0" ci="4" mb="0" cb="0"/><line nr="2383" mi="0" ci="4" mb="0" cb="0"/><line nr="2385" mi="0" ci="2" mb="0" cb="0"/><line nr="2389" mi="0" ci="3" mb="0" cb="0"/><line nr="2390" mi="0" ci="3" mb="0" cb="2"/><line nr="2391" mi="0" ci="2" mb="0" cb="0"/><line nr="2392" mi="0" ci="4" mb="0" cb="0"/><line nr="2393" mi="0" ci="4" mb="0" cb="0"/><line nr="2395" mi="0" ci="2" mb="0" cb="0"/><line nr="2401" mi="21" ci="0" mb="0" cb="0"/><line nr="2405" mi="0" ci="1" mb="0" cb="0"/><line nr="2410" mi="0" ci="4" mb="0" cb="0"/><line nr="2412" mi="0" ci="4" mb="0" cb="0"/><line nr="2414" mi="0" ci="4" mb="0" cb="0"/><line nr="2433" mi="0" ci="2" mb="0" cb="0"/><line nr="2434" mi="0" ci="3" mb="0" cb="0"/><line nr="2435" mi="0" ci="1" mb="0" cb="0"/><line nr="2438" mi="0" ci="3" mb="0" cb="0"/><line nr="2439" mi="0" ci="3" mb="0" cb="0"/><line nr="2440" mi="0" ci="6" mb="0" cb="0"/><line nr="2441" mi="0" ci="3" mb="0" cb="0"/><line nr="2442" mi="0" ci="1" mb="0" cb="0"/><line nr="2445" mi="0" ci="11" mb="0" cb="0"/><line nr="2449" mi="0" ci="10" mb="0" cb="0"/><line nr="2450" mi="0" ci="7" mb="0" cb="0"/><line nr="2454" mi="0" ci="7" mb="0" cb="2"/><line nr="2459" mi="0" ci="2" mb="0" cb="0"/><line nr="2460" mi="0" ci="3" mb="0" cb="0"/><line nr="2461" mi="0" ci="5" mb="0" cb="0"/><line nr="2462" mi="0" ci="2" mb="0" cb="0"/><line nr="2470" mi="0" ci="11" mb="0" cb="0"/><line nr="2474" mi="0" ci="10" mb="0" cb="0"/><line nr="2475" mi="0" ci="7" mb="0" cb="0"/><line nr="2479" mi="0" ci="7" mb="0" cb="2"/><line nr="2484" mi="0" ci="2" mb="0" cb="0"/><line nr="2485" mi="0" ci="3" mb="0" cb="0"/><line nr="2486" mi="0" ci="5" mb="0" cb="0"/><line nr="2487" mi="0" ci="2" mb="0" cb="0"/><line nr="2495" mi="0" ci="11" mb="0" cb="0"/><line nr="2499" mi="0" ci="11" mb="0" cb="0"/><line nr="2500" mi="0" ci="6" mb="0" cb="0"/><line nr="2501" mi="0" ci="3" mb="0" cb="0"/><line nr="2504" mi="0" ci="2" mb="0" cb="0"/><line nr="2505" mi="0" ci="1" mb="0" cb="0"/><line nr="2508" mi="0" ci="7" mb="0" cb="4"/><line nr="2510" mi="0" ci="5" mb="0" cb="0"/><line nr="2511" mi="0" ci="3" mb="0" cb="2"/><line nr="2512" mi="0" ci="7" mb="0" cb="0"/><line nr="2514" mi="0" ci="6" mb="0" cb="0"/><line nr="2517" mi="0" ci="1" mb="0" cb="0"/><line nr="2521" mi="0" ci="7" mb="0" cb="2"/><line nr="2526" mi="0" ci="2" mb="0" cb="0"/><line nr="2527" mi="0" ci="4" mb="0" cb="0"/><line nr="2528" mi="0" ci="5" mb="0" cb="0"/><line nr="2529" mi="0" ci="2" mb="0" cb="0"/><line nr="2531" mi="8" ci="1" mb="2" cb="0"/><line nr="2532" mi="8" ci="1" mb="2" cb="0"/><line nr="2533" mi="0" ci="3" mb="0" cb="0"/><line nr="2541" mi="0" ci="11" mb="0" cb="0"/><line nr="2545" mi="0" ci="11" mb="0" cb="0"/><line nr="2546" mi="0" ci="6" mb="0" cb="0"/><line nr="2547" mi="0" ci="3" mb="0" cb="0"/><line nr="2550" mi="0" ci="2" mb="0" cb="0"/><line nr="2551" mi="0" ci="1" mb="0" cb="0"/><line nr="2554" mi="0" ci="7" mb="0" cb="4"/><line nr="2556" mi="0" ci="5" mb="0" cb="0"/><line nr="2557" mi="0" ci="3" mb="0" cb="2"/><line nr="2558" mi="0" ci="7" mb="0" cb="0"/><line nr="2560" mi="0" ci="6" mb="0" cb="0"/><line nr="2563" mi="0" ci="1" mb="0" cb="0"/><line nr="2567" mi="0" ci="7" mb="0" cb="2"/><line nr="2572" mi="0" ci="2" mb="0" cb="0"/><line nr="2573" mi="0" ci="4" mb="0" cb="0"/><line nr="2574" mi="0" ci="5" mb="0" cb="0"/><line nr="2575" mi="0" ci="2" mb="0" cb="0"/><line nr="2577" mi="8" ci="1" mb="2" cb="0"/><line nr="2578" mi="8" ci="1" mb="2" cb="0"/><line nr="2579" mi="0" ci="3" mb="0" cb="0"/><line nr="2587" mi="0" ci="11" mb="0" cb="0"/><line nr="2591" mi="0" ci="11" mb="0" cb="0"/><line nr="2593" mi="0" ci="8" mb="0" cb="0"/><line nr="2597" mi="0" ci="7" mb="0" cb="2"/><line nr="2602" mi="0" ci="2" mb="0" cb="0"/><line nr="2603" mi="0" ci="3" mb="0" cb="0"/><line nr="2606" mi="0" ci="4" mb="0" cb="2"/><line nr="2608" mi="0" ci="6" mb="0" cb="0"/><line nr="2611" mi="0" ci="4" mb="0" cb="2"/><line nr="2613" mi="8" ci="1" mb="2" cb="0"/><line nr="2614" mi="0" ci="3" mb="0" cb="0"/><line nr="2615" mi="0" ci="1" mb="0" cb="0"/><line nr="2617" mi="0" ci="4" mb="0" cb="2"/><line nr="2619" mi="0" ci="5" mb="0" cb="0"/><line nr="2620" mi="0" ci="1" mb="0" cb="0"/><line nr="2624" mi="0" ci="5" mb="0" cb="0"/><line nr="2626" mi="0" ci="6" mb="0" cb="0"/><line nr="2631" mi="7" ci="1" mb="2" cb="0"/><line nr="2632" mi="7" ci="1" mb="2" cb="0"/><line nr="2633" mi="10" ci="1" mb="2" cb="0"/><line nr="2634" mi="0" ci="2" mb="0" cb="0"/><line nr="2646" mi="7" ci="1" mb="2" cb="0"/><line nr="2647" mi="0" ci="6" mb="0" cb="0"/><line nr="2648" mi="0" ci="1" mb="0" cb="0"/><line nr="2657" mi="7" ci="1" mb="2" cb="0"/><line nr="2658" mi="0" ci="5" mb="0" cb="0"/><line nr="2659" mi="0" ci="3" mb="0" cb="0"/><line nr="2660" mi="0" ci="1" mb="0" cb="0"/><line nr="2667" mi="7" ci="1" mb="2" cb="0"/><line nr="2668" mi="0" ci="6" mb="0" cb="0"/><line nr="2669" mi="0" ci="1" mb="0" cb="0"/><line nr="2678" mi="7" ci="1" mb="2" cb="0"/><line nr="2679" mi="0" ci="5" mb="0" cb="0"/><line nr="2680" mi="0" ci="3" mb="0" cb="0"/><line nr="2681" mi="0" ci="1" mb="0" cb="0"/><line nr="2685" mi="0" ci="4" mb="0" cb="2"/><line nr="2686" mi="0" ci="4" mb="0" cb="0"/><line nr="2688" mi="8" ci="1" mb="2" cb="0"/><line nr="2689" mi="0" ci="3" mb="0" cb="0"/><line nr="2696" mi="7" ci="1" mb="2" cb="0"/><line nr="2697" mi="0" ci="5" mb="0" cb="0"/><line nr="2698" mi="0" ci="1" mb="0" cb="0"/><line nr="2702" mi="0" ci="4" mb="0" cb="2"/><line nr="2703" mi="0" ci="4" mb="0" cb="0"/><line nr="2705" mi="8" ci="1" mb="2" cb="0"/><line nr="2706" mi="0" ci="3" mb="0" cb="0"/><line nr="2714" mi="7" ci="1" mb="2" cb="0"/><line nr="2715" mi="0" ci="4" mb="0" cb="0"/><line nr="2716" mi="0" ci="3" mb="0" cb="0"/><line nr="2717" mi="0" ci="1" mb="0" cb="0"/><line nr="2720" mi="7" ci="1" mb="2" cb="0"/><line nr="2721" mi="0" ci="6" mb="0" cb="0"/><line nr="2722" mi="0" ci="1" mb="0" cb="0"/><line nr="2725" mi="7" ci="1" mb="2" cb="0"/><line nr="2726" mi="0" ci="5" mb="0" cb="0"/><line nr="2727" mi="0" ci="3" mb="0" cb="0"/><line nr="2728" mi="0" ci="1" mb="0" cb="0"/><line nr="2732" mi="10" ci="0" mb="0" cb="0"/><line nr="2746" mi="0" ci="3" mb="0" cb="0"/><line nr="2754" mi="0" ci="4" mb="0" cb="0"/><line nr="2756" mi="0" ci="4" mb="0" cb="0"/><line nr="2758" mi="0" ci="5" mb="0" cb="0"/><line nr="2761" mi="9" ci="1" mb="2" cb="0"/><line nr="2766" mi="7" ci="1" mb="2" cb="0"/><line nr="2767" mi="0" ci="6" mb="0" cb="0"/><line nr="2768" mi="0" ci="1" mb="0" cb="0"/><line nr="2772" mi="15" ci="0" mb="0" cb="0"/><line nr="2777" mi="0" ci="6" mb="0" cb="0"/><line nr="2782" mi="0" ci="3" mb="0" cb="0"/><line nr="2784" mi="2" ci="0" mb="0" cb="0"/><line nr="2786" mi="6" ci="0" mb="0" cb="0"/><line nr="2790" mi="10" ci="0" mb="0" cb="0"/><line nr="2795" mi="0" ci="1" mb="0" cb="0"/><line nr="2803" mi="0" ci="1" mb="0" cb="0"/><line nr="2810" mi="0" ci="1" mb="0" cb="0"/><line nr="2827" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1375" covered="6197"/><counter type="BRANCH" missed="366" covered="690"/><counter type="LINE" missed="45" covered="1480"/><counter type="COMPLEXITY" missed="207" covered="487"/><counter type="METHOD" missed="9" covered="157"/><counter type="CLASS" missed="1" covered="28"/></sourcefile><sourcefile name="CoresAlgo.java"><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="16" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="2" ci="0" mb="0" cb="0"/><line nr="263" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="44"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="ShortestPathSingleSource.java"><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="4" mb="0" cb="0"/><line nr="327" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="MinimumCutGlobalAbstract.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="1" cb="1"/><line nr="32" mi="6" ci="0" mb="0" cb="0"/><line nr="33" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VoronoiAlgos.java"><line nr="33" mi="3" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="2"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="9" mb="0" cb="0"/><line nr="112" mi="0" ci="12" mb="0" cb="2"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="10" mb="0" cb="2"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="2"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="8" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="2"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="2"/><line nr="196" mi="7" ci="1" mb="2" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="2"/><line nr="198" mi="0" ci="7" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="325"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="0" covered="68"/><counter type="COMPLEXITY" missed="2" covered="33"/><counter type="METHOD" missed="1" covered="21"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="MatchingWeightedGabow1990Simpler.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="12" ci="1" mb="4" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="14" mb="0" cb="0"/><line nr="99" mi="0" ci="17" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="15" ci="1" mb="2" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="108" mi="11" ci="1" mb="4" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="11" ci="1" mb="2" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="14" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="10" mb="0" cb="0"/><line nr="138" mi="12" ci="1" mb="4" cb="0"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="1" cb="1"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="0"/><line nr="156" mi="0" ci="16" mb="0" cb="2"/><line nr="157" mi="0" ci="7" mb="0" cb="2"/><line nr="158" mi="0" ci="7" mb="0" cb="2"/><line nr="159" mi="0" ci="12" mb="0" cb="2"/><line nr="163" mi="7" ci="1" mb="2" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="10" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="2"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="11" mb="0" cb="0"/><line nr="174" mi="12" ci="1" mb="2" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="7" ci="1" mb="2" cb="0"/><line nr="179" mi="0" ci="10" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="2"/><line nr="184" mi="0" ci="6" mb="0" cb="2"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="2"/><line nr="204" mi="0" ci="9" mb="0" cb="0"/><line nr="205" mi="0" ci="6" mb="0" cb="0"/><line nr="208" mi="0" ci="4" mb="0" cb="2"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="2"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="6" mb="0" cb="2"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="236" mi="0" ci="9" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="88" covered="610"/><counter type="BRANCH" missed="23" covered="39"/><counter type="LINE" missed="1" covered="125"/><counter type="COMPLEXITY" missed="12" covered="31"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TopologicalOrderAlgo.java"><line nr="90" mi="11" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="11" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="5"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="3" covered="1"/></sourcefile><sourcefile name="WeaklyConnectedComponentsAlgo.java"><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="GraphsUtils.java"><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="11" mb="0" cb="2"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="2"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="2"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="1" cb="1"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="125"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="28"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTreeYao.java"><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="14" mb="0" cb="4"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="2"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="5" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="7" ci="1" mb="2" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="4"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="2"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="2"/><line nr="141" mi="0" ci="11" mb="0" cb="2"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="7" ci="1" mb="2" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="2"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="2"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="13" mb="0" cb="2"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="2"/><line nr="186" mi="0" ci="13" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="2"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="458"/><counter type="BRANCH" missed="4" covered="52"/><counter type="LINE" missed="0" covered="97"/><counter type="COMPLEXITY" missed="2" covered="30"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VertexScoring.java"/><sourcefile name="StronglyConnectedComponentsAlgoTarjan.java"><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="47" mi="0" ci="5" mb="0" cb="2"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="2"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="2"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="10" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="10" covered="171"/><counter type="BRANCH" missed="2" covered="18"/><counter type="LINE" missed="1" covered="47"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTreeFredmanTarjan.java"><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="1" cb="1"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="2"/><line nr="98" mi="0" ci="12" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="2"/><line nr="121" mi="0" ci="5" mb="0" cb="2"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="12" mb="0" cb="2"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="2"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="2"/><line nr="149" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="2"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="2"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="1" cb="1"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="2"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="1" mb="0" cb="0"/><line nr="221" mi="0" ci="7" mb="0" cb="2"/><line nr="222" mi="0" ci="8" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="360"/><counter type="BRANCH" missed="2" covered="38"/><counter type="LINE" missed="3" covered="90"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTreeKruskal.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="2" cb="2"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="16" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="104"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="21"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumCostFlowCostScaling.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="2" cb="2"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="2"/><line nr="130" mi="0" ci="10" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="2"/><line nr="144" mi="0" ci="12" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="12" mb="0" cb="2"/><line nr="168" mi="0" ci="11" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="12" mb="0" cb="2"/><line nr="172" mi="0" ci="7" mb="1" cb="1"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="1" cb="1"/><line nr="175" mi="12" ci="0" mb="2" cb="0"/><line nr="176" mi="8" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="12" mb="0" cb="2"/><line nr="180" mi="0" ci="5" mb="0" cb="2"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="27" mb="0" cb="6"/><line nr="192" mi="0" ci="3" mb="0" cb="2"/><line nr="193" mi="0" ci="3" mb="0" cb="2"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="12" mb="0" cb="2"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="2"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="2"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="204" mi="0" ci="14" mb="0" cb="2"/><line nr="206" mi="0" ci="8" mb="0" cb="0"/><line nr="207" mi="0" ci="8" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="209" mi="0" ci="11" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="8" ci="1" mb="2" cb="0"/><line nr="217" mi="0" ci="12" mb="0" cb="2"/><line nr="218" mi="0" ci="5" mb="0" cb="2"/><line nr="219" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="9" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="2"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="2"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="2"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="2"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="256" mi="8" ci="1" mb="2" cb="0"/><line nr="257" mi="8" ci="1" mb="2" cb="0"/><line nr="258" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="264" mi="10" ci="1" mb="2" cb="0"/><line nr="265" mi="0" ci="6" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="7" ci="1" mb="2" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="2"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="12" mb="0" cb="0"/><line nr="272" mi="0" ci="4" mb="0" cb="2"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="15" mb="0" cb="6"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="3" mb="0" cb="2"/><line nr="299" mi="0" ci="3" mb="0" cb="2"/><line nr="300" mi="8" ci="1" mb="2" cb="0"/><line nr="301" mi="0" ci="9" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="15" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="0"/><line nr="307" mi="7" ci="1" mb="2" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="2"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="2"/><line nr="312" mi="0" ci="15" mb="0" cb="0"/><line nr="313" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="8" ci="1" mb="2" cb="0"/><line nr="320" mi="0" ci="11" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="323" mi="0" ci="9" mb="0" cb="0"/><line nr="324" mi="10" ci="1" mb="2" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="2"/><line nr="328" mi="8" ci="1" mb="2" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="10" ci="1" mb="2" cb="0"/><line nr="331" mi="9" ci="1" mb="2" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="333" mi="0" ci="5" mb="0" cb="0"/><line nr="334" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="8" ci="1" mb="2" cb="0"/><line nr="343" mi="13" ci="1" mb="2" cb="0"/><line nr="344" mi="0" ci="2" mb="0" cb="0"/><line nr="345" mi="0" ci="12" mb="0" cb="2"/><line nr="346" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="0" cb="0"/><line nr="349" mi="0" ci="10" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="352" mi="0" ci="8" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="0" cb="0"/><line nr="355" mi="0" ci="8" mb="0" cb="0"/><line nr="356" mi="0" ci="11" mb="0" cb="4"/><line nr="357" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="0" ci="4" mb="0" cb="0"/><line nr="360" mi="8" ci="1" mb="2" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="5" mb="0" cb="0"/><line nr="367" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="2" mb="0" cb="0"/><line nr="372" mi="0" ci="2" mb="0" cb="0"/><line nr="373" mi="0" ci="7" mb="0" cb="2"/><line nr="374" mi="0" ci="5" mb="0" cb="2"/><line nr="375" mi="0" ci="5" mb="0" cb="0"/><line nr="376" mi="0" ci="5" mb="0" cb="0"/><line nr="377" mi="0" ci="5" mb="0" cb="0"/><line nr="378" mi="0" ci="3" mb="0" cb="0"/><line nr="380" mi="0" ci="7" mb="0" cb="0"/><line nr="381" mi="0" ci="6" mb="0" cb="0"/><line nr="384" mi="0" ci="2" mb="0" cb="2"/><line nr="385" mi="0" ci="1" mb="0" cb="0"/><line nr="386" mi="0" ci="5" mb="0" cb="0"/><line nr="389" mi="0" ci="8" mb="1" cb="1"/><line nr="390" mi="0" ci="6" mb="0" cb="2"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="8" mb="0" cb="0"/><line nr="394" mi="0" ci="5" mb="0" cb="0"/><line nr="395" mi="0" ci="5" mb="0" cb="0"/><line nr="396" mi="0" ci="3" mb="0" cb="2"/><line nr="397" mi="0" ci="9" mb="0" cb="0"/><line nr="398" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="2"/><line nr="403" mi="0" ci="1" mb="0" cb="0"/><line nr="404" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="2"/><line nr="407" mi="0" ci="1" mb="0" cb="0"/><line nr="409" mi="0" ci="15" mb="0" cb="0"/><line nr="410" mi="0" ci="2" mb="0" cb="0"/><line nr="411" mi="0" ci="6" mb="0" cb="2"/><line nr="412" mi="0" ci="7" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="0" cb="2"/><line nr="416" mi="0" ci="5" mb="0" cb="0"/><line nr="417" mi="0" ci="9" mb="0" cb="0"/><line nr="419" mi="0" ci="4" mb="0" cb="2"/><line nr="420" mi="0" ci="6" mb="0" cb="2"/><line nr="421" mi="0" ci="9" mb="0" cb="0"/><line nr="423" mi="0" ci="4" mb="0" cb="0"/><line nr="427" mi="0" ci="8" mb="0" cb="0"/><line nr="428" mi="0" ci="5" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="432" mi="0" ci="5" mb="0" cb="2"/><line nr="433" mi="0" ci="7" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="2"/><line nr="436" mi="0" ci="1" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="439" mi="0" ci="2" mb="0" cb="2"/><line nr="440" mi="0" ci="1" mb="0" cb="0"/><line nr="444" mi="0" ci="7" mb="0" cb="2"/><line nr="445" mi="0" ci="7" mb="0" cb="0"/><line nr="446" mi="0" ci="2" mb="0" cb="2"/><line nr="447" mi="0" ci="12" mb="0" cb="0"/><line nr="448" mi="0" ci="9" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="457" mi="0" ci="3" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="2"/><line nr="459" mi="0" ci="2" mb="0" cb="0"/><line nr="461" mi="0" ci="4" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="0" cb="0"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="465" mi="0" ci="2" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="2"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="5" mb="0" cb="0"/><line nr="470" mi="0" ci="5" mb="0" cb="0"/><line nr="471" mi="0" ci="14" mb="0" cb="2"/><line nr="472" mi="0" ci="4" mb="0" cb="2"/><line nr="473" mi="0" ci="1" mb="0" cb="0"/><line nr="474" mi="0" ci="5" mb="0" cb="0"/><line nr="475" mi="0" ci="12" mb="0" cb="0"/><line nr="476" mi="0" ci="4" mb="0" cb="2"/><line nr="477" mi="0" ci="1" mb="0" cb="0"/><line nr="478" mi="0" ci="11" mb="0" cb="0"/><line nr="479" mi="0" ci="6" mb="1" cb="1"/><line nr="480" mi="0" ci="5" mb="0" cb="0"/><line nr="481" mi="0" ci="10" mb="0" cb="0"/><line nr="483" mi="0" ci="1" mb="0" cb="0"/><line nr="485" mi="0" ci="2" mb="0" cb="2"/><line nr="486" mi="0" ci="4" mb="0" cb="0"/><line nr="487" mi="0" ci="8" mb="0" cb="0"/><line nr="488" mi="0" ci="5" mb="0" cb="0"/><line nr="490" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="0" ci="2" mb="0" cb="2"/><line nr="494" mi="0" ci="2" mb="0" cb="0"/><line nr="496" mi="0" ci="6" mb="0" cb="2"/><line nr="497" mi="0" ci="6" mb="0" cb="2"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="8" mb="0" cb="0"/><line nr="501" mi="0" ci="5" mb="0" cb="0"/><line nr="502" mi="0" ci="14" mb="0" cb="2"/><line nr="503" mi="0" ci="4" mb="0" cb="2"/><line nr="504" mi="0" ci="1" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="506" mi="0" ci="5" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="2"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="510" mi="0" ci="12" mb="0" cb="0"/><line nr="512" mi="0" ci="4" mb="0" cb="2"/><line nr="513" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="5" mb="0" cb="0"/><line nr="516" mi="0" ci="2" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="2"/><line nr="518" mi="0" ci="7" mb="0" cb="0"/><line nr="521" mi="0" ci="3" mb="0" cb="2"/><line nr="522" mi="0" ci="5" mb="0" cb="0"/><line nr="524" mi="0" ci="2" mb="0" cb="2"/><line nr="525" mi="0" ci="6" mb="0" cb="2"/><line nr="526" mi="0" ci="9" mb="0" cb="0"/><line nr="528" mi="0" ci="4" mb="0" cb="0"/><line nr="532" mi="0" ci="8" mb="0" cb="0"/><line nr="533" mi="0" ci="5" mb="0" cb="0"/><line nr="535" mi="0" ci="1" mb="0" cb="0"/><line nr="538" mi="0" ci="12" mb="0" cb="0"/><line nr="539" mi="0" ci="1" mb="0" cb="0"/><line nr="541" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="0" ci="5" mb="0" cb="0"/><line nr="547" mi="0" ci="5" mb="0" cb="0"/><line nr="548" mi="0" ci="5" mb="0" cb="0"/><line nr="549" mi="0" ci="3" mb="0" cb="0"/><line nr="551" mi="0" ci="7" mb="0" cb="2"/><line nr="552" mi="0" ci="9" mb="0" cb="0"/><line nr="554" mi="8" ci="1" mb="2" cb="0"/><line nr="555" mi="0" ci="7" mb="0" cb="2"/><line nr="556" mi="0" ci="4" mb="0" cb="2"/><line nr="557" mi="0" ci="1" mb="0" cb="0"/><line nr="560" mi="0" ci="4" mb="0" cb="0"/><line nr="561" mi="0" ci="2" mb="0" cb="0"/><line nr="562" mi="0" ci="3" mb="0" cb="0"/><line nr="563" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="9" mb="0" cb="0"/><line nr="565" mi="0" ci="3" mb="0" cb="2"/><line nr="567" mi="8" ci="1" mb="2" cb="0"/><line nr="568" mi="0" ci="3" mb="0" cb="0"/><line nr="569" mi="0" ci="4" mb="0" cb="0"/><line nr="570" mi="0" ci="4" mb="0" cb="0"/><line nr="571" mi="0" ci="2" mb="0" cb="2"/><line nr="573" mi="0" ci="1" mb="0" cb="0"/><line nr="576" mi="10" ci="1" mb="2" cb="0"/><line nr="577" mi="0" ci="6" mb="0" cb="0"/><line nr="578" mi="0" ci="1" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="4" mb="0" cb="2"/><line nr="584" mi="0" ci="1" mb="0" cb="0"/><line nr="585" mi="0" ci="5" mb="0" cb="0"/><line nr="586" mi="0" ci="14" mb="0" cb="2"/><line nr="587" mi="0" ci="1" mb="0" cb="0"/><line nr="589" mi="0" ci="4" mb="0" cb="2"/><line nr="591" mi="0" ci="3" mb="0" cb="0"/><line nr="592" mi="0" ci="4" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="594" mi="0" ci="1" mb="0" cb="0"/><line nr="597" mi="0" ci="4" mb="0" cb="2"/><line nr="601" mi="0" ci="5" mb="0" cb="0"/><line nr="602" mi="0" ci="5" mb="0" cb="2"/><line nr="603" mi="0" ci="4" mb="0" cb="0"/><line nr="604" mi="0" ci="12" mb="0" cb="0"/><line nr="608" mi="0" ci="8" mb="0" cb="0"/><line nr="609" mi="0" ci="11" mb="0" cb="0"/><line nr="610" mi="0" ci="5" mb="0" cb="2"/><line nr="611" mi="0" ci="4" mb="0" cb="0"/><line nr="612" mi="0" ci="6" mb="0" cb="0"/><line nr="613" mi="0" ci="8" mb="0" cb="0"/><line nr="614" mi="0" ci="11" mb="0" cb="0"/><line nr="615" mi="0" ci="1" mb="0" cb="0"/><line nr="617" mi="0" ci="4" mb="0" cb="0"/><line nr="618" mi="0" ci="2" mb="0" cb="0"/><line nr="623" mi="0" ci="2" mb="0" cb="0"/><line nr="627" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="191" covered="1669"/><counter type="BRANCH" missed="45" covered="169"/><counter type="LINE" missed="5" covered="348"/><counter type="COMPLEXITY" missed="26" covered="93"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TSPMetricMSTAppx.java"><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="1" cb="1"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="1" cb="1"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="7" ci="1" mb="2" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="2"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="9" ci="1" mb="2" cb="0"/><line nr="86" mi="7" ci="1" mb="2" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="109"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="2" covered="26"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TSPMetricMatchingAppx.java"><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="1" cb="1"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="6" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="9" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="75" mi="0" ci="9" mb="0" cb="2"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="7" ci="1" mb="2" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="11" mb="0" cb="2"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="2"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="255"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="2" covered="51"/><counter type="COMPLEXITY" missed="3" covered="12"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTreeKargerKleinTarjan.java"><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="1" cb="3"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="23" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="2"/><line nr="117" mi="0" ci="7" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="7" ci="1" mb="2" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="11" mb="0" cb="2"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="11" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="2"/><line nr="169" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="11" mb="0" cb="2"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="8" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="11" mb="0" cb="2"/><line nr="188" mi="0" ci="8" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="1" cb="1"/><line nr="191" mi="1" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="2"/><line nr="197" mi="0" ci="13" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="11" mb="0" cb="2"/><line nr="208" mi="0" ci="8" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="1" cb="1"/><line nr="211" mi="0" ci="19" mb="0" cb="2"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="7" mb="0" cb="2"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="7" mb="0" cb="0"/><line nr="231" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="7" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="0"/><line nr="239" mi="0" ci="6" mb="0" cb="0"/><line nr="241" mi="0" ci="7" mb="0" cb="0"/><line nr="242" mi="0" ci="7" mb="0" cb="0"/><line nr="244" mi="0" ci="7" mb="0" cb="2"/><line nr="245" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="7" mb="0" cb="0"/><line nr="247" mi="0" ci="9" mb="0" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="0"/><line nr="249" mi="0" ci="8" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="684"/><counter type="BRANCH" missed="5" covered="35"/><counter type="LINE" missed="3" covered="124"/><counter type="COMPLEXITY" missed="5" covered="32"/><counter type="METHOD" missed="1" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BiConnectedComponentsAlgoHopcroftTarjan.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="14" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="7" ci="1" mb="2" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="16" mb="0" cb="2"/><line nr="74" mi="0" ci="29" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="2"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="16" mb="0" cb="2"/><line nr="82" mi="0" ci="29" mb="0" cb="2"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="16" mb="0" cb="2"/><line nr="87" mi="0" ci="29" mb="0" cb="2"/><line nr="88" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="8" ci="1" mb="2" cb="0"/><line nr="95" mi="0" ci="16" mb="0" cb="2"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="2"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="13" mb="0" cb="2"/><line nr="117" mi="0" ci="7" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="4"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="2"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="2"/><line nr="143" mi="7" ci="1" mb="2" cb="0"/><line nr="144" mi="0" ci="7" mb="1" cb="1"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="7" ci="1" mb="2" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="12" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="2"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="7" ci="1" mb="2" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="2"/><line nr="169" mi="0" ci="12" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="1" cb="1"/><line nr="172" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="175" mi="6" ci="0" mb="0" cb="0"/><line nr="177" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="2"/><line nr="203" mi="0" ci="11" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="2"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="0" ci="9" mb="0" cb="2"/><line nr="217" mi="0" ci="14" mb="0" cb="2"/><line nr="218" mi="0" ci="8" mb="0" cb="0"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="2"/><line nr="221" mi="0" ci="6" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="0" ci="9" mb="0" cb="2"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="227" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="9" mb="0" cb="2"/><line nr="231" mi="0" ci="14" mb="0" cb="2"/><line nr="232" mi="0" ci="12" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="2"/><line nr="234" mi="0" ci="8" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="2"/><line nr="239" mi="0" ci="12" mb="0" cb="0"/><line nr="240" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="2"/><line nr="258" mi="0" ci="3" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="4" ci="4" mb="3" cb="1"/><line nr="262" mi="8" ci="0" mb="2" cb="0"/><line nr="263" mi="9" ci="0" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="3" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="0" cb="2"/><line nr="277" mi="0" ci="19" mb="0" cb="2"/><line nr="278" mi="9" ci="1" mb="2" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="4" mb="1" cb="1"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="290" mi="0" ci="7" mb="0" cb="2"/><line nr="291" mi="0" ci="9" mb="0" cb="2"/><line nr="292" mi="0" ci="3" mb="0" cb="0"/><line nr="293" mi="0" ci="3" mb="0" cb="0"/><line nr="294" mi="0" ci="3" mb="0" cb="2"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="296" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="2"/><line nr="298" mi="0" ci="4" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="300" mi="0" ci="9" mb="0" cb="2"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="3" mb="0" cb="2"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="4" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="309" mi="9" ci="1" mb="2" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="9" mb="0" cb="2"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="6" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="1" cb="1"/><line nr="323" mi="26" ci="1" mb="2" cb="0"/><line nr="324" mi="11" ci="0" mb="4" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="2"/><line nr="326" mi="0" ci="9" mb="0" cb="2"/><line nr="327" mi="0" ci="3" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="3" mb="0" cb="2"/><line nr="330" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="13" mb="0" cb="2"/><line nr="332" mi="0" ci="8" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="337" mi="0" ci="7" mb="0" cb="2"/><line nr="338" mi="0" ci="4" mb="0" cb="2"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="342" mi="0" ci="8" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="4" mb="1" cb="1"/><line nr="349" mi="0" ci="7" mb="0" cb="2"/><line nr="350" mi="0" ci="7" mb="0" cb="2"/><line nr="351" mi="0" ci="14" mb="0" cb="0"/><line nr="355" mi="0" ci="4" mb="1" cb="1"/><line nr="356" mi="0" ci="7" mb="0" cb="2"/><line nr="357" mi="0" ci="9" mb="0" cb="2"/><line nr="358" mi="0" ci="3" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="2"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="362" mi="0" ci="13" mb="0" cb="2"/><line nr="363" mi="0" ci="15" mb="0" cb="0"/><line nr="364" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="7" mb="0" cb="2"/><line nr="369" mi="0" ci="9" mb="0" cb="0"/><line nr="370" mi="0" ci="5" mb="0" cb="0"/><line nr="374" mi="0" ci="5" mb="0" cb="0"/><line nr="379" mi="6" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="0" cb="0"/><line nr="381" mi="7" ci="0" mb="2" cb="0"/><line nr="382" mi="2" ci="0" mb="2" cb="0"/><line nr="383" mi="4" ci="0" mb="0" cb="0"/><line nr="384" mi="7" ci="0" mb="0" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="391" mi="0" ci="5" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="2"/><line nr="393" mi="0" ci="6" mb="0" cb="0"/><line nr="394" mi="0" ci="7" mb="0" cb="2"/><line nr="395" mi="0" ci="6" mb="0" cb="2"/><line nr="396" mi="0" ci="4" mb="0" cb="0"/><line nr="398" mi="0" ci="6" mb="2" cb="2"/><line nr="399" mi="6" ci="0" mb="0" cb="0"/><line nr="400" mi="0" ci="5" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="2"/><line nr="406" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="2" mb="0" cb="0"/><line nr="408" mi="0" ci="7" mb="0" cb="2"/><line nr="409" mi="0" ci="6" mb="0" cb="2"/><line nr="410" mi="0" ci="1" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="0"/><line nr="412" mi="0" ci="9" mb="0" cb="2"/><line nr="413" mi="0" ci="6" mb="0" cb="2"/><line nr="414" mi="0" ci="5" mb="0" cb="0"/><line nr="415" mi="0" ci="18" mb="0" cb="0"/><line nr="418" mi="16" ci="0" mb="6" cb="0"/><line nr="422" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="3" mb="1" cb="1"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="430" mi="0" ci="3" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="2"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="12" mb="0" cb="2"/><line nr="434" mi="0" ci="14" mb="0" cb="2"/><line nr="435" mi="0" ci="14" mb="0" cb="2"/><line nr="436" mi="0" ci="4" mb="0" cb="2"/><line nr="437" mi="0" ci="5" mb="0" cb="0"/><line nr="438" mi="0" ci="4" mb="0" cb="0"/><line nr="440" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="185" covered="1267"/><counter type="BRANCH" missed="44" covered="148"/><counter type="LINE" missed="17" covered="243"/><counter type="COMPLEXITY" missed="31" covered="84"/><counter type="METHOD" missed="4" covered="15"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="Path.java"><line nr="95" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="11" ci="0" mb="2" cb="0"/><line nr="164" mi="7" ci="0" mb="0" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="8" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="1" cb="1"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="2"/><line nr="237" mi="0" ci="9" mb="0" cb="0"/><line nr="238" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="67"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="18" covered="17"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShortestPathAStar.java"><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="1" cb="1"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="9" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="107" mi="9" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="10" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="2"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="12" ci="1" mb="2" cb="0"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="7" ci="1" mb="2" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="2"/><line nr="186" mi="7" ci="1" mb="2" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="276"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="20" covered="70"/><counter type="COMPLEXITY" missed="10" covered="17"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SimplePathsFinder.java"><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="CyclesFinderJohnson.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="19" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="15" mb="0" cb="2"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="1"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="16" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="10" ci="1" mb="2" cb="0"/><line nr="123" mi="0" ci="10" mb="0" cb="2"/><line nr="125" mi="0" ci="14" mb="0" cb="2"/><line nr="126" mi="0" ci="2" mb="0" cb="2"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="2"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="2"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="2"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="9" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="8" ci="1" mb="2" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="2"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="8" ci="1" mb="2" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="14" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="2"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="2"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="7" ci="1" mb="2" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="2"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="9" mb="0" cb="2"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="2"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="2"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="10" mb="0" cb="4"/><line nr="212" mi="0" ci="8" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="7" mb="0" cb="2"/><line nr="225" mi="0" ci="2" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="10" mb="0" cb="2"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="0"/><line nr="251" mi="0" ci="2" mb="0" cb="2"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="11" mb="0" cb="2"/><counter type="INSTRUCTION" missed="37" covered="556"/><counter type="BRANCH" missed="9" covered="61"/><counter type="LINE" missed="2" covered="124"/><counter type="COMPLEXITY" missed="5" covered="43"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="SimplePathsFinderSedgewick.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="23" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="2"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="8" ci="1" mb="2" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="2"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="2"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="15" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="204"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EdgeCovers.java"><line nr="33" mi="3" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="1" cb="1"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="2"/><line nr="71" mi="0" ci="16" mb="0" cb="0"/><line nr="74" mi="20" ci="0" mb="6" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="1" cb="1"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="8" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="1" mb="2" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="56" covered="143"/><counter type="BRANCH" missed="10" covered="6"/><counter type="LINE" missed="7" covered="33"/><counter type="COMPLEXITY" missed="11" covered="16"/><counter type="METHOD" missed="5" covered="14"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="FlowCirculationPushRelabel.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="1" cb="3"/><line nr="31" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="2"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="2"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="1" cb="1"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="2"/><line nr="101" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="11" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="1" cb="1"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="7" mb="0" cb="2"/><line nr="112" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="2"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="118" mi="0" ci="12" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="7" mb="0" cb="2"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="2"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="8" ci="1" mb="2" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="2"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="2"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="2"/><line nr="154" mi="0" ci="6" mb="0" cb="2"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="16" mb="0" cb="4"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="16" mb="0" cb="4"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="9" mb="0" cb="2"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="2"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="2"/><line nr="184" mi="0" ci="6" mb="0" cb="2"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="16" mb="0" cb="4"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="4" mb="0" cb="0"/><line nr="201" mi="0" ci="8" mb="0" cb="0"/><line nr="202" mi="0" ci="16" mb="0" cb="4"/><line nr="203" mi="0" ci="3" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="2"/><line nr="210" mi="0" ci="3" mb="1" cb="1"/><line nr="211" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="23" ci="1" mb="4" cb="0"/><line nr="219" mi="0" ci="12" mb="0" cb="2"/><line nr="220" mi="0" ci="15" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="238" mi="0" ci="7" mb="0" cb="2"/><line nr="239" mi="0" ci="7" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="0" ci="7" mb="0" cb="2"/><line nr="244" mi="0" ci="11" mb="0" cb="0"/><line nr="245" mi="0" ci="2" mb="1" cb="1"/><line nr="246" mi="5" ci="0" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="2"/><line nr="250" mi="0" ci="8" mb="0" cb="0"/><line nr="251" mi="0" ci="3" mb="0" cb="2"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="10" mb="0" cb="2"/><line nr="254" mi="0" ci="8" mb="0" cb="0"/><line nr="255" mi="0" ci="11" mb="0" cb="0"/><line nr="256" mi="0" ci="12" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="2"/><line nr="258" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="8" mb="0" cb="0"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="2"/><line nr="268" mi="0" ci="5" mb="0" cb="2"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="277" mi="0" ci="2" mb="0" cb="0"/><line nr="279" mi="0" ci="6" mb="0" cb="2"/><line nr="280" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="6" ci="1" mb="2" cb="0"/><line nr="283" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="285" mi="0" ci="9" mb="0" cb="2"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="10" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="2"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="6" mb="0" cb="2"/><line nr="292" mi="0" ci="6" mb="0" cb="2"/><line nr="293" mi="0" ci="6" mb="0" cb="0"/><line nr="296" mi="0" ci="3" mb="0" cb="2"/><line nr="298" mi="0" ci="8" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="8" mb="0" cb="0"/><line nr="302" mi="0" ci="11" mb="0" cb="4"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="8" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="8" mb="0" cb="0"/><line nr="311" mi="0" ci="11" mb="0" cb="4"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="315" mi="0" ci="9" mb="0" cb="2"/><line nr="316" mi="0" ci="3" mb="0" cb="0"/><line nr="317" mi="0" ci="3" mb="0" cb="0"/><line nr="318" mi="0" ci="7" mb="0" cb="0"/><line nr="319" mi="0" ci="2" mb="0" cb="2"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="2"/><line nr="322" mi="0" ci="6" mb="0" cb="2"/><line nr="323" mi="0" ci="6" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="0" cb="2"/><line nr="328" mi="0" ci="8" mb="0" cb="0"/><line nr="329" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="8" mb="0" cb="0"/><line nr="331" mi="0" ci="11" mb="0" cb="4"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="5" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="8" mb="0" cb="0"/><line nr="340" mi="0" ci="11" mb="0" cb="4"/><line nr="341" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="5" mb="0" cb="0"/><line nr="346" mi="1" ci="2" mb="1" cb="1"/><line nr="348" mi="0" ci="3" mb="1" cb="1"/><line nr="349" mi="5" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="7" mb="0" cb="0"/><line nr="352" mi="0" ci="3" mb="0" cb="0"/><line nr="354" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="4" mb="0" cb="0"/><line nr="357" mi="21" ci="1" mb="4" cb="0"/><line nr="358" mi="0" ci="12" mb="0" cb="2"/><line nr="359" mi="0" ci="7" mb="0" cb="0"/><line nr="360" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="1146"/><counter type="BRANCH" missed="19" covered="131"/><counter type="LINE" missed="4" covered="216"/><counter type="COMPLEXITY" missed="15" covered="74"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ChinesePostman.java"><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="BitsLookupTable.java"><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="2" cb="2"/><line nr="76" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="9" mb="0" cb="2"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="2" cb="2"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="1" cb="1"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="2"/><line nr="161" mi="0" ci="9" mb="0" cb="2"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="2"/><line nr="166" mi="0" ci="12" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="2" cb="2"/><line nr="191" mi="8" ci="0" mb="0" cb="0"/><line nr="192" mi="0" ci="9" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="2"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="8" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="2"/><line nr="199" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="0"/><line nr="213" mi="2" ci="7" mb="1" cb="1"/><counter type="INSTRUCTION" missed="27" covered="220"/><counter type="BRANCH" missed="8" covered="22"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="8" covered="12"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IFlowNetworkInt.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="1" cb="1"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="0" ci="12" mb="0" cb="2"/><line nr="169" mi="0" ci="13" mb="0" cb="2"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="13" mb="0" cb="2"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="12" ci="0" mb="2" cb="0"/><line nr="176" mi="13" ci="0" mb="2" cb="0"/><line nr="177" mi="5" ci="0" mb="2" cb="0"/><line nr="178" mi="8" ci="0" mb="0" cb="0"/><line nr="179" mi="5" ci="0" mb="2" cb="0"/><line nr="180" mi="7" ci="0" mb="0" cb="0"/><line nr="182" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="192" mi="3" ci="0" mb="2" cb="0"/><line nr="193" mi="3" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="11" ci="0" mb="2" cb="0"/><line nr="196" mi="12" ci="0" mb="0" cb="0"/><line nr="197" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="11" ci="0" mb="2" cb="0"/><line nr="201" mi="12" ci="0" mb="0" cb="0"/><line nr="202" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="225" mi="6" ci="0" mb="0" cb="0"/><line nr="226" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="166" covered="120"/><counter type="BRANCH" missed="16" covered="8"/><counter type="LINE" missed="31" covered="23"/><counter type="COMPLEXITY" missed="15" covered="13"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatchingWeightedBipartiteHungarianMethod.java"><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="2"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="12" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="2"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="7" mb="0" cb="2"/><line nr="144" mi="0" ci="5" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="2"/><line nr="152" mi="0" ci="10" mb="0" cb="4"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="14" mb="0" cb="2"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="165" mi="0" ci="10" mb="1" cb="3"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="2"/><line nr="173" mi="0" ci="6" mb="0" cb="2"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="14" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="196" mi="0" ci="6" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="14" mb="0" cb="2"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="15" mb="0" cb="2"/><line nr="207" mi="0" ci="10" mb="0" cb="6"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="0" ci="7" mb="0" cb="2"/><line nr="214" mi="0" ci="5" mb="0" cb="2"/><line nr="215" mi="0" ci="7" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="7" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="2"/><line nr="233" mi="0" ci="10" mb="0" cb="0"/><line nr="234" mi="0" ci="9" mb="0" cb="2"/><line nr="235" mi="0" ci="6" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="27" mb="0" cb="4"/><line nr="243" mi="0" ci="19" mb="0" cb="0"/><line nr="247" mi="0" ci="20" mb="0" cb="2"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="539"/><counter type="BRANCH" missed="1" covered="53"/><counter type="LINE" missed="4" covered="95"/><counter type="COMPLEXITY" missed="2" covered="36"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="VoronoiAlgoDijkstra.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="1" cb="1"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="1" cb="1"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="2"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="2"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="2"/><line nr="75" mi="0" ci="9" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="9" mb="0" cb="2"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="222"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="2" covered="51"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StronglyConnectedComponentsAlgo.java"><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="LowestCommonAncestorStaticAbstract.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="2"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="15" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="15" mb="0" cb="0"/><line nr="80" mi="7" ci="1" mb="2" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="2"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="105"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="MinimumCutSTUtils.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="2"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="8" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="11" mb="0" cb="2"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="2"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="2"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="2"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="2"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="14" mb="0" cb="2"/><line nr="164" mi="0" ci="9" mb="0" cb="2"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="11" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="8" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="15" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="12" mb="0" cb="0"/><line nr="223" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="1" cb="1"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="7" mb="0" cb="2"/><line nr="232" mi="0" ci="8" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="4" mb="0" cb="2"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="240" mi="6" ci="1" mb="2" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="435"/><counter type="BRANCH" missed="4" covered="36"/><counter type="LINE" missed="6" covered="102"/><counter type="COMPLEXITY" missed="4" covered="36"/><counter type="METHOD" missed="1" covered="19"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="MatchingWeightedGabow1990.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="2"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="15" mb="0" cb="2"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="14" mb="0" cb="0"/><line nr="120" mi="0" ci="17" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="15" ci="1" mb="2" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="11" ci="1" mb="4" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="11" ci="1" mb="2" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="14" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="6" ci="1" mb="2" cb="0"/><line nr="144" mi="10" ci="1" mb="2" cb="0"/><line nr="145" mi="9" ci="1" mb="2" cb="0"/><line nr="146" mi="9" ci="1" mb="2" cb="0"/><line nr="147" mi="0" ci="8" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="2"/><line nr="149" mi="12" ci="1" mb="2" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="13" ci="1" mb="2" cb="0"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="160" mi="0" ci="5" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="10" ci="1" mb="2" cb="0"/><line nr="164" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="10" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="12" ci="1" mb="4" cb="0"/><line nr="174" mi="0" ci="10" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="1" cb="1"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="190" mi="0" ci="11" mb="0" cb="0"/><line nr="191" mi="0" ci="16" mb="0" cb="2"/><line nr="192" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="7" mb="0" cb="2"/><line nr="194" mi="0" ci="12" mb="0" cb="2"/><line nr="198" mi="7" ci="1" mb="2" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="2"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="2"/><line nr="203" mi="0" ci="16" mb="0" cb="0"/><line nr="204" mi="0" ci="10" mb="0" cb="2"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="11" mb="0" cb="0"/><line nr="211" mi="12" ci="1" mb="2" cb="0"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="215" mi="7" ci="1" mb="2" cb="0"/><line nr="216" mi="0" ci="10" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="2"/><line nr="218" mi="0" ci="5" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="10" mb="0" cb="2"/><line nr="221" mi="0" ci="9" mb="0" cb="0"/><line nr="222" mi="0" ci="12" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="2"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="2"/><line nr="229" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="232" mi="0" ci="6" mb="0" cb="2"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="3" mb="0" cb="2"/><line nr="243" mi="0" ci="5" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="248" mi="0" ci="8" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="2"/><line nr="255" mi="0" ci="9" mb="0" cb="0"/><line nr="256" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="2"/><line nr="260" mi="0" ci="4" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="6" mb="0" cb="2"/><line nr="272" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="6" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="6" ci="1" mb="2" cb="0"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="9" mb="1" cb="3"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="2" mb="0" cb="0"/><line nr="291" mi="0" ci="1" mb="0" cb="0"/><line nr="293" mi="0" ci="6" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="2"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="0" cb="2"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="5" mb="0" cb="0"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="1" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="2"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="3" mb="0" cb="0"/><line nr="312" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="8" mb="0" cb="0"/><line nr="321" mi="0" ci="2" mb="0" cb="2"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="4" mb="0" cb="2"/><line nr="325" mi="0" ci="5" mb="0" cb="0"/><line nr="326" mi="0" ci="6" mb="0" cb="0"/><line nr="329" mi="0" ci="6" mb="1" cb="1"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="0" cb="0"/><line nr="336" mi="3" ci="0" mb="0" cb="0"/><line nr="340" mi="0" ci="4" mb="0" cb="2"/><line nr="342" mi="0" ci="4" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="348" mi="0" ci="15" mb="0" cb="2"/><line nr="349" mi="0" ci="11" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="2"/><line nr="353" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="10" mb="0" cb="0"/><line nr="360" mi="0" ci="16" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="364" mi="0" ci="5" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="9" ci="1" mb="2" cb="0"/><line nr="367" mi="0" ci="7" mb="0" cb="0"/><line nr="371" mi="0" ci="3" mb="0" cb="0"/><line nr="372" mi="1" ci="7" mb="1" cb="1"/><counter type="INSTRUCTION" missed="167" covered="966"/><counter type="BRANCH" missed="40" covered="70"/><counter type="LINE" missed="3" covered="201"/><counter type="COMPLEXITY" missed="22" covered="51"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="FlowCirculations.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="1" cb="3"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="43"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="MaximalCliques.java"><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="7" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="9" ci="0" mb="3" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="7" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="20"/><counter type="BRANCH" missed="7" covered="2"/><counter type="LINE" missed="14" covered="4"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="ShortestPathSTBidirectionalDijkstra.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="1" cb="1"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="1" cb="1"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="2"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="4"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="4"/><line nr="87" mi="0" ci="7" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="8" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="2"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="4"/><line nr="114" mi="0" ci="7" mb="0" cb="2"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="2"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="2"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="2"/><line nr="140" mi="0" ci="11" mb="0" cb="2"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="143" mi="0" ci="11" mb="0" cb="2"/><line nr="144" mi="0" ci="10" mb="0" cb="0"/><line nr="146" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="2"/><line nr="150" mi="0" ci="11" mb="0" cb="2"/><line nr="151" mi="0" ci="10" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="2"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="9" ci="1" mb="2" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="2"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="485"/><counter type="BRANCH" missed="4" covered="56"/><counter type="LINE" missed="2" covered="104"/><counter type="COMPLEXITY" missed="3" covered="35"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MaximumFlow.java"><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="9" ci="0" mb="10" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="144" mi="7" ci="0" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="8" ci="0" mb="2" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="1" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="15"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="17" covered="4"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="ShortestPathST.java"><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="12" ci="0" mb="6" cb="0"/><line nr="95" mi="2" ci="0" mb="2" cb="0"/><line nr="96" mi="8" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="TSPMetricUtils.java"><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="22" ci="1" mb="4" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="8" ci="1" mb="2" cb="0"/><line nr="44" mi="8" ci="1" mb="2" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="2"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="4"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="7" ci="1" mb="2" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="8" ci="1" mb="2" cb="0"/><line nr="68" mi="8" ci="1" mb="2" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="8" ci="0" mb="2" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="12" ci="0" mb="2" cb="0"/><line nr="90" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="2" cb="0"/><line nr="95" mi="4" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="176" covered="93"/><counter type="BRANCH" missed="28" covered="8"/><counter type="LINE" missed="29" covered="28"/><counter type="COMPLEXITY" missed="18" covered="7"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BfsIterImpl.java"><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="1" cb="1"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="1" cb="1"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="9" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="2"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="2"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="2"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="2"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="2"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="10" mb="0" cb="2"/><line nr="193" mi="4" ci="0" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="5" mb="0" cb="0"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="7" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="10" mb="0" cb="2"/><line nr="227" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="305"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="3" covered="80"/><counter type="COMPLEXITY" missed="5" covered="29"/><counter type="METHOD" missed="3" covered="18"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="ColoringUtils.java"><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="1" cb="1"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="TreePathMaxima.java"><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="307" mi="7" ci="0" mb="0" cb="0"/><line nr="313" mi="4" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="315" mi="2" ci="0" mb="0" cb="0"/><line nr="320" mi="8" ci="0" mb="2" cb="0"/><line nr="322" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="325" mi="6" ci="0" mb="0" cb="0"/><line nr="327" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="6" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="3" mb="1" cb="1"/><line nr="394" mi="3" ci="0" mb="0" cb="0"/><line nr="395" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="7" ci="0" mb="0" cb="0"/><line nr="399" mi="0" ci="3" mb="0" cb="0"/><line nr="400" mi="0" ci="3" mb="0" cb="0"/><line nr="401" mi="0" ci="4" mb="0" cb="0"/><line nr="402" mi="0" ci="4" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="53"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="14" covered="13"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="2" covered="4"/></sourcefile><sourcefile name="IVertexPartition.java"><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="2"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="2"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="2"/><line nr="129" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="8" mb="0" cb="2"/><line nr="155" mi="0" ci="6" mb="0" cb="0"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="2"/><line nr="161" mi="0" ci="8" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="1" cb="1"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="16" mb="0" cb="2"/><line nr="170" mi="0" ci="2" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="26" covered="188"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="5" covered="35"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTreePrim.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="1" cb="1"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="2"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="2"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="1" cb="1"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="2"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="2"/><line nr="171" mi="0" ci="10" mb="0" cb="0"/><line nr="172" mi="0" ci="6" mb="0" cb="2"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="2"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="1" cb="1"/><line nr="188" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="325"/><counter type="BRANCH" missed="3" covered="37"/><counter type="LINE" missed="3" covered="82"/><counter type="COMPLEXITY" missed="4" covered="21"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FlowNetworkInt.java"><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="1" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="1" cb="1"/><line nr="114" mi="0" ci="9" mb="0" cb="2"/><line nr="115" mi="0" ci="11" mb="0" cb="2"/><line nr="116" mi="0" ci="8" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="2"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="9" ci="0" mb="2" cb="0"/><line nr="122" mi="11" ci="0" mb="2" cb="0"/><line nr="123" mi="6" ci="0" mb="2" cb="0"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="125" mi="6" ci="0" mb="2" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="1" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="139" mi="9" ci="0" mb="2" cb="0"/><line nr="140" mi="12" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="9" ci="0" mb="2" cb="0"/><line nr="145" mi="12" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="1" cb="3"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="118" covered="103"/><counter type="BRANCH" missed="16" covered="10"/><counter type="LINE" missed="22" covered="17"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaximalCliquesUtils.java"><line nr="29" mi="3" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="1" cb="1"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="1" mb="2" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="53"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="8" covered="15"/><counter type="COMPLEXITY" missed="7" covered="7"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="MinimumCostFlow.java"><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="1" cb="1"/><line nr="202" mi="9" ci="0" mb="3" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="7" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="3" mb="3" cb="1"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="10" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="6" mb="0" cb="0"/><line nr="222" mi="6" ci="0" mb="4" cb="0"/><line nr="223" mi="9" ci="0" mb="0" cb="0"/><line nr="225" mi="8" ci="0" mb="0" cb="0"/><line nr="227" mi="1" ci="0" mb="0" cb="0"/><line nr="232" mi="9" ci="0" mb="6" cb="0"/><line nr="234" mi="10" ci="0" mb="0" cb="0"/><line nr="236" mi="9" ci="0" mb="0" cb="0"/><line nr="238" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="4" cb="0"/><line nr="244" mi="9" ci="0" mb="0" cb="0"/><line nr="246" mi="8" ci="0" mb="0" cb="0"/><line nr="248" mi="1" ci="0" mb="0" cb="0"/><line nr="254" mi="9" ci="0" mb="6" cb="0"/><line nr="256" mi="10" ci="0" mb="0" cb="0"/><line nr="258" mi="9" ci="0" mb="0" cb="0"/><line nr="260" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="0" ci="9" mb="2" cb="4"/><line nr="267" mi="0" ci="8" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="12" ci="0" mb="8" cb="0"/><line nr="278" mi="9" ci="0" mb="0" cb="0"/><line nr="280" mi="8" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="3" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="8" ci="0" mb="2" cb="0"/><line nr="304" mi="4" ci="0" mb="0" cb="0"/><line nr="305" mi="1" ci="0" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="309" mi="2" ci="0" mb="0" cb="0"/><line nr="375" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="204" covered="62"/><counter type="BRANCH" missed="39" covered="6"/><counter type="LINE" missed="35" covered="11"/><counter type="COMPLEXITY" missed="31" covered="7"/><counter type="METHOD" missed="9" covered="6"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="MaximumFlowEdmondsKarp.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="2"/><line nr="51" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="2"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="2"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="2"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="1" cb="1"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="9" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="2"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="10" ci="1" mb="2" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="2"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="7" mb="0" cb="2"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="2"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="6" mb="0" cb="0"/><line nr="206" mi="10" ci="1" mb="2" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="8" ci="1" mb="2" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="8" ci="1" mb="2" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="2"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="0" cb="2"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="222" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="10" ci="1" mb="2" cb="0"/><line nr="225" mi="0" ci="8" mb="0" cb="0"/><line nr="226" mi="0" ci="5" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="230" mi="0" ci="1" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="236" mi="0" ci="7" mb="0" cb="2"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="240" mi="0" ci="6" mb="0" cb="2"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="10" ci="1" mb="2" cb="0"/><line nr="245" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="8" ci="1" mb="2" cb="0"/><line nr="249" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="8" ci="1" mb="2" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="2"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="6" mb="0" cb="2"/><line nr="259" mi="0" ci="8" mb="0" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="10" ci="1" mb="2" cb="0"/><line nr="263" mi="0" ci="8" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="10" mb="0" cb="0"/><line nr="276" mi="0" ci="10" mb="0" cb="2"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="10" ci="0" mb="2" cb="0"/><line nr="290" mi="0" ci="10" mb="0" cb="2"/><line nr="295" mi="0" ci="10" mb="0" cb="2"/><line nr="299" mi="7" ci="1" mb="2" cb="0"/><line nr="300" mi="0" ci="12" mb="0" cb="0"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="310" mi="0" ci="7" mb="0" cb="0"/><line nr="311" mi="0" ci="7" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="6" mb="0" cb="0"/><line nr="314" mi="0" ci="1" mb="0" cb="0"/><line nr="317" mi="0" ci="2" mb="0" cb="0"/><line nr="318" mi="0" ci="7" mb="0" cb="0"/><line nr="324" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="7" mb="0" cb="2"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="6" mb="0" cb="2"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="0"/><line nr="332" mi="10" ci="1" mb="2" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="5" mb="0" cb="0"/><line nr="336" mi="6" ci="1" mb="2" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="6" ci="1" mb="2" cb="0"/><line nr="343" mi="0" ci="7" mb="0" cb="2"/><line nr="344" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="6" mb="0" cb="2"/><line nr="347" mi="0" ci="8" mb="0" cb="0"/><line nr="348" mi="0" ci="6" mb="0" cb="0"/><line nr="350" mi="10" ci="1" mb="2" cb="0"/><line nr="351" mi="0" ci="8" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="2" mb="0" cb="0"/><line nr="362" mi="0" ci="7" mb="0" cb="2"/><line nr="363" mi="0" ci="4" mb="0" cb="0"/><line nr="365" mi="0" ci="6" mb="0" cb="2"/><line nr="366" mi="0" ci="4" mb="0" cb="0"/><line nr="367" mi="0" ci="6" mb="0" cb="0"/><line nr="369" mi="10" ci="1" mb="2" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="6" ci="1" mb="2" cb="0"/><line nr="374" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="1" mb="0" cb="0"/><line nr="377" mi="6" ci="1" mb="2" cb="0"/><line nr="380" mi="0" ci="7" mb="0" cb="2"/><line nr="381" mi="0" ci="4" mb="0" cb="0"/><line nr="383" mi="0" ci="6" mb="0" cb="2"/><line nr="384" mi="0" ci="8" mb="0" cb="0"/><line nr="385" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="10" ci="1" mb="2" cb="0"/><line nr="388" mi="0" ci="8" mb="0" cb="0"/><line nr="389" mi="0" ci="5" mb="0" cb="0"/><line nr="391" mi="0" ci="2" mb="0" cb="0"/><line nr="392" mi="0" ci="1" mb="0" cb="0"/><line nr="393" mi="0" ci="1" mb="0" cb="0"/><line nr="396" mi="0" ci="10" mb="0" cb="0"/><line nr="401" mi="0" ci="8" mb="0" cb="2"/><line nr="405" mi="0" ci="5" mb="0" cb="0"/><line nr="410" mi="8" ci="0" mb="2" cb="0"/><line nr="415" mi="0" ci="8" mb="0" cb="2"/><line nr="420" mi="0" ci="8" mb="0" cb="2"/><line nr="424" mi="7" ci="1" mb="2" cb="0"/><line nr="425" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="194" covered="829"/><counter type="BRANCH" missed="43" covered="79"/><counter type="LINE" missed="8" covered="208"/><counter type="COMPLEXITY" missed="24" covered="66"/><counter type="METHOD" missed="2" covered="27"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ChinesePostmanImpl.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="13" mb="0" cb="2"/><line nr="42" mi="0" ci="8" mb="0" cb="2"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="9" ci="1" mb="2" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="9" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="11" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="11" mb="0" cb="2"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="11" mb="0" cb="2"/><line nr="101" mi="10" ci="1" mb="2" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="10" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="349"/><counter type="BRANCH" missed="5" covered="29"/><counter type="LINE" missed="2" covered="66"/><counter type="COMPLEXITY" missed="3" covered="20"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ColoringGreedy.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="16" mb="0" cb="2"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="113"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumCutST.java"><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="MinimumCutGlobalStoerWagner.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="1" cb="1"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="7" ci="1" mb="2" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="69" mi="8" ci="1" mb="2" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="8" ci="1" mb="2" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="2"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="2"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="7" mb="0" cb="2"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="8" ci="1" mb="2" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="2"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="8" ci="1" mb="2" cb="0"/><line nr="115" mi="9" ci="1" mb="2" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="7" ci="1" mb="2" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="2"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="246"/><counter type="BRANCH" missed="15" covered="29"/><counter type="LINE" missed="1" covered="68"/><counter type="COMPLEXITY" missed="8" covered="17"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaximalCliquesBronKerbosch.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="15" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="9" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="10" ci="1" mb="4" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="2"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="11" mb="0" cb="2"/><line nr="100" mi="0" ci="6" mb="0" cb="2"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="2"/><line nr="104" mi="0" ci="6" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="6" mb="0" cb="4"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="2"/><line nr="113" mi="0" ci="11" mb="0" cb="2"/><line nr="114" mi="0" ci="6" mb="0" cb="2"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="7" ci="1" mb="2" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="340"/><counter type="BRANCH" missed="6" covered="28"/><counter type="LINE" missed="0" covered="69"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BipartiteGraphs.java"><line nr="67" mi="8" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="9" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="11" ci="0" mb="2" cb="0"/><line nr="119" mi="6" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="4" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="2" ci="0" mb="2" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="7" ci="0" mb="2" cb="0"/><line nr="138" mi="4" ci="0" mb="2" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="4" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="8" ci="0" mb="2" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="2" cb="0"/><line nr="150" mi="5" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="8" ci="0" mb="2" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="1" ci="0" mb="0" cb="0"/><line nr="158" mi="3" ci="0" mb="2" cb="0"/><line nr="159" mi="8" ci="0" mb="2" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="2" cb="0"/><line nr="163" mi="5" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="8" ci="0" mb="2" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="2" ci="0" mb="2" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="2" cb="0"/><line nr="183" mi="6" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="2" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="0" ci="9" mb="0" cb="2"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="2"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="1" cb="1"/><line nr="220" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="6" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="1" cb="1"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="244" covered="39"/><counter type="BRANCH" missed="44" covered="6"/><counter type="LINE" missed="61" covered="10"/><counter type="COMPLEXITY" missed="28" covered="3"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumSpanningTreeUtils.java"><line nr="35" mi="3" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="146" mi="7" ci="1" mb="2" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="2"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="148"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="4" covered="41"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="EdgeCoverCardinality.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="38" mi="12" ci="0" mb="2" cb="0"/><line nr="40" mi="14" ci="0" mb="4" cb="0"/><line nr="41" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="2"/><line nr="49" mi="0" ci="7" mb="1" cb="1"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="4" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="75"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="6" covered="15"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VertexBiPartitions.java"><line nr="29" mi="3" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="2" cb="2"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="22" ci="0" mb="0" cb="0"/><line nr="67" mi="11" ci="0" mb="4" cb="0"/><line nr="70" mi="26" ci="0" mb="0" cb="0"/><line nr="73" mi="12" ci="0" mb="4" cb="0"/><line nr="77" mi="2" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="2" cb="0"/><line nr="90" mi="14" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="2" cb="0"/><line nr="102" mi="14" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="22" ci="0" mb="0" cb="0"/><line nr="115" mi="11" ci="0" mb="4" cb="0"/><line nr="118" mi="26" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="4" cb="0"/><line nr="125" mi="2" ci="0" mb="2" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="1" cb="1"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="2"/><line nr="141" mi="0" ci="14" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="2" mb="0" cb="2"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="7" mb="0" cb="2"/><line nr="153" mi="0" ci="14" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="2"/><line nr="155" mi="0" ci="2" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="22" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="4" cb="0"/><line nr="169" mi="0" ci="26" mb="0" cb="0"/><line nr="172" mi="12" ci="0" mb="4" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="2"/><line nr="179" mi="0" ci="13" mb="0" cb="2"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="9" mb="0" cb="2"/><line nr="183" mi="0" ci="13" mb="0" cb="2"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="21" mb="0" cb="0"/><line nr="188" mi="28" ci="0" mb="6" cb="0"/><line nr="193" mi="0" ci="5" mb="2" cb="2"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="4" cb="0"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="7" ci="0" mb="0" cb="0"/><line nr="212" mi="13" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="260" mi="8" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="1" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="277" mi="8" ci="0" mb="0" cb="0"/><line nr="284" mi="7" ci="1" mb="2" cb="0"/><line nr="285" mi="0" ci="3" mb="0" cb="2"/><line nr="286" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="452" covered="301"/><counter type="BRANCH" missed="73" covered="31"/><counter type="LINE" missed="64" covered="55"/><counter type="COMPLEXITY" missed="61" covered="26"/><counter type="METHOD" missed="22" covered="13"/><counter type="CLASS" missed="4" covered="9"/></sourcefile><sourcefile name="TopologicalOrderAlgoAbstract.java"><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="90" mi="7" ci="1" mb="2" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="78"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="MinimumMeanCycleAbstract.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="2"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Trees.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="2"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="2"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="2"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="4" mb="0" cb="2"/><line nr="153" mi="0" ci="2" mb="1" cb="1"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="2"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="2"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="1" cb="3"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="2"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="4" covered="159"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="2" covered="44"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IVertexScoring.java"><line nr="25" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SteinerTrees.java"><line nr="37" mi="3" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="7" ci="1" mb="2" cb="0"/><line nr="127" mi="0" ci="3" mb="1" cb="1"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="89"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="10" covered="26"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="1" covered="4"/></sourcefile><sourcefile name="Matching.java"><line nr="138" mi="0" ci="3" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="1" cb="1"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="1" cb="1"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="2"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="1" cb="1"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="1" cb="1"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="0" cb="0"/><line nr="166" mi="11" ci="0" mb="2" cb="0"/><line nr="167" mi="8" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="2" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="46" covered="78"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="11" covered="18"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PageRank.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="1" cb="1"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="19" mb="0" cb="2"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="2" cb="2"/><line nr="70" mi="9" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="2" cb="0"/><line nr="74" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="7" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="11" ci="0" mb="2" cb="0"/><line nr="80" mi="9" ci="0" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="0" cb="0"/><line nr="82" mi="9" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="2" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="1" cb="1"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="2"/><line nr="98" mi="0" ci="10" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="2"/><line nr="104" mi="0" ci="14" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="2"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="2" cb="2"/><line nr="139" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="10" ci="0" mb="2" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="8" ci="0" mb="2" cb="0"/><line nr="143" mi="3" ci="0" mb="0" cb="0"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="167" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="138" covered="349"/><counter type="BRANCH" missed="21" covered="29"/><counter type="LINE" missed="23" covered="65"/><counter type="COMPLEXITY" missed="14" covered="18"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MatchingWeightedGabow1990Abstract.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="16" ci="0" mb="4" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="2"/><line nr="172" mi="0" ci="11" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="1" cb="1"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="10" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="2"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="0" cb="2"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="0" cb="2"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="1" cb="1"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="2"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="1" mb="0" cb="0"/><line nr="224" mi="0" ci="8" mb="0" cb="2"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="2"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="2"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="2"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="271" mi="0" ci="3" mb="0" cb="0"/><line nr="272" mi="0" ci="7" mb="0" cb="2"/><line nr="273" mi="0" ci="4" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="6" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="8" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="285" mi="0" ci="8" mb="0" cb="0"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="3" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="310" mi="0" ci="4" mb="0" cb="0"/><line nr="311" mi="0" ci="1" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="0"/><line nr="315" mi="0" ci="14" mb="0" cb="4"/><line nr="317" mi="0" ci="4" mb="0" cb="0"/><line nr="318" mi="0" ci="6" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="0" cb="0"/><line nr="320" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="5" mb="0" cb="0"/><line nr="324" mi="0" ci="12" mb="0" cb="2"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="2"/><line nr="331" mi="0" ci="3" mb="0" cb="0"/><line nr="332" mi="0" ci="13" mb="0" cb="0"/><line nr="334" mi="0" ci="11" mb="0" cb="2"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="1" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="343" mi="0" ci="14" mb="0" cb="2"/><line nr="344" mi="0" ci="15" mb="0" cb="2"/><line nr="346" mi="0" ci="2" mb="0" cb="2"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="10" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="2"/><line nr="351" mi="0" ci="4" mb="0" cb="0"/><line nr="352" mi="0" ci="8" mb="0" cb="0"/><line nr="354" mi="0" ci="9" mb="0" cb="0"/><line nr="355" mi="0" ci="1" mb="0" cb="0"/><line nr="358" mi="0" ci="5" mb="0" cb="0"/><line nr="359" mi="0" ci="12" mb="0" cb="4"/><line nr="363" mi="0" ci="9" mb="0" cb="0"/><line nr="367" mi="0" ci="9" mb="0" cb="0"/><line nr="372" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="0" ci="3" mb="0" cb="0"/><line nr="437" mi="0" ci="1" mb="0" cb="0"/><line nr="441" mi="6" ci="0" mb="0" cb="0"/><line nr="451" mi="0" ci="2" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="0" ci="1" mb="0" cb="0"/><line nr="458" mi="0" ci="2" mb="0" cb="0"/><line nr="459" mi="0" ci="4" mb="0" cb="0"/><line nr="460" mi="0" ci="3" mb="0" cb="0"/><line nr="461" mi="0" ci="6" mb="0" cb="0"/><line nr="462" mi="0" ci="7" mb="0" cb="2"/><line nr="463" mi="0" ci="4" mb="0" cb="0"/><line nr="464" mi="0" ci="8" mb="0" cb="0"/><line nr="465" mi="0" ci="4" mb="0" cb="0"/><line nr="466" mi="0" ci="5" mb="1" cb="3"/><line nr="467" mi="0" ci="4" mb="0" cb="0"/><line nr="469" mi="0" ci="14" mb="0" cb="0"/><line nr="472" mi="0" ci="11" mb="0" cb="2"/><line nr="473" mi="0" ci="8" mb="0" cb="0"/><line nr="474" mi="0" ci="6" mb="0" cb="0"/><line nr="475" mi="0" ci="6" mb="0" cb="0"/><line nr="476" mi="0" ci="6" mb="0" cb="0"/><line nr="477" mi="0" ci="6" mb="0" cb="0"/><line nr="478" mi="0" ci="5" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="0"/><line nr="483" mi="0" ci="4" mb="0" cb="0"/><line nr="485" mi="0" ci="4" mb="0" cb="0"/><line nr="486" mi="0" ci="6" mb="0" cb="0"/><line nr="487" mi="0" ci="6" mb="0" cb="0"/><line nr="488" mi="0" ci="3" mb="0" cb="0"/><line nr="490" mi="0" ci="3" mb="0" cb="0"/><line nr="491" mi="0" ci="4" mb="0" cb="0"/><line nr="493" mi="0" ci="4" mb="0" cb="0"/><line nr="494" mi="0" ci="6" mb="0" cb="0"/><line nr="495" mi="0" ci="10" mb="0" cb="0"/><line nr="496" mi="0" ci="7" mb="0" cb="0"/><line nr="498" mi="0" ci="5" mb="0" cb="0"/><line nr="499" mi="0" ci="5" mb="0" cb="0"/><line nr="501" mi="0" ci="3" mb="0" cb="0"/><line nr="502" mi="0" ci="1" mb="0" cb="0"/><line nr="505" mi="0" ci="5" mb="0" cb="0"/><line nr="508" mi="0" ci="4" mb="0" cb="0"/><line nr="509" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="1" mb="0" cb="0"/><line nr="513" mi="0" ci="4" mb="0" cb="0"/><line nr="514" mi="0" ci="3" mb="0" cb="0"/><line nr="515" mi="0" ci="3" mb="0" cb="0"/><line nr="516" mi="0" ci="1" mb="0" cb="0"/><line nr="519" mi="0" ci="4" mb="0" cb="0"/><line nr="520" mi="0" ci="3" mb="0" cb="0"/><line nr="521" mi="0" ci="4" mb="0" cb="0"/><line nr="522" mi="0" ci="3" mb="0" cb="0"/><line nr="524" mi="0" ci="6" mb="0" cb="2"/><line nr="525" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="6" mb="0" cb="0"/><line nr="527" mi="0" ci="5" mb="0" cb="0"/><line nr="528" mi="0" ci="1" mb="0" cb="0"/><line nr="529" mi="0" ci="5" mb="0" cb="0"/><line nr="530" mi="0" ci="1" mb="0" cb="0"/><line nr="537" mi="0" ci="2" mb="1" cb="1"/><line nr="539" mi="5" ci="0" mb="0" cb="0"/><line nr="542" mi="0" ci="5" mb="0" cb="0"/><line nr="545" mi="0" ci="2" mb="0" cb="0"/><line nr="546" mi="0" ci="12" mb="0" cb="2"/><line nr="547" mi="0" ci="7" mb="0" cb="0"/><line nr="548" mi="0" ci="4" mb="0" cb="0"/><line nr="549" mi="0" ci="7" mb="0" cb="2"/><line nr="550" mi="0" ci="5" mb="0" cb="0"/><line nr="553" mi="0" ci="7" mb="0" cb="2"/><line nr="554" mi="0" ci="8" mb="0" cb="0"/><line nr="557" mi="0" ci="2" mb="0" cb="0"/><line nr="560" mi="0" ci="11" mb="0" cb="2"/><line nr="561" mi="0" ci="5" mb="0" cb="2"/><line nr="563" mi="0" ci="4" mb="0" cb="0"/><line nr="564" mi="0" ci="4" mb="0" cb="0"/><line nr="565" mi="0" ci="5" mb="0" cb="0"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="1" mb="0" cb="0"/><line nr="573" mi="0" ci="11" mb="0" cb="2"/><line nr="574" mi="0" ci="5" mb="0" cb="2"/><line nr="575" mi="0" ci="6" mb="0" cb="2"/><line nr="576" mi="0" ci="3" mb="0" cb="0"/><line nr="577" mi="0" ci="3" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><line nr="581" mi="0" ci="1" mb="0" cb="0"/><line nr="584" mi="0" ci="5" mb="0" cb="0"/><line nr="585" mi="4" ci="0" mb="0" cb="0"/><line nr="586" mi="11" ci="0" mb="2" cb="0"/><line nr="587" mi="6" ci="0" mb="2" cb="0"/><line nr="588" mi="10" ci="0" mb="0" cb="0"/><line nr="589" mi="3" ci="0" mb="0" cb="0"/><line nr="590" mi="1" ci="0" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="594" mi="0" ci="14" mb="0" cb="2"/><line nr="596" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="13" mb="0" cb="2"/><line nr="601" mi="0" ci="6" mb="0" cb="0"/><line nr="602" mi="0" ci="10" mb="1" cb="5"/><line nr="603" mi="0" ci="1" mb="0" cb="0"/><line nr="605" mi="0" ci="27" mb="0" cb="0"/><line nr="606" mi="11" ci="1" mb="2" cb="0"/><line nr="607" mi="0" ci="3" mb="0" cb="0"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="24" ci="0" mb="0" cb="0"/><line nr="611" mi="3" ci="0" mb="0" cb="0"/><line nr="612" mi="4" ci="0" mb="0" cb="0"/><line nr="613" mi="17" ci="0" mb="2" cb="0"/><line nr="614" mi="7" ci="0" mb="2" cb="0"/><line nr="615" mi="4" ci="0" mb="0" cb="0"/><line nr="617" mi="22" ci="0" mb="2" cb="0"/><line nr="618" mi="13" ci="0" mb="0" cb="0"/><line nr="620" mi="4" ci="0" mb="0" cb="0"/><line nr="621" mi="6" ci="0" mb="0" cb="0"/><line nr="622" mi="1" ci="0" mb="0" cb="0"/><line nr="624" mi="0" ci="4" mb="0" cb="2"/><line nr="625" mi="0" ci="3" mb="0" cb="0"/><line nr="626" mi="0" ci="4" mb="0" cb="2"/><line nr="627" mi="0" ci="3" mb="0" cb="0"/><line nr="628" mi="12" ci="1" mb="2" cb="0"/><line nr="629" mi="0" ci="3" mb="0" cb="0"/><line nr="630" mi="0" ci="10" mb="0" cb="0"/><line nr="631" mi="12" ci="1" mb="4" cb="0"/><line nr="633" mi="0" ci="11" mb="0" cb="2"/><line nr="634" mi="0" ci="4" mb="0" cb="0"/><line nr="636" mi="0" ci="3" mb="0" cb="0"/><line nr="637" mi="0" ci="1" mb="0" cb="0"/><line nr="639" mi="0" ci="5" mb="1" cb="1"/><line nr="640" mi="0" ci="3" mb="0" cb="0"/><line nr="642" mi="4" ci="0" mb="0" cb="0"/><line nr="644" mi="0" ci="1" mb="0" cb="0"/><line nr="647" mi="0" ci="7" mb="0" cb="2"/><line nr="648" mi="0" ci="7" mb="0" cb="0"/><line nr="649" mi="0" ci="11" mb="0" cb="2"/><line nr="650" mi="0" ci="3" mb="0" cb="2"/><line nr="651" mi="0" ci="5" mb="0" cb="0"/><line nr="652" mi="0" ci="9" mb="0" cb="0"/><line nr="653" mi="0" ci="1" mb="0" cb="0"/><line nr="654" mi="0" ci="5" mb="0" cb="0"/><line nr="655" mi="0" ci="3" mb="0" cb="0"/><line nr="658" mi="0" ci="11" mb="0" cb="2"/><line nr="659" mi="0" ci="3" mb="0" cb="0"/><line nr="660" mi="0" ci="3" mb="0" cb="0"/><line nr="661" mi="0" ci="3" mb="0" cb="0"/><line nr="662" mi="0" ci="6" mb="0" cb="0"/><line nr="663" mi="0" ci="3" mb="0" cb="0"/><line nr="664" mi="0" ci="3" mb="0" cb="0"/><line nr="665" mi="0" ci="1" mb="0" cb="0"/><line nr="668" mi="0" ci="3" mb="0" cb="0"/><line nr="671" mi="0" ci="7" mb="0" cb="2"/><line nr="672" mi="0" ci="4" mb="0" cb="2"/><line nr="673" mi="0" ci="1" mb="0" cb="0"/><line nr="674" mi="0" ci="5" mb="0" cb="0"/><line nr="675" mi="0" ci="6" mb="0" cb="0"/><line nr="676" mi="0" ci="3" mb="0" cb="2"/><line nr="677" mi="0" ci="15" mb="0" cb="0"/><line nr="679" mi="0" ci="8" mb="0" cb="0"/><line nr="689" mi="0" ci="4" mb="0" cb="0"/><line nr="691" mi="14" ci="1" mb="2" cb="0"/><line nr="692" mi="0" ci="6" mb="0" cb="0"/><line nr="694" mi="20" ci="1" mb="8" cb="0"/><line nr="696" mi="0" ci="9" mb="0" cb="0"/><line nr="697" mi="0" ci="2" mb="0" cb="0"/><line nr="698" mi="0" ci="2" mb="0" cb="0"/><line nr="702" mi="0" ci="11" mb="0" cb="2"/><line nr="703" mi="0" ci="6" mb="0" cb="2"/><line nr="704" mi="6" ci="1" mb="2" cb="0"/><line nr="705" mi="0" ci="2" mb="0" cb="0"/><line nr="707" mi="0" ci="6" mb="0" cb="2"/><line nr="708" mi="6" ci="1" mb="2" cb="0"/><line nr="709" mi="0" ci="2" mb="0" cb="0"/><line nr="711" mi="0" ci="3" mb="0" cb="0"/><line nr="712" mi="0" ci="1" mb="0" cb="0"/><line nr="713" mi="0" ci="10" mb="0" cb="0"/><line nr="714" mi="0" ci="4" mb="0" cb="0"/><line nr="717" mi="0" ci="15" mb="0" cb="2"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="4" mb="0" cb="0"/><line nr="720" mi="0" ci="9" mb="0" cb="2"/><line nr="721" mi="0" ci="4" mb="0" cb="0"/><line nr="722" mi="0" ci="1" mb="0" cb="0"/><line nr="723" mi="0" ci="11" mb="0" cb="2"/><line nr="724" mi="0" ci="2" mb="0" cb="0"/><line nr="726" mi="0" ci="3" mb="0" cb="0"/><line nr="727" mi="0" ci="3" mb="0" cb="0"/><line nr="728" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="4" mb="0" cb="0"/><line nr="730" mi="7" ci="1" mb="2" cb="0"/><line nr="731" mi="0" ci="3" mb="0" cb="2"/><line nr="732" mi="0" ci="14" mb="0" cb="0"/><line nr="733" mi="0" ci="3" mb="0" cb="2"/><line nr="734" mi="0" ci="1" mb="0" cb="0"/><line nr="735" mi="0" ci="5" mb="0" cb="0"/><line nr="738" mi="0" ci="3" mb="0" cb="0"/><line nr="739" mi="0" ci="3" mb="0" cb="0"/><line nr="740" mi="0" ci="6" mb="0" cb="0"/><line nr="742" mi="0" ci="4" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><line nr="746" mi="0" ci="2" mb="0" cb="0"/><line nr="747" mi="0" ci="5" mb="0" cb="0"/><line nr="748" mi="0" ci="3" mb="0" cb="2"/><line nr="749" mi="0" ci="1" mb="0" cb="0"/><line nr="750" mi="0" ci="3" mb="0" cb="0"/><line nr="751" mi="0" ci="3" mb="0" cb="0"/><line nr="752" mi="0" ci="3" mb="0" cb="0"/><line nr="753" mi="0" ci="4" mb="0" cb="0"/><line nr="754" mi="0" ci="4" mb="0" cb="0"/><line nr="755" mi="7" ci="1" mb="2" cb="0"/><line nr="756" mi="0" ci="6" mb="0" cb="0"/><line nr="757" mi="0" ci="2" mb="0" cb="2"/><line nr="758" mi="0" ci="6" mb="0" cb="0"/><line nr="759" mi="0" ci="1" mb="0" cb="0"/><line nr="762" mi="0" ci="2" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="764" mi="0" ci="6" mb="0" cb="0"/><line nr="765" mi="0" ci="7" mb="0" cb="0"/><line nr="766" mi="0" ci="7" mb="0" cb="0"/><line nr="767" mi="0" ci="7" mb="0" cb="0"/><line nr="768" mi="0" ci="7" mb="0" cb="0"/><line nr="769" mi="0" ci="6" mb="0" cb="0"/><line nr="770" mi="0" ci="6" mb="0" cb="0"/><line nr="771" mi="0" ci="6" mb="0" cb="0"/><line nr="772" mi="0" ci="6" mb="0" cb="0"/><line nr="773" mi="0" ci="6" mb="0" cb="0"/><line nr="774" mi="0" ci="3" mb="0" cb="2"/><line nr="775" mi="0" ci="1" mb="0" cb="0"/><line nr="776" mi="0" ci="2" mb="0" cb="0"/><line nr="777" mi="0" ci="1" mb="0" cb="0"/><line nr="778" mi="0" ci="1" mb="0" cb="0"/><line nr="781" mi="0" ci="4" mb="0" cb="0"/><line nr="782" mi="0" ci="10" mb="0" cb="0"/><line nr="783" mi="0" ci="8" mb="0" cb="0"/><line nr="784" mi="0" ci="25" mb="0" cb="2"/><line nr="786" mi="0" ci="2" mb="0" cb="0"/><line nr="787" mi="0" ci="7" mb="0" cb="2"/><line nr="788" mi="7" ci="1" mb="2" cb="0"/><line nr="789" mi="0" ci="4" mb="0" cb="0"/><line nr="790" mi="0" ci="3" mb="0" cb="2"/><line nr="791" mi="0" ci="10" mb="0" cb="0"/><line nr="792" mi="0" ci="5" mb="0" cb="0"/><line nr="793" mi="0" ci="10" mb="0" cb="0"/><line nr="795" mi="0" ci="11" mb="0" cb="0"/><line nr="796" mi="10" ci="1" mb="2" cb="0"/><line nr="797" mi="10" ci="1" mb="2" cb="0"/><line nr="799" mi="0" ci="4" mb="0" cb="2"/><line nr="800" mi="0" ci="1" mb="0" cb="0"/><line nr="802" mi="0" ci="8" mb="0" cb="0"/><line nr="803" mi="7" ci="1" mb="2" cb="0"/><line nr="804" mi="0" ci="6" mb="0" cb="0"/><line nr="805" mi="0" ci="4" mb="0" cb="0"/><line nr="808" mi="0" ci="3" mb="0" cb="0"/><line nr="809" mi="0" ci="5" mb="0" cb="0"/><line nr="810" mi="0" ci="5" mb="0" cb="0"/><line nr="813" mi="0" ci="5" mb="0" cb="0"/><line nr="814" mi="0" ci="10" mb="0" cb="0"/><line nr="815" mi="0" ci="11" mb="0" cb="0"/><line nr="816" mi="0" ci="1" mb="0" cb="0"/><line nr="819" mi="0" ci="4" mb="0" cb="2"/><line nr="820" mi="0" ci="1" mb="0" cb="0"/><line nr="822" mi="0" ci="5" mb="0" cb="0"/><line nr="823" mi="0" ci="6" mb="0" cb="0"/><line nr="824" mi="0" ci="10" mb="0" cb="0"/><line nr="825" mi="0" ci="6" mb="0" cb="0"/><line nr="826" mi="0" ci="3" mb="0" cb="0"/><line nr="827" mi="0" ci="3" mb="0" cb="0"/><line nr="831" mi="0" ci="4" mb="0" cb="2"/><line nr="832" mi="0" ci="3" mb="0" cb="0"/><line nr="833" mi="0" ci="4" mb="0" cb="0"/><line nr="835" mi="8" ci="1" mb="2" cb="0"/><line nr="836" mi="0" ci="3" mb="0" cb="0"/><line nr="837" mi="0" ci="3" mb="0" cb="0"/><line nr="840" mi="7" ci="1" mb="2" cb="0"/><line nr="841" mi="7" ci="1" mb="2" cb="0"/><line nr="842" mi="7" ci="1" mb="2" cb="0"/><line nr="843" mi="8" ci="1" mb="2" cb="0"/><line nr="845" mi="0" ci="10" mb="0" cb="0"/><line nr="846" mi="0" ci="4" mb="0" cb="0"/><line nr="847" mi="0" ci="4" mb="0" cb="0"/><line nr="848" mi="0" ci="5" mb="0" cb="0"/><line nr="849" mi="0" ci="10" mb="0" cb="0"/><line nr="851" mi="13" ci="1" mb="2" cb="0"/><line nr="852" mi="13" ci="1" mb="2" cb="0"/><line nr="853" mi="13" ci="1" mb="2" cb="0"/><line nr="854" mi="13" ci="1" mb="2" cb="0"/><line nr="856" mi="9" ci="1" mb="2" cb="0"/><line nr="857" mi="9" ci="1" mb="2" cb="0"/><line nr="859" mi="0" ci="11" mb="0" cb="0"/><line nr="860" mi="0" ci="7" mb="0" cb="0"/><line nr="861" mi="0" ci="4" mb="0" cb="2"/><line nr="862" mi="0" ci="1" mb="0" cb="0"/><line nr="863" mi="0" ci="3" mb="0" cb="0"/><line nr="865" mi="0" ci="1" mb="0" cb="0"/><line nr="868" mi="0" ci="6" mb="0" cb="0"/><line nr="872" mi="0" ci="10" mb="0" cb="2"/><line nr="876" mi="10" ci="0" mb="2" cb="0"/><line nr="880" mi="5" ci="11" mb="1" cb="3"/><line nr="884" mi="0" ci="14" mb="0" cb="2"/><line nr="888" mi="7" ci="1" mb="2" cb="0"/><line nr="889" mi="0" ci="15" mb="0" cb="2"/><line nr="893" mi="0" ci="13" mb="0" cb="0"/><line nr="894" mi="0" ci="10" mb="0" cb="0"/><line nr="895" mi="0" ci="6" mb="0" cb="0"/><line nr="896" mi="0" ci="3" mb="0" cb="0"/><line nr="897" mi="0" ci="9" mb="0" cb="0"/><line nr="901" mi="0" ci="7" mb="0" cb="2"/><line nr="906" mi="0" ci="2" mb="0" cb="0"/><line nr="907" mi="0" ci="3" mb="0" cb="0"/><line nr="908" mi="0" ci="4" mb="0" cb="0"/><line nr="910" mi="0" ci="5" mb="0" cb="0"/><line nr="911" mi="0" ci="9" mb="0" cb="4"/><line nr="912" mi="0" ci="10" mb="0" cb="2"/><line nr="913" mi="0" ci="9" mb="0" cb="0"/><line nr="915" mi="0" ci="3" mb="0" cb="0"/><line nr="918" mi="0" ci="2" mb="0" cb="0"/><line nr="924" mi="0" ci="13" mb="0" cb="0"/><line nr="926" mi="0" ci="10" mb="0" cb="0"/><line nr="927" mi="0" ci="6" mb="0" cb="0"/><line nr="928" mi="0" ci="3" mb="0" cb="0"/><line nr="932" mi="0" ci="12" mb="0" cb="2"/><line nr="933" mi="0" ci="5" mb="0" cb="0"/><line nr="934" mi="0" ci="6" mb="0" cb="0"/><line nr="936" mi="0" ci="1" mb="0" cb="0"/><line nr="940" mi="0" ci="7" mb="0" cb="2"/><line nr="945" mi="0" ci="2" mb="0" cb="0"/><line nr="946" mi="0" ci="3" mb="0" cb="0"/><line nr="947" mi="0" ci="4" mb="0" cb="0"/><line nr="950" mi="0" ci="10" mb="0" cb="2"/><line nr="951" mi="0" ci="3" mb="0" cb="0"/><line nr="952" mi="0" ci="1" mb="0" cb="0"/><line nr="954" mi="0" ci="12" mb="0" cb="2"/><line nr="955" mi="0" ci="5" mb="0" cb="0"/><line nr="956" mi="0" ci="5" mb="0" cb="0"/><line nr="957" mi="0" ci="6" mb="0" cb="2"/><line nr="958" mi="0" ci="1" mb="0" cb="0"/><line nr="963" mi="0" ci="2" mb="0" cb="0"/><line nr="969" mi="0" ci="5" mb="0" cb="0"/><line nr="970" mi="0" ci="7" mb="0" cb="2"/><line nr="971" mi="0" ci="7" mb="0" cb="0"/><line nr="974" mi="0" ci="2" mb="0" cb="2"/><line nr="976" mi="0" ci="6" mb="0" cb="0"/><line nr="977" mi="0" ci="10" mb="0" cb="4"/><line nr="979" mi="0" ci="17" mb="0" cb="2"/><line nr="980" mi="0" ci="2" mb="0" cb="0"/><line nr="984" mi="7" ci="1" mb="2" cb="0"/><line nr="985" mi="0" ci="3" mb="0" cb="0"/><line nr="986" mi="0" ci="7" mb="0" cb="4"/><line nr="987" mi="0" ci="20" mb="0" cb="2"/><line nr="988" mi="0" ci="2" mb="0" cb="0"/><line nr="992" mi="0" ci="6" mb="0" cb="0"/><line nr="993" mi="8" ci="1" mb="2" cb="0"/><line nr="994" mi="0" ci="9" mb="0" cb="0"/><line nr="998" mi="0" ci="7" mb="0" cb="0"/><line nr="999" mi="0" ci="9" mb="0" cb="2"/><line nr="1000" mi="0" ci="3" mb="0" cb="0"/><line nr="1001" mi="0" ci="3" mb="0" cb="0"/><line nr="1002" mi="0" ci="4" mb="0" cb="2"/><line nr="1003" mi="0" ci="1" mb="0" cb="0"/><line nr="1004" mi="0" ci="12" mb="0" cb="0"/><line nr="1005" mi="0" ci="13" mb="0" cb="4"/><line nr="1006" mi="0" ci="11" mb="0" cb="0"/><line nr="1007" mi="0" ci="6" mb="0" cb="2"/><line nr="1008" mi="0" ci="1" mb="0" cb="0"/><line nr="1009" mi="10" ci="1" mb="2" cb="0"/><line nr="1011" mi="0" ci="5" mb="0" cb="0"/><line nr="1012" mi="0" ci="4" mb="0" cb="2"/><line nr="1013" mi="0" ci="3" mb="0" cb="2"/><line nr="1014" mi="0" ci="7" mb="0" cb="0"/><line nr="1016" mi="0" ci="6" mb="0" cb="0"/><line nr="1019" mi="0" ci="1" mb="0" cb="0"/><line nr="1020" mi="0" ci="1" mb="0" cb="0"/><line nr="1023" mi="8" ci="1" mb="2" cb="0"/><line nr="1024" mi="0" ci="5" mb="0" cb="0"/><line nr="1025" mi="0" ci="7" mb="0" cb="0"/><line nr="1026" mi="0" ci="9" mb="0" cb="2"/><line nr="1027" mi="0" ci="3" mb="0" cb="0"/><line nr="1028" mi="0" ci="3" mb="0" cb="0"/><line nr="1029" mi="0" ci="4" mb="0" cb="2"/><line nr="1030" mi="0" ci="1" mb="0" cb="0"/><line nr="1031" mi="0" ci="5" mb="0" cb="0"/><line nr="1032" mi="0" ci="3" mb="0" cb="2"/><line nr="1033" mi="0" ci="1" mb="0" cb="0"/><line nr="1034" mi="0" ci="7" mb="0" cb="0"/><line nr="1035" mi="0" ci="9" mb="0" cb="0"/><line nr="1037" mi="8" ci="1" mb="2" cb="0"/><line nr="1038" mi="0" ci="4" mb="0" cb="0"/><line nr="1039" mi="0" ci="1" mb="0" cb="0"/><line nr="1040" mi="0" ci="1" mb="0" cb="0"/><line nr="1045" mi="0" ci="2" mb="0" cb="2"/><line nr="1046" mi="0" ci="2" mb="0" cb="0"/><line nr="1047" mi="0" ci="2" mb="0" cb="0"/><line nr="1048" mi="0" ci="2" mb="0" cb="0"/><line nr="1049" mi="0" ci="7" mb="0" cb="0"/><line nr="1051" mi="0" ci="6" mb="0" cb="0"/><line nr="1052" mi="0" ci="7" mb="0" cb="0"/><line nr="1053" mi="0" ci="3" mb="0" cb="0"/><line nr="1054" mi="0" ci="3" mb="0" cb="0"/><line nr="1055" mi="0" ci="3" mb="0" cb="0"/><line nr="1056" mi="0" ci="4" mb="0" cb="0"/><line nr="1057" mi="0" ci="3" mb="0" cb="0"/><line nr="1058" mi="0" ci="3" mb="0" cb="0"/><line nr="1059" mi="0" ci="3" mb="0" cb="0"/><line nr="1060" mi="0" ci="3" mb="0" cb="0"/><line nr="1061" mi="0" ci="1" mb="0" cb="0"/><line nr="1064" mi="0" ci="8" mb="0" cb="0"/><line nr="1065" mi="0" ci="11" mb="0" cb="0"/><line nr="1066" mi="0" ci="8" mb="1" cb="3"/><line nr="1067" mi="2" ci="0" mb="0" cb="0"/><line nr="1068" mi="0" ci="9" mb="0" cb="2"/><line nr="1069" mi="0" ci="4" mb="0" cb="0"/><line nr="1070" mi="0" ci="2" mb="0" cb="2"/><line nr="1071" mi="0" ci="1" mb="0" cb="0"/><line nr="1072" mi="0" ci="4" mb="0" cb="2"/><line nr="1073" mi="0" ci="2" mb="0" cb="0"/><line nr="1074" mi="0" ci="3" mb="0" cb="0"/><line nr="1075" mi="0" ci="16" mb="0" cb="2"/><counter type="INSTRUCTION" missed="493" covered="2420"/><counter type="BRANCH" missed="92" covered="212"/><counter type="LINE" missed="28" covered="500"/><counter type="COMPLEXITY" missed="60" covered="167"/><counter type="METHOD" missed="10" covered="65"/><counter type="CLASS" missed="0" covered="12"/></sourcefile><sourcefile name="EulerianTourAlgo.java"><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="LowestCommonAncestorDynamicGabowLongs.java"><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="4"/><line nr="86" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="1" cb="3"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="9" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="1" cb="1"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="7" ci="0" mb="2" cb="0"/><line nr="124" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="2" ci="0" mb="2" cb="0"/><line nr="130" mi="9" ci="0" mb="0" cb="0"/><line nr="132" mi="10" ci="0" mb="0" cb="0"/><line nr="134" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="2"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="1" cb="1"/><line nr="147" mi="4" ci="0" mb="2" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="153" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="9" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="15" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="2" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="2" cb="0"/><line nr="167" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="9" ci="1" mb="2" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="9" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="1" cb="1"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="2"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="1" cb="1"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="2"/><line nr="190" mi="0" ci="4" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="9" ci="1" mb="2" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="9" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="0" cb="0"/><line nr="228" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="268" mi="11" ci="0" mb="2" cb="0"/><line nr="272" mi="8" ci="1" mb="2" cb="0"/><line nr="273" mi="0" ci="10" mb="0" cb="0"/><line nr="274" mi="0" ci="6" mb="0" cb="2"/><line nr="275" mi="0" ci="13" mb="0" cb="0"/><line nr="276" mi="0" ci="6" mb="0" cb="0"/><line nr="277" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="8" mb="0" cb="2"/><line nr="289" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="8" ci="1" mb="2" cb="0"/><line nr="305" mi="0" ci="10" mb="0" cb="0"/><line nr="306" mi="0" ci="6" mb="0" cb="2"/><line nr="307" mi="0" ci="13" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="0" cb="0"/><line nr="309" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="2" ci="6" mb="1" cb="1"/><line nr="321" mi="12" ci="1" mb="4" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="182" covered="416"/><counter type="BRANCH" missed="33" covered="37"/><counter type="LINE" missed="25" covered="95"/><counter type="COMPLEXITY" missed="22" covered="38"/><counter type="METHOD" missed="2" covered="23"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ColoringRecursiveLargestFirst.java"><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="2"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="2"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="2"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="2"/><line nr="104" mi="0" ci="13" mb="0" cb="6"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="13" mb="0" cb="6"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="11" mb="0" cb="2"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="233"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="59"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShortestPathSingleSourceDial.java"><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="2"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="2"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="2"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="2"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="144" mi="0" ci="6" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="2"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="7" ci="1" mb="2" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="2"/><line nr="160" mi="0" ci="8" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="167" mi="0" ci="9" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="0" cb="2"/><line nr="170" mi="0" ci="8" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="0" ci="10" mb="0" cb="2"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="302"/><counter type="BRANCH" missed="3" covered="27"/><counter type="LINE" missed="1" covered="72"/><counter type="COMPLEXITY" missed="2" covered="23"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SimplePathsFinders.java"><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="1" cb="1"/><line nr="31" mi="8" ci="0" mb="0" cb="0"/><line nr="32" mi="7" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="30"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="DfsIterImpl.java"><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="10" ci="1" mb="2" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="1" cb="1"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="2"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="2"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="2"/><line nr="100" mi="8" ci="1" mb="2" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="5" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="245"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="60"/><counter type="COMPLEXITY" missed="3" covered="17"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="ShortestPathAllPairs.java"><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="1" cb="1"/><line nr="213" mi="9" ci="0" mb="4" cb="0"/><line nr="215" mi="4" ci="0" mb="0" cb="0"/><line nr="217" mi="4" ci="0" mb="0" cb="0"/><line nr="219" mi="4" ci="0" mb="0" cb="0"/><line nr="221" mi="7" ci="0" mb="0" cb="0"/><line nr="224" mi="0" ci="4" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="1" cb="1"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="0" ci="14" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="8" ci="0" mb="6" cb="0"/><line nr="235" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="0" ci="8" mb="3" cb="3"/><line nr="246" mi="7" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="7" mb="0" cb="0"/><line nr="256" mi="3" ci="0" mb="0" cb="0"/><line nr="257" mi="2" ci="0" mb="0" cb="0"/><line nr="262" mi="8" ci="0" mb="2" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="1" ci="0" mb="0" cb="0"/><line nr="267" mi="6" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="89" covered="69"/><counter type="BRANCH" missed="17" covered="5"/><counter type="LINE" missed="18" covered="11"/><counter type="COMPLEXITY" missed="16" covered="8"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="1" covered="4"/></sourcefile><sourcefile name="MemoryReuse.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="11" mb="0" cb="2"/><line nr="36" mi="4" ci="0" mb="2" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="2" cb="0"/><line nr="42" mi="6" ci="0" mb="2" cb="0"/><line nr="43" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="11" ci="0" mb="2" cb="0"/><line nr="52" mi="4" ci="0" mb="2" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="6" ci="0" mb="2" cb="0"/><line nr="59" mi="12" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="11" ci="0" mb="2" cb="0"/><line nr="68" mi="0" ci="12" mb="0" cb="2"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="133" covered="66"/><counter type="BRANCH" missed="16" covered="6"/><counter type="LINE" missed="21" covered="12"/><counter type="COMPLEXITY" missed="15" covered="9"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MaximalCliquesBronKerboschPivot.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="15" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="2"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="14" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="10" ci="1" mb="4" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="2"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="11" mb="0" cb="2"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="2"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="4"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="2"/><line nr="122" mi="0" ci="11" mb="1" cb="1"/><line nr="123" mi="0" ci="6" mb="0" cb="2"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="2" mb="1" cb="1"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="2"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="7" ci="1" mb="2" cb="0"/><line nr="156" mi="7" ci="1" mb="2" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="20" ci="1" mb="4" cb="0"/><line nr="168" mi="14" ci="1" mb="0" cb="0"/><line nr="169" mi="7" ci="0" mb="2" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="173" mi="0" ci="7" mb="0" cb="2"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="2"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="12" mb="0" cb="2"/><line nr="189" mi="0" ci="12" mb="0" cb="2"/><line nr="190" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="2"/><line nr="192" mi="0" ci="6" mb="0" cb="2"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="2"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="505"/><counter type="BRANCH" missed="16" covered="42"/><counter type="LINE" missed="5" covered="105"/><counter type="COMPLEXITY" missed="11" covered="31"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ShortestPathSTs.java"><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="8" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="38"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="ShortestPathSingleSourceDag.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="2"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="1" cb="1"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="2" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="2"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="2"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="86" covered="102"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="20" covered="25"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ColoringDSatur.java"><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="2"/><line nr="93" mi="0" ci="8" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="2"/><line nr="99" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="2"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="2"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="225"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="2" covered="48"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LowestCommonAncestorStaticRMQ.java"><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="7" mb="0" cb="2"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="2"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="211"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ShortestPathSingleSourceCardinality.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="2"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ColoringAlgo.java"><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="1" cb="1"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="7" ci="0" mb="2" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="1" ci="3" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="2"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="1" cb="1"/><line nr="136" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="16" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="1" cb="1"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="2"/><line nr="146" mi="0" ci="11" mb="1" cb="1"/><line nr="147" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="3" ci="0" mb="2" cb="0"/><line nr="180" mi="9" ci="0" mb="4" cb="0"/><line nr="182" mi="14" ci="0" mb="2" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="188" mi="7" ci="0" mb="0" cb="0"/><line nr="191" mi="4" ci="0" mb="0" cb="0"/><line nr="196" mi="8" ci="0" mb="3" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="201" mi="12" ci="0" mb="2" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="204" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="2" ci="0" mb="0" cb="0"/><line nr="242" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="136"/><counter type="BRANCH" missed="20" covered="15"/><counter type="LINE" missed="26" covered="27"/><counter type="COMPLEXITY" missed="20" covered="6"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="2" covered="1"/></sourcefile><sourcefile name="FlowNetwork.java"><line nr="137" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="0" ci="9" mb="0" cb="2"/><line nr="151" mi="0" ci="11" mb="0" cb="2"/><line nr="152" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="11" mb="0" cb="2"/><line nr="154" mi="0" ci="7" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="9" ci="0" mb="2" cb="0"/><line nr="158" mi="11" ci="0" mb="2" cb="0"/><line nr="159" mi="6" ci="0" mb="2" cb="0"/><line nr="160" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="2" cb="0"/><line nr="162" mi="6" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="3" ci="0" mb="2" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="185" mi="9" ci="0" mb="2" cb="0"/><line nr="186" mi="12" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="9" ci="0" mb="2" cb="0"/><line nr="189" mi="11" ci="0" mb="0" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="99" covered="80"/><counter type="BRANCH" missed="15" covered="7"/><counter type="LINE" missed="17" covered="14"/><counter type="COMPLEXITY" missed="9" covered="7"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MatchingCardinalityGabow1976.java"><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="5" mb="0" cb="2"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="8" mb="0" cb="2"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="2"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="2"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="11" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="2"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="25" mb="0" cb="2"/><line nr="154" mi="0" ci="9" mb="0" cb="2"/><line nr="155" mi="0" ci="3" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="160" mi="0" ci="7" mb="0" cb="0"/><line nr="161" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="8" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="12" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="2"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="11" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="2"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="2"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="18" mb="0" cb="4"/><line nr="192" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="12" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="6" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="2"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="2"/><line nr="210" mi="0" ci="7" mb="0" cb="0"/><line nr="211" mi="0" ci="7" mb="0" cb="0"/><line nr="212" mi="0" ci="7" mb="0" cb="0"/><line nr="213" mi="0" ci="16" mb="0" cb="0"/><line nr="215" mi="0" ci="8" mb="0" cb="0"/><line nr="216" mi="0" ci="13" mb="0" cb="0"/><line nr="217" mi="0" ci="7" mb="0" cb="0"/><line nr="218" mi="0" ci="16" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="580"/><counter type="BRANCH" missed="0" covered="50"/><counter type="LINE" missed="0" covered="116"/><counter type="COMPLEXITY" missed="0" covered="28"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TSPMetric.java"/><sourcefile name="LowestCommonAncestorDynamic.java"><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="1" cb="1"/><line nr="150" mi="9" ci="0" mb="4" cb="0"/><line nr="152" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="8" ci="0" mb="2" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="17"/><counter type="BRANCH" missed="7" covered="1"/><counter type="LINE" missed="11" covered="4"/><counter type="COMPLEXITY" missed="7" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="CoresAlgoImpl.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="4"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="8" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="7" ci="1" mb="2" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="2"/><line nr="82" mi="0" ci="9" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="2"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="94" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="7" mb="0" cb="2"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="9" ci="1" mb="2" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="4"/><line nr="121" mi="0" ci="8" mb="0" cb="2"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="5" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="2"/><line nr="128" mi="0" ci="8" mb="0" cb="2"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="2"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="7" ci="1" mb="2" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="2"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="8" mb="0" cb="2"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="2"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="8" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="0" cb="2"/><line nr="185" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="2" mb="1" cb="1"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="192" mi="0" ci="7" mb="0" cb="2"/><line nr="193" mi="0" ci="11" mb="0" cb="0"/><line nr="194" mi="0" ci="9" mb="0" cb="2"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="2"/><line nr="201" mi="0" ci="16" mb="0" cb="0"/><line nr="202" mi="12" ci="1" mb="2" cb="0"/><line nr="203" mi="0" ci="6" mb="0" cb="2"/><line nr="204" mi="0" ci="10" mb="0" cb="0"/><line nr="205" mi="0" ci="5" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="4" mb="0" cb="0"/><line nr="215" mi="0" ci="7" mb="0" cb="2"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="32" mb="0" cb="0"/><line nr="220" mi="19" ci="0" mb="6" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="5" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="7" mb="0" cb="2"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="37" mb="0" cb="0"/><line nr="240" mi="19" ci="0" mb="6" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="3" mb="0" cb="2"/><line nr="251" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="4" mb="0" cb="0"/><line nr="253" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="7" mb="0" cb="2"/><line nr="256" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="32" mb="0" cb="0"/><line nr="260" mi="19" ci="0" mb="6" cb="0"/><line nr="265" mi="0" ci="5" mb="0" cb="0"/><line nr="272" mi="0" ci="3" mb="1" cb="1"/><line nr="273" mi="6" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="294" mi="0" ci="8" mb="0" cb="0"/><line nr="299" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="8" mb="0" cb="0"/><line nr="309" mi="0" ci="8" mb="0" cb="0"/><line nr="314" mi="0" ci="8" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="8" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="340" mi="0" ci="8" mb="0" cb="0"/><line nr="345" mi="0" ci="8" mb="0" cb="0"/><line nr="350" mi="0" ci="8" mb="0" cb="0"/><line nr="356" mi="7" ci="1" mb="2" cb="0"/><line nr="357" mi="0" ci="3" mb="0" cb="2"/><line nr="358" mi="0" ci="7" mb="0" cb="0"/><line nr="360" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="848"/><counter type="BRANCH" missed="30" covered="74"/><counter type="LINE" missed="5" covered="164"/><counter type="COMPLEXITY" missed="19" covered="65"/><counter type="METHOD" missed="3" covered="29"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="KShortestPathsST.java"><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="TopologicalOrderAlgoImpl.java"><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="2"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="2"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="1" cb="1"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="1" cb="1"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="2"/><line nr="85" mi="0" ci="8" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="133"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="VertexBiPartition.java"><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="8" ci="0" mb="2" cb="0"/><line nr="63" mi="8" ci="0" mb="2" cb="0"/><line nr="75" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="5"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="1"/><counter type="COMPLEXITY" missed="9" covered="1"/><counter type="METHOD" missed="7" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ShortestPathAllPairsFloydWarshall.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="2"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="11" mb="0" cb="2"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="2"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="2"/><line nr="63" mi="0" ci="4" mb="1" cb="1"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="2"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="79" mi="0" ci="9" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="2"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="110" mi="0" ci="10" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="0" cb="2"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="124" mi="0" ci="7" mb="0" cb="2"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="5" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="2"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="2"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="7" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="4"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="0" cb="2"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="373"/><counter type="BRANCH" missed="2" covered="54"/><counter type="LINE" missed="4" covered="74"/><counter type="COMPLEXITY" missed="3" covered="31"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VertexCoverBarYehuda.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="2"/><line nr="46" mi="0" ci="16" mb="0" cb="4"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumDirectedSpanningTree.java"><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="KEdgeConnectedComponentsAlgo.java"><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="EdgeCoverWeighted.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="1" cb="1"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="7" mb="0" cb="2"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="2"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="13" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="2"/><line nr="50" mi="0" ci="13" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="1" cb="1"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="2"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="2"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="5" mb="1" cb="1"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="17" mb="0" cb="2"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="2" cb="0"/><line nr="84" mi="8" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="88" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="2" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="7" ci="0" mb="2" cb="0"/><line nr="96" mi="5" ci="0" mb="2" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="22" ci="0" mb="2" cb="0"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="7" mb="0" cb="2"/><line nr="106" mi="0" ci="8" mb="0" cb="2"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="2"/><line nr="109" mi="0" ci="6" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="103" covered="265"/><counter type="BRANCH" missed="15" covered="27"/><counter type="LINE" missed="18" covered="49"/><counter type="COMPLEXITY" missed="10" covered="15"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BiConnectedComponentsAlgo.java"><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="1" covered="2"/></sourcefile><sourcefile name="ShortestPathSingleSourceUtils.java"><line nr="35" mi="3" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="132" mi="7" ci="1" mb="2" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="2"/><line nr="134" mi="0" ci="7" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="9" ci="0" mb="7" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="158" mi="4" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="7" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="184" mi="0" ci="3" mb="1" cb="1"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="5" ci="3" mb="3" cb="1"/><line nr="188" mi="14" ci="0" mb="0" cb="0"/><line nr="189" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="7" ci="0" mb="0" cb="0"/><line nr="195" mi="8" ci="0" mb="0" cb="0"/><line nr="196" mi="7" ci="0" mb="0" cb="0"/><line nr="197" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="3" ci="0" mb="2" cb="0"/><line nr="199" mi="10" ci="0" mb="0" cb="0"/><line nr="201" mi="7" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="231" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="243" mi="8" ci="0" mb="3" cb="0"/><line nr="245" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="1" ci="0" mb="0" cb="0"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="1" ci="0" mb="0" cb="0"/><line nr="251" mi="6" ci="0" mb="0" cb="0"/><line nr="253" mi="2" ci="0" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="4" mb="0" cb="0"/><line nr="271" mi="0" ci="4" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="5" mb="0" cb="0"/><line nr="281" mi="0" ci="7" mb="0" cb="2"/><line nr="282" mi="0" ci="2" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="2"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="286" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="2"/><line nr="288" mi="8" ci="1" mb="2" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="5" mb="0" cb="0"/><line nr="297" mi="0" ci="3" mb="0" cb="2"/><line nr="298" mi="8" ci="1" mb="2" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="6" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="7" mb="0" cb="0"/><line nr="306" mi="0" ci="10" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="332" mi="0" ci="3" mb="0" cb="0"/><line nr="333" mi="0" ci="3" mb="0" cb="0"/><line nr="334" mi="0" ci="4" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="4" mb="0" cb="0"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="4" mb="0" cb="0"/><line nr="339" mi="0" ci="1" mb="0" cb="0"/><line nr="341" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="3" mb="0" cb="0"/><line nr="343" mi="0" ci="3" mb="0" cb="0"/><line nr="344" mi="0" ci="3" mb="0" cb="0"/><line nr="345" mi="0" ci="3" mb="0" cb="0"/><line nr="346" mi="0" ci="1" mb="0" cb="0"/><line nr="350" mi="0" ci="5" mb="0" cb="0"/><line nr="351" mi="0" ci="8" mb="0" cb="2"/><line nr="356" mi="0" ci="6" mb="0" cb="2"/><line nr="357" mi="0" ci="2" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="2"/><line nr="362" mi="8" ci="1" mb="2" cb="0"/><line nr="365" mi="0" ci="4" mb="0" cb="0"/><line nr="366" mi="0" ci="6" mb="0" cb="0"/><line nr="367" mi="0" ci="1" mb="0" cb="0"/><line nr="368" mi="0" ci="7" mb="0" cb="0"/><line nr="369" mi="0" ci="10" mb="0" cb="0"/><line nr="374" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="5" ci="0" mb="0" cb="0"/><line nr="384" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="209" covered="445"/><counter type="BRANCH" missed="26" covered="28"/><counter type="LINE" missed="34" covered="118"/><counter type="COMPLEXITY" missed="28" covered="42"/><counter type="METHOD" missed="10" covered="30"/><counter type="CLASS" missed="1" covered="7"/></sourcefile><sourcefile name="LowestCommonAncestorDynamicGabowSimple.java"><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="1" cb="1"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="6" ci="1" mb="2" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="7" ci="1" mb="2" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="2"/><line nr="112" mi="0" ci="9" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="2"/><line nr="119" mi="0" ci="8" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="2"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="2"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="0" ci="6" mb="0" cb="0"/><line nr="129" mi="0" ci="6" mb="0" cb="0"/><line nr="130" mi="14" ci="1" mb="4" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="2"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="12" mb="0" cb="2"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="1" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="149" mi="0" ci="15" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="2"/><line nr="153" mi="0" ci="5" mb="0" cb="2"/><line nr="154" mi="0" ci="13" mb="1" cb="1"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="8" mb="0" cb="2"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="7" ci="1" mb="2" cb="0"/><line nr="177" mi="0" ci="2" mb="0" cb="0"/><line nr="181" mi="12" ci="1" mb="4" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="1" cb="1"/><line nr="187" mi="9" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="2"/><line nr="195" mi="0" ci="6" mb="0" cb="2"/><line nr="196" mi="0" ci="6" mb="0" cb="2"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="7" mb="0" cb="2"/><line nr="202" mi="0" ci="15" mb="0" cb="2"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="2"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="210" mi="0" ci="12" mb="1" cb="3"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="214" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="8" mb="0" cb="0"/><line nr="220" mi="11" ci="1" mb="2" cb="0"/><line nr="221" mi="15" ci="1" mb="4" cb="0"/><line nr="222" mi="15" ci="1" mb="4" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="3" mb="0" cb="0"/><line nr="226" mi="0" ci="1" mb="0" cb="0"/><line nr="229" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="3" mb="0" cb="2"/><line nr="231" mi="0" ci="9" mb="0" cb="0"/><line nr="232" mi="0" ci="1" mb="0" cb="0"/><line nr="234" mi="0" ci="4" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="12" mb="0" cb="0"/><line nr="239" mi="8" ci="1" mb="2" cb="0"/><line nr="242" mi="0" ci="11" mb="0" cb="4"/><line nr="243" mi="0" ci="11" mb="0" cb="4"/><line nr="244" mi="8" ci="1" mb="2" cb="0"/><line nr="245" mi="8" ci="1" mb="2" cb="0"/><line nr="248" mi="0" ci="9" mb="0" cb="2"/><line nr="250" mi="0" ci="14" mb="0" cb="2"/><line nr="251" mi="0" ci="14" mb="0" cb="2"/><line nr="253" mi="11" ci="1" mb="4" cb="0"/><line nr="254" mi="11" ci="1" mb="4" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="0" ci="6" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="3" mb="0" cb="0"/><line nr="325" mi="0" ci="3" mb="0" cb="0"/><line nr="326" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="3" mb="0" cb="0"/><line nr="334" mi="18" ci="1" mb="6" cb="0"/><line nr="335" mi="0" ci="7" mb="0" cb="2"/><line nr="339" mi="0" ci="6" mb="0" cb="2"/><line nr="340" mi="0" ci="13" mb="0" cb="0"/><line nr="341" mi="0" ci="11" mb="0" cb="0"/><line nr="342" mi="0" ci="1" mb="0" cb="0"/><line nr="345" mi="0" ci="8" mb="0" cb="2"/><line nr="349" mi="0" ci="6" mb="0" cb="2"/><line nr="350" mi="0" ci="13" mb="0" cb="0"/><line nr="351" mi="0" ci="11" mb="0" cb="0"/><line nr="352" mi="0" ci="1" mb="0" cb="0"/><line nr="355" mi="0" ci="14" mb="0" cb="2"/><line nr="359" mi="0" ci="8" mb="0" cb="4"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="362" mi="0" ci="4" mb="0" cb="0"/><line nr="363" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="10" ci="0" mb="2" cb="0"/><line nr="383" mi="0" ci="2" mb="0" cb="0"/><line nr="384" mi="0" ci="3" mb="0" cb="0"/><line nr="385" mi="0" ci="3" mb="0" cb="0"/><line nr="386" mi="0" ci="3" mb="0" cb="0"/><line nr="387" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="176" covered="747"/><counter type="BRANCH" missed="50" covered="80"/><counter type="LINE" missed="4" covered="156"/><counter type="COMPLEXITY" missed="28" covered="68"/><counter type="METHOD" missed="1" covered="30"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="KEdgeConnectedComponentsWang.java"><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="41" mi="3" ci="3" mb="0" cb="0"/><line nr="42" mi="3" ci="3" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="1" cb="1"/><line nr="64" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="10" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="2"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="7" ci="1" mb="2" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="9" ci="1" mb="2" cb="0"/><line nr="98" mi="0" ci="11" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="2"/><line nr="110" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="2"/><line nr="128" mi="0" ci="4" mb="0" cb="2"/><line nr="129" mi="2" ci="10" mb="1" cb="1"/><line nr="130" mi="16" ci="1" mb="6" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="2"/><line nr="136" mi="2" ci="10" mb="1" cb="1"/><line nr="137" mi="16" ci="1" mb="6" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="5" mb="0" cb="2"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="9" ci="1" mb="2" cb="0"/><line nr="154" mi="9" ci="1" mb="2" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="9" ci="1" mb="2" cb="0"/><line nr="162" mi="9" ci="1" mb="2" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="171" mi="7" ci="1" mb="2" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="9" ci="1" mb="2" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="2"/><line nr="180" mi="0" ci="5" mb="0" cb="2"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="2"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="2"/><line nr="190" mi="0" ci="3" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="2"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="5" mb="0" cb="2"/><line nr="195" mi="9" ci="1" mb="2" cb="0"/><line nr="198" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="413"/><counter type="BRANCH" missed="33" covered="45"/><counter type="LINE" missed="4" covered="111"/><counter type="COMPLEXITY" missed="19" covered="26"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KShortestPathsSTYen.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="1" cb="1"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="9" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="2"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="73" mi="3" ci="9" mb="1" cb="1"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="7" ci="1" mb="2" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="2"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="12" ci="1" mb="2" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="10" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="0" cb="4"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="14" mb="0" cb="2"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="2"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="0" ci="15" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="107" mi="19" ci="1" mb="0" cb="0"/><line nr="108" mi="4" ci="0" mb="2" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="0" ci="6" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="1" cb="1"/><line nr="183" mi="12" ci="0" mb="2" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="5" mb="0" cb="2"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="12" mb="0" cb="2"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="7" mb="1" cb="1"/><line nr="196" mi="12" ci="0" mb="2" cb="0"/><line nr="197" mi="4" ci="0" mb="0" cb="0"/><line nr="198" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="2"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="12" mb="0" cb="2"/><line nr="203" mi="0" ci="7" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="0" cb="0"/><line nr="206" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="8" ci="1" mb="2" cb="0"/><line nr="209" mi="8" ci="1" mb="2" cb="0"/><line nr="210" mi="10" ci="1" mb="2" cb="0"/><line nr="211" mi="10" ci="1" mb="2" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="8" ci="1" mb="2" cb="0"/><line nr="218" mi="9" ci="1" mb="2" cb="0"/><line nr="219" mi="10" ci="1" mb="2" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="8" mb="0" cb="0"/><line nr="224" mi="0" ci="9" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="6" mb="0" cb="0"/><line nr="227" mi="0" ci="8" mb="0" cb="4"/><line nr="229" mi="0" ci="4" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="4" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="5" mb="0" cb="0"/><line nr="240" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="9" mb="0" cb="2"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="2"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="2"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="5" mb="0" cb="2"/><line nr="251" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="0" ci="5" mb="0" cb="2"/><line nr="256" mi="0" ci="9" mb="0" cb="2"/><line nr="257" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="2"/><line nr="264" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="11" mb="0" cb="0"/><line nr="266" mi="0" ci="6" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="2"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="9" mb="0" cb="2"/><line nr="274" mi="0" ci="3" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="2"/><line nr="276" mi="0" ci="1" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="2"/><line nr="279" mi="0" ci="1" mb="0" cb="0"/><line nr="280" mi="0" ci="5" mb="0" cb="2"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="2"/><line nr="286" mi="0" ci="9" mb="0" cb="2"/><line nr="287" mi="0" ci="7" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="0"/><line nr="292" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="2"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="11" mb="0" cb="0"/><line nr="296" mi="0" ci="6" mb="0" cb="0"/><line nr="297" mi="0" ci="7" mb="0" cb="2"/><line nr="298" mi="0" ci="6" mb="0" cb="0"/><line nr="299" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="6" mb="0" cb="2"/><line nr="304" mi="0" ci="1" mb="0" cb="0"/><line nr="305" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="2"/><line nr="307" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="2"/><line nr="313" mi="0" ci="12" mb="0" cb="2"/><line nr="314" mi="0" ci="9" mb="0" cb="0"/><line nr="316" mi="0" ci="12" mb="0" cb="2"/><line nr="317" mi="0" ci="9" mb="0" cb="0"/><line nr="319" mi="0" ci="7" mb="0" cb="0"/><line nr="322" mi="0" ci="4" mb="0" cb="2"/><line nr="323" mi="0" ci="13" mb="0" cb="2"/><line nr="324" mi="0" ci="9" mb="0" cb="0"/><line nr="326" mi="0" ci="13" mb="0" cb="2"/><line nr="327" mi="0" ci="9" mb="0" cb="0"/><line nr="329" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="156" covered="879"/><counter type="BRANCH" missed="28" covered="84"/><counter type="LINE" missed="10" covered="184"/><counter type="COMPLEXITY" missed="17" covered="47"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MaximumFlowDinicDynamicTrees.java"><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="13" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="2"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="9" mb="0" cb="0"/><line nr="97" mi="0" ci="12" mb="0" cb="2"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="1" ci="10" mb="1" cb="1"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="2"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="9" mb="0" cb="2"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="15" mb="0" cb="4"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="2"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="2"/><line nr="142" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="12" ci="1" mb="2" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="4"/><line nr="174" mi="0" ci="6" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="2"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="2"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="12" ci="1" mb="2" cb="0"/><line nr="187" mi="0" ci="6" mb="0" cb="0"/><line nr="188" mi="13" ci="1" mb="2" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="17" mb="0" cb="0"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="209" mi="0" ci="8" mb="0" cb="2"/><line nr="210" mi="0" ci="12" mb="0" cb="2"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="212" mi="0" ci="3" mb="0" cb="2"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="214" mi="10" ci="1" mb="2" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="218" mi="0" ci="4" mb="0" cb="0"/><line nr="219" mi="0" ci="5" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="603"/><counter type="BRANCH" missed="9" covered="41"/><counter type="LINE" missed="0" covered="123"/><counter type="COMPLEXITY" missed="5" covered="28"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ShortestPathAllPairsJohnson.java"><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="11" mb="0" cb="2"/><line nr="87" mi="0" ci="6" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="2"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="10" mb="2" cb="4"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="11" mb="0" cb="2"/><line nr="122" mi="0" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="2"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="10" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="9" mb="0" cb="0"/><line nr="135" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="10" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="10" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="1" ci="6" mb="1" cb="1"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="2"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="7" mb="0" cb="2"/><line nr="162" mi="0" ci="9" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="7" mb="0" cb="2"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="7" ci="1" mb="2" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="1" cb="1"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="173" mi="0" ci="13" mb="0" cb="2"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="175" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="13" ci="0" mb="2" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="2"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="2"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="7" mb="0" cb="0"/><line nr="188" mi="0" ci="12" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="190" mi="0" ci="12" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="1" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="1" mb="0" cb="0"/><line nr="219" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="0" cb="0"/><line nr="262" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="17" mb="0" cb="0"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="281" mi="0" ci="3" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="0"/><line nr="283" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="20" mb="0" cb="0"/><line nr="292" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="510"/><counter type="BRANCH" missed="8" covered="42"/><counter type="LINE" missed="6" covered="105"/><counter type="COMPLEXITY" missed="11" covered="40"/><counter type="METHOD" missed="5" covered="21"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="AlgorithmWithDiagnostics.java"><line nr="34" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IVertexBiPartition.java"><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="8" ci="0" mb="2" cb="0"/><line nr="64" mi="8" ci="0" mb="2" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="12"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="7" covered="2"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MinimumMeanCycleDasdanGupta.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="11" mb="0" cb="2"/><line nr="71" mi="0" ci="7" mb="0" cb="2"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="2"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="14" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="2"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="7" mb="0" cb="2"/><line nr="103" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="9" mb="0" cb="2"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="118" mi="0" ci="7" mb="0" cb="2"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="2"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="7" mb="0" cb="2"/><line nr="130" mi="0" ci="8" mb="0" cb="2"/><line nr="131" mi="0" ci="8" mb="0" cb="2"/><line nr="132" mi="0" ci="13" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="2"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="2"/><line nr="140" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="10" mb="0" cb="2"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="1" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="2"/><line nr="152" mi="0" ci="13" mb="0" cb="2"/><line nr="153" mi="0" ci="4" mb="0" cb="2"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="2"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="15" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="2"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="171" mi="0" ci="2" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="183" mi="0" ci="12" mb="0" cb="0"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="9" mb="0" cb="2"/><line nr="189" mi="0" ci="16" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="1" cb="1"/><line nr="192" mi="0" ci="9" mb="0" cb="2"/><line nr="193" mi="0" ci="15" mb="0" cb="2"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="195" mi="0" ci="18" mb="1" cb="1"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="6" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="201" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="0"/><line nr="235" mi="0" ci="3" mb="0" cb="0"/><line nr="237" mi="0" ci="1" mb="0" cb="0"/><line nr="240" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="594"/><counter type="BRANCH" missed="3" covered="63"/><counter type="LINE" missed="1" covered="118"/><counter type="COMPLEXITY" missed="3" covered="35"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="EdgeCover.java"><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="11" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="1" cb="1"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="1" cb="1"/><line nr="150" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="1" cb="1"/><line nr="155" mi="8" ci="0" mb="2" cb="0"/><line nr="156" mi="13" ci="0" mb="2" cb="0"/><line nr="157" mi="5" ci="0" mb="2" cb="0"/><line nr="158" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="13" ci="0" mb="2" cb="0"/><line nr="160" mi="5" ci="0" mb="2" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="2"/><line nr="166" mi="0" ci="13" mb="1" cb="1"/><line nr="167" mi="0" ci="5" mb="0" cb="2"/><line nr="168" mi="0" ci="1" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="3" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="198" mi="4" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="15" ci="0" mb="0" cb="0"/><line nr="203" mi="9" ci="0" mb="4" cb="0"/><line nr="204" mi="2" ci="0" mb="2" cb="0"/><line nr="205" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="245" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="126" covered="84"/><counter type="BRANCH" missed="21" covered="11"/><counter type="LINE" missed="23" covered="18"/><counter type="COMPLEXITY" missed="19" covered="5"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="2" covered="2"/></sourcefile><sourcefile name="MaximumFlowPushRelabelDynamicTrees.java"><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="10" mb="0" cb="0"/><line nr="69" mi="0" ci="9" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="14" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="2"/><line nr="103" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="113" mi="0" ci="8" mb="0" cb="2"/><line nr="114" mi="0" ci="9" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="7" ci="1" mb="2" cb="0"/><line nr="129" mi="7" ci="1" mb="2" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="2"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="6" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="2"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="2"/><line nr="146" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="2"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="156" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="14" ci="1" mb="4" cb="0"/><line nr="169" mi="8" ci="1" mb="2" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="4"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="11" mb="0" cb="4"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><line nr="184" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="2"/><line nr="187" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="16" ci="1" mb="4" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="2"/><line nr="191" mi="0" ci="7" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="10" mb="0" cb="4"/><line nr="198" mi="0" ci="1" mb="0" cb="0"/><line nr="199" mi="7" ci="1" mb="2" cb="0"/><line nr="200" mi="0" ci="2" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="4"/><line nr="205" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="6" mb="0" cb="4"/><line nr="208" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="2"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="8" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="6" mb="0" cb="2"/><line nr="222" mi="0" ci="4" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="3" mb="0" cb="0"/><line nr="241" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="5" mb="0" cb="2"/><line nr="243" mi="0" ci="7" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="1" mb="0" cb="0"/><line nr="252" mi="8" ci="1" mb="2" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="2"/><line nr="254" mi="0" ci="9" mb="0" cb="2"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="0" ci="4" mb="0" cb="0"/><line nr="257" mi="10" ci="1" mb="2" cb="0"/><line nr="260" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="6" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="4" mb="0" cb="2"/><line nr="268" mi="0" ci="8" mb="0" cb="0"/><line nr="270" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="0"/><line nr="276" mi="0" ci="7" mb="0" cb="2"/><line nr="277" mi="0" ci="13" mb="0" cb="2"/><line nr="278" mi="0" ci="3" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="280" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="11" ci="1" mb="2" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="283" mi="0" ci="6" mb="0" cb="0"/><line nr="284" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="288" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="5" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="3" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="0"/><line nr="314" mi="0" ci="3" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="0" cb="0"/><line nr="316" mi="0" ci="1" mb="0" cb="0"/><line nr="323" mi="0" ci="1" mb="0" cb="0"/><line nr="331" mi="0" ci="6" mb="0" cb="0"/><line nr="333" mi="0" ci="7" mb="0" cb="0"/><line nr="334" mi="0" ci="7" mb="0" cb="0"/><line nr="335" mi="0" ci="6" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="6" mb="0" cb="0"/><line nr="345" mi="0" ci="2" mb="0" cb="0"/><line nr="346" mi="0" ci="12" mb="0" cb="2"/><line nr="347" mi="0" ci="7" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="352" mi="0" ci="5" mb="0" cb="0"/><line nr="353" mi="0" ci="8" mb="0" cb="0"/><line nr="354" mi="0" ci="8" mb="0" cb="0"/><line nr="355" mi="16" ci="1" mb="2" cb="0"/><line nr="356" mi="16" ci="1" mb="2" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="361" mi="0" ci="14" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="10" mb="0" cb="2"/><line nr="367" mi="0" ci="3" mb="0" cb="0"/><line nr="368" mi="0" ci="10" mb="0" cb="0"/><line nr="369" mi="0" ci="4" mb="0" cb="2"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="371" mi="0" ci="12" mb="0" cb="0"/><line nr="372" mi="0" ci="6" mb="0" cb="0"/><line nr="373" mi="0" ci="6" mb="0" cb="0"/><line nr="374" mi="0" ci="3" mb="0" cb="2"/><line nr="375" mi="0" ci="3" mb="0" cb="0"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="379" mi="0" ci="1" mb="0" cb="0"/><line nr="380" mi="0" ci="1" mb="0" cb="0"/><line nr="384" mi="0" ci="8" mb="0" cb="0"/><line nr="385" mi="0" ci="8" mb="0" cb="0"/><line nr="386" mi="0" ci="10" mb="0" cb="0"/><line nr="387" mi="0" ci="5" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="6" mb="0" cb="0"/><line nr="390" mi="0" ci="6" mb="0" cb="0"/><line nr="391" mi="0" ci="1" mb="0" cb="0"/><line nr="395" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="6" mb="0" cb="0"/><line nr="398" mi="0" ci="6" mb="0" cb="0"/><line nr="401" mi="0" ci="7" mb="0" cb="0"/><line nr="404" mi="0" ci="8" mb="0" cb="0"/><line nr="405" mi="0" ci="6" mb="0" cb="0"/><line nr="406" mi="0" ci="6" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="2"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="4" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="2"/><line nr="414" mi="0" ci="6" mb="0" cb="0"/><line nr="415" mi="0" ci="5" mb="0" cb="2"/><line nr="416" mi="0" ci="1" mb="0" cb="0"/><line nr="417" mi="0" ci="6" mb="0" cb="0"/><line nr="418" mi="0" ci="5" mb="0" cb="0"/><line nr="419" mi="0" ci="6" mb="0" cb="0"/><line nr="420" mi="0" ci="1" mb="0" cb="0"/><line nr="421" mi="0" ci="1" mb="0" cb="0"/><line nr="425" mi="0" ci="5" mb="0" cb="0"/><line nr="430" mi="0" ci="10" mb="0" cb="0"/><line nr="435" mi="0" ci="10" mb="0" cb="2"/><line nr="439" mi="0" ci="3" mb="0" cb="0"/><line nr="442" mi="0" ci="4" mb="0" cb="0"/><line nr="443" mi="0" ci="1" mb="0" cb="0"/><line nr="447" mi="0" ci="9" mb="0" cb="2"/><line nr="453" mi="0" ci="1" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="461" mi="0" ci="7" mb="0" cb="0"/><line nr="462" mi="0" ci="7" mb="0" cb="0"/><line nr="463" mi="0" ci="6" mb="0" cb="0"/><line nr="464" mi="0" ci="1" mb="0" cb="0"/><line nr="468" mi="0" ci="6" mb="0" cb="0"/><line nr="473" mi="0" ci="4" mb="0" cb="0"/><line nr="474" mi="0" ci="2" mb="0" cb="0"/><line nr="475" mi="0" ci="12" mb="0" cb="2"/><line nr="476" mi="0" ci="6" mb="0" cb="0"/><line nr="477" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="5" mb="0" cb="0"/><line nr="482" mi="0" ci="8" mb="0" cb="0"/><line nr="483" mi="0" ci="8" mb="0" cb="0"/><line nr="484" mi="13" ci="1" mb="2" cb="0"/><line nr="485" mi="13" ci="1" mb="2" cb="0"/><line nr="486" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="15" mb="0" cb="0"/><line nr="491" mi="0" ci="1" mb="0" cb="0"/><line nr="495" mi="0" ci="10" mb="0" cb="2"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="10" mb="0" cb="0"/><line nr="498" mi="0" ci="2" mb="0" cb="2"/><line nr="499" mi="0" ci="4" mb="0" cb="0"/><line nr="500" mi="0" ci="12" mb="0" cb="0"/><line nr="501" mi="0" ci="6" mb="0" cb="0"/><line nr="502" mi="0" ci="6" mb="0" cb="0"/><line nr="503" mi="0" ci="3" mb="0" cb="2"/><line nr="504" mi="0" ci="3" mb="0" cb="0"/><line nr="505" mi="0" ci="4" mb="0" cb="0"/><line nr="508" mi="0" ci="1" mb="0" cb="0"/><line nr="509" mi="0" ci="1" mb="0" cb="0"/><line nr="513" mi="0" ci="8" mb="0" cb="0"/><line nr="514" mi="0" ci="8" mb="0" cb="0"/><line nr="515" mi="0" ci="10" mb="0" cb="0"/><line nr="516" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="4" mb="0" cb="0"/><line nr="518" mi="0" ci="6" mb="0" cb="0"/><line nr="519" mi="0" ci="6" mb="0" cb="0"/><line nr="520" mi="0" ci="1" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="6" mb="0" cb="0"/><line nr="527" mi="0" ci="7" mb="0" cb="0"/><line nr="530" mi="0" ci="8" mb="0" cb="0"/><line nr="533" mi="0" ci="8" mb="0" cb="0"/><line nr="534" mi="0" ci="6" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="2"/><line nr="537" mi="0" ci="3" mb="0" cb="0"/><line nr="538" mi="0" ci="4" mb="0" cb="0"/><line nr="542" mi="0" ci="4" mb="0" cb="2"/><line nr="543" mi="0" ci="6" mb="0" cb="0"/><line nr="544" mi="0" ci="5" mb="0" cb="2"/><line nr="545" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="0" ci="6" mb="0" cb="0"/><line nr="547" mi="0" ci="5" mb="0" cb="0"/><line nr="548" mi="0" ci="6" mb="0" cb="0"/><line nr="549" mi="0" ci="1" mb="0" cb="0"/><line nr="550" mi="0" ci="1" mb="0" cb="0"/><line nr="554" mi="0" ci="6" mb="0" cb="0"/><line nr="559" mi="0" ci="11" mb="0" cb="0"/><line nr="564" mi="0" ci="10" mb="0" cb="2"/><line nr="568" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="4" mb="0" cb="0"/><line nr="572" mi="0" ci="1" mb="0" cb="0"/><line nr="576" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="151" covered="1287"/><counter type="BRANCH" missed="30" covered="96"/><counter type="LINE" missed="1" covered="269"/><counter type="COMPLEXITY" missed="16" covered="87"/><counter type="METHOD" missed="1" covered="39"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="BiConnectedComponentsAlgoAbstract.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="1" cb="1"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="8" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="2"/><line nr="143" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="159"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="WeaklyConnectedComponentsAlgoImpl.java"><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="2"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="2"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="2"/><line nr="50" mi="9" ci="1" mb="2" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="2"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="2"/><line nr="62" mi="9" ci="1" mb="2" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="2"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="2"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="1" cb="1"/><line nr="99" mi="8" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="4" ci="0" mb="2" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="45" covered="184"/><counter type="BRANCH" missed="9" covered="25"/><counter type="LINE" missed="9" covered="55"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="14464" covered="60564"/><counter type="BRANCH" missed="2577" covered="5850"/><counter type="LINE" missed="1808" covered="13011"/><counter type="COMPLEXITY" missed="2002" covered="4387"/><counter type="METHOD" missed="472" covered="1683"/><counter type="CLASS" missed="84" covered="417"/></package><package name="com/jgalgo/internal"><class name="com/jgalgo/internal/JGAlgoConfigImpl" sourcefilename="JGAlgoConfigImpl.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/JGAlgoConfigNonFrozen" sourcefilename="JGAlgoConfigNonFrozen.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOption" desc="(Ljava/lang/String;Ljava/lang/Object;)V" line="33"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="freezeOptions" desc="()V" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="69" covered="28"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="12"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JGAlgoConfigImpl.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="20"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JGAlgoConfigNonFrozen.java"><line nr="20" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="2" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="10" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="67" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="69" covered="28"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="12"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="72" covered="48"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="23"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/jgalgo/internal/util"><class name="com/jgalgo/internal/util/Assertions" sourcefilename="Assertions.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/util/Assertions$Arrays" sourcefilename="Assertions.java"><method name="&lt;init&gt;" desc="()V" line="214"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkFromTo" desc="(III)V" line="216"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIndex" desc="(III)V" line="220"><counter type="INSTRUCTION" missed="8" covered="7"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="11" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$IterMap" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;Ljava/util/function/Function;)V" line="236"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="243"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="248"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$IterPeekableImpl" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V" line="159"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="advance" desc="()V" line="165"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="174"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="179"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekNext" desc="()Ljava/lang/Object;" line="189"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="157"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="45" covered="4"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="1"/><counter type="COMPLEXITY" missed="7" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/Range" sourcefilename="Range.java"><method name="&lt;init&gt;" desc="(II)V" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(I)Lcom/jgalgo/internal/util/Range;" line="33"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(II)Lcom/jgalgo/internal/util/Range;" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="47"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="spliterator" desc="()Lit/unimi/dsi/fastutil/ints/IntSpliterator;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="46"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$BiInt2LongFunc" sourcefilename="JGAlgoUtils.java"/><class name="com/jgalgo/internal/util/JGAlgoUtils$1" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="108"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$2" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;)V" line="115"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="118"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$IterPeekable$Int$1" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="()V" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="135"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="140"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekNext" desc="()I" line="145"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="5"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$BiInt2IntFunc" sourcefilename="JGAlgoUtils.java"/><class name="com/jgalgo/internal/util/JGAlgoUtils$NullListIterator" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(I)V" line="287"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(II)V" line="290"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="301"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="next" desc="()Ljava/lang/Object;" line="306"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasPrevious" desc="()Z" line="313"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="previous" desc="()Ljava/lang/Object;" line="318"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextIndex" desc="()I" line="325"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="previousIndex" desc="()I" line="330"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="()V" line="335"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/Object;)V" line="340"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="345"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/util/ImmutableIntArraySet" sourcefilename="ImmutableIntArraySet.java"><method name="&lt;init&gt;" desc="([I)V" line="32"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([III)V" line="35"><counter type="INSTRUCTION" missed="17" covered="30"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toIntArray" desc="()[I" line="56"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([I)[I" line="61"><counter type="INSTRUCTION" missed="3" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNaiveContains" desc="([I)Lcom/jgalgo/internal/util/ImmutableIntArraySet;" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withNaiveContains" desc="([III)Lcom/jgalgo/internal/util/ImmutableIntArraySet;" line="116"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="26"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="94" covered="74"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="14" covered="18"/><counter type="COMPLEXITY" missed="12" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$IterPeekable" sourcefilename="JGAlgoUtils.java"/><class name="com/jgalgo/internal/util/ImmutableIntArraySet$Iter" sourcefilename="ImmutableIntArraySet.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/util/ImmutableIntArraySet;)V" line="94"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="100"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="105"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$IntDoubleConsumer" sourcefilename="JGAlgoUtils.java"/><class name="com/jgalgo/internal/util/Assertions$Graphs" sourcefilename="Assertions.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onlyDirected" desc="(Lcom/jgalgo/graph/Graph;)V" line="46"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onlyUndirected" desc="(Lcom/jgalgo/graph/Graph;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onlyBipartite" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightsBool;)V" line="56"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noSelfEdges" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/lang/String;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noParallelEdges" desc="(Lcom/jgalgo/graph/IntGraph;Ljava/lang/String;)V" line="69"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onlyPositiveEdgesWeights" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)V" line="74"><counter type="INSTRUCTION" missed="1" covered="40"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onlyPositiveWeight" desc="(D)V" line="87"><counter type="INSTRUCTION" missed="7" covered="7"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onlyPositiveWeight" desc="(I)V" line="94"><counter type="INSTRUCTION" missed="7" covered="5"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onlyCardinality" desc="(Lcom/jgalgo/graph/IWeightFunction;)V" line="101"><counter type="INSTRUCTION" missed="8" covered="3"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkId" desc="(IIZ)V" line="106"><counter type="INSTRUCTION" missed="12" covered="8"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkVertex" desc="(II)V" line="113"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEdge" desc="(II)V" line="120"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="68" covered="130"/><counter type="BRANCH" missed="23" covered="31"/><counter type="LINE" missed="17" covered="40"/><counter type="COMPLEXITY" missed="22" covered="18"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils" sourcefilename="JGAlgoUtils.java"><method name="log2" desc="(D)D" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="log2" desc="(I)I" line="64"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="log2ceil" desc="(I)I" line="80"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDefaultComparator" desc="()Ljava/util/Comparator;" line="89"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cmpDefault" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="94"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqual" desc="(DD)Z" line="98"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterable" desc="(Ljava/util/Iterator;)Ljava/lang/Iterable;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterable" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;)Lit/unimi/dsi/fastutil/ints/IntIterable;" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterMap" desc="(Ljava/util/Iterator;Ljava/util/function/Function;)Ljava/util/Iterator;" line="254"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nullList" desc="(I)Ljava/util/List;" line="351"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sort" desc="([IIILit/unimi/dsi/fastutil/ints/IntComparator;Z)V" line="488"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPool" desc="()Ljava/util/concurrent/ForkJoinPool;" line="496"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recursiveAction" desc="(Ljava/lang/Runnable;)Ljava/util/concurrent/RecursiveAction;" line="501"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recursiveTask" desc="(Ljava/util/function/Supplier;)Ljava/util/concurrent/RecursiveTask;" line="505"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="labeledObj" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="551"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="potentialWeightFunc" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;[D)Lcom/jgalgo/graph/IWeightFunction;" line="555"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="potentialWeightFunc" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunctionInt;[I)Lcom/jgalgo/graph/IWeightFunctionInt;" line="559"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="consumerNoOp" desc="()Ljava/util/function/Consumer;" line="568"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lowerBound" desc="(IIILjava/util/function/IntUnaryOperator;)I" line="643"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="upperBound" desc="(IIILjava/util/function/IntUnaryOperator;)I" line="657"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalRange" desc="(IIILjava/util/function/IntUnaryOperator;)Lit/unimi/dsi/fastutil/ints/IntIntPair;" line="671"><counter type="INSTRUCTION" missed="2" covered="60"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="longPack" desc="(II)J" line="727"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="long2low" desc="(J)I" line="731"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="long2high" desc="(J)I" line="735"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="(Ljava/lang/Object;)V" line="564"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$potentialWeightFunc$2" desc="(Lcom/jgalgo/graph/IWeightFunctionInt;[ILcom/jgalgo/graph/IndexGraph;I)I" line="559"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$potentialWeightFunc$1" desc="(Lcom/jgalgo/graph/IWeightFunction;[DLcom/jgalgo/graph/IndexGraph;I)D" line="555"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="361"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="7" covered="72"/><counter type="COMPLEXITY" missed="7" covered="33"/><counter type="METHOD" missed="3" covered="26"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$Variant" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="694"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Class;)Z" line="699"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Class;)Ljava/util/Optional;" line="704"><counter type="INSTRUCTION" missed="1" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$NullList" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(I)V" line="358"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="366"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="371"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Ljava/util/Iterator;" line="376"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)Z" line="381"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;)Z" line="386"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="391"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(ILjava/util/Collection;)Z" line="396"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="401"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="406"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="411"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(I)Ljava/lang/Object;" line="416"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(ILjava/lang/Object;)Ljava/lang/Object;" line="423"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(ILjava/lang/Object;)V" line="428"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)Ljava/lang/Object;" line="433"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="indexOf" desc="(Ljava/lang/Object;)I" line="438"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastIndexOf" desc="(Ljava/lang/Object;)I" line="443"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="()Ljava/util/ListIterator;" line="448"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="listIterator" desc="(I)Ljava/util/ListIterator;" line="453"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="subList" desc="(II)Ljava/util/List;" line="458"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="17"/><counter type="BRANCH" missed="27" covered="1"/><counter type="LINE" missed="24" covered="6"/><counter type="COMPLEXITY" missed="31" covered="3"/><counter type="METHOD" missed="17" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$RecursiveTaskFromSupplier" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;)V" line="527"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compute" desc="()Ljava/lang/Object;" line="533"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$IterPeekable$Int" sourcefilename="JGAlgoUtils.java"><method name="&lt;clinit&gt;" desc="()V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/Assertions$Flows" sourcefilename="Assertions.java"><method name="&lt;init&gt;" desc="()V" line="128"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sourceSinkNotTheSame" desc="(II)V" line="131"><counter type="INSTRUCTION" missed="6" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourcesSinksNotTheSame" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;Lit/unimi/dsi/fastutil/ints/IntCollection;)V" line="136"><counter type="INSTRUCTION" missed="34" covered="63"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="7" covered="16"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positiveCapacities" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;)V" line="163"><counter type="INSTRUCTION" missed="14" covered="44"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkLowerBound" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/alg/IFlowNetwork;Lcom/jgalgo/graph/IWeightFunction;)V" line="180"><counter type="INSTRUCTION" missed="16" covered="66"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSupply" desc="(Lcom/jgalgo/graph/IndexGraph;Lcom/jgalgo/graph/IWeightFunction;)V" line="202"><counter type="INSTRUCTION" missed="11" covered="30"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="84" covered="207"/><counter type="BRANCH" missed="18" covered="32"/><counter type="LINE" missed="15" covered="48"/><counter type="COMPLEXITY" missed="17" covered="14"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$NullIterator" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(I)V" line="261"><counter type="INSTRUCTION" missed="4" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="269"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="274"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="25"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/ImmutableIntArraySet$WithNaiveContains" sourcefilename="ImmutableIntArraySet.java"><method name="&lt;init&gt;" desc="([I)V" line="122"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="([III)V" line="126"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="131"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$BiInt2ObjFunc" sourcefilename="JGAlgoUtils.java"/><class name="com/jgalgo/internal/util/JGAlgoUtils$RecursiveActionFromRunnable" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Runnable;)V" line="512"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compute" desc="()V" line="518"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/Bitmap$1" sourcefilename="Bitmap.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/util/Bitmap;)V" line="221"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="227"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="232"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/IntAdapters" sourcefilename="IntAdapters.java"><method name="asIntIterator" desc="(Ljava/util/Iterator;)Lit/unimi/dsi/fastutil/ints/IntIterator;" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIntIterable" desc="(Ljava/lang/Iterable;)Lit/unimi/dsi/fastutil/ints/IntIterable;" line="46"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIntCollection" desc="(Ljava/util/Collection;)Lit/unimi/dsi/fastutil/ints/IntCollection;" line="54"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIntUnaryOperator" desc="(Ljava/util/function/ToIntFunction;)Ljava/util/function/IntUnaryOperator;" line="187"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIntSupplier" desc="(Ljava/util/function/Supplier;)Ljava/util/function/IntSupplier;" line="195"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIntBiOperator" desc="(Ljava/util/function/BiFunction;)Lit/unimi/dsi/fastutil/ints/IntBinaryOperator;" line="203"><counter type="INSTRUCTION" missed="3" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asIntBiOperator" desc="(Ljava/util/function/BinaryOperator;)Lit/unimi/dsi/fastutil/ints/IntBinaryOperator;" line="211"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asIntBiOperator$3" desc="(Ljava/util/function/BinaryOperator;II)I" line="214"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$asIntBiOperator$2" desc="(Ljava/util/function/BiFunction;II)I" line="206"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$asIntSupplier$1" desc="(Ljava/util/function/Supplier;)I" line="198"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$asIntUnaryOperator$0" desc="(Ljava/util/function/ToIntFunction;I)I" line="190"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="70"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="6" covered="15"/><counter type="COMPLEXITY" missed="6" covered="12"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/Assertions$Iters" sourcefilename="Assertions.java"><method name="&lt;init&gt;" desc="()V" line="226"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="(Ljava/util/Iterator;)V" line="232"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasPrevious" desc="(Ljava/util/ListIterator;)V" line="239"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="6"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$LabeledObj" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="540"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="546"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="8"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/Assertions$Heaps" sourcefilename="Assertions.java"><method name="&lt;init&gt;" desc="()V" line="247"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="decreaseKeyIsSmaller" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V" line="250"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKeyIsSmaller" desc="(IILit/unimi/dsi/fastutil/ints/IntComparator;)V" line="258"><counter type="INSTRUCTION" missed="6" covered="16"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decreaseKeyIsSmaller" desc="(DDLit/unimi/dsi/fastutil/doubles/DoubleComparator;)V" line="266"><counter type="INSTRUCTION" missed="10" covered="12"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noMeldWithSelf" desc="(Lcom/jgalgo/internal/ds/Heap;Lcom/jgalgo/internal/ds/Heap;)V" line="274"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="noMeldWithSelf" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="282"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meldWithSameImpl" desc="(Ljava/lang/Class;Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="291"><counter type="INSTRUCTION" missed="6" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalComparatorBeforeMeld" desc="(Lcom/jgalgo/internal/ds/Heap;Lcom/jgalgo/internal/ds/Heap;)V" line="298"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equalComparatorBeforeMeld" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="306"><counter type="INSTRUCTION" missed="6" covered="9"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEmpty" desc="(Lcom/jgalgo/internal/ds/Heap;)V" line="313"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="notEmpty" desc="(Lcom/jgalgo/internal/ds/HeapReferenceable;)V" line="320"><counter type="INSTRUCTION" missed="6" covered="6"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="67" covered="94"/><counter type="BRANCH" missed="21" covered="25"/><counter type="LINE" missed="21" covered="33"/><counter type="COMPLEXITY" missed="22" covered="12"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/IntAdapters$IntIterableWrapper" sourcefilename="IntAdapters.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="88"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/IntAdapters$IntIteratorWrapper" sourcefilename="IntAdapters.java"><method name="&lt;init&gt;" desc="(Ljava/util/Iterator;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="70"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$Variant$Of2" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="711"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withA" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;" line="715"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withB" desc="(Ljava/lang/Object;)Lcom/jgalgo/internal/util/JGAlgoUtils$Variant$Of2;" line="719"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/Range$1" sourcefilename="Range.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/internal/util/Range;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="58"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="35"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/Bitmap" sourcefilename="Bitmap.java"><method name="&lt;init&gt;" desc="(I)V" line="44"><counter type="INSTRUCTION" missed="6" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(IZ)V" line="71"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(I)V" line="86"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setAll" desc="(Z)V" line="96"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setAll" desc="()V" line="107"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="(I)V" line="121"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="138"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="word" desc="(I)I" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bit" desc="(I)J" line="149"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextSetBit" desc="(I)I" line="161"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextClearBit" desc="(I)I" line="183"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIdx" desc="(I)V" line="198"><counter type="INSTRUCTION" missed="8" covered="7"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cardinality" desc="()I" line="208"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="221"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[I" line="251"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="92" covered="261"/><counter type="BRANCH" missed="15" covered="19"/><counter type="LINE" missed="16" covered="50"/><counter type="COMPLEXITY" missed="12" covered="22"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$Int2IntMapEmptyWithDefVal" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(I)V" line="577"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)I" line="583"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="588"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="593"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="597"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultReturnValue" desc="(I)V" line="601"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultReturnValue" desc="()I" line="606"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(I)I" line="611"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="int2IntEntrySet" desc="()Lit/unimi/dsi/fastutil/objects/ObjectSet;" line="616"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="keySet" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="621"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="()Lit/unimi/dsi/fastutil/ints/IntCollection;" line="626"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(I)Z" line="631"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsValue" desc="(I)Z" line="636"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="LINE" missed="5" covered="10"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/IntAdapters$IntCollectionWrapper" sourcefilename="IntAdapters.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="101"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEmpty" desc="()Z" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Ljava/util/Collection;)Z" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Ljava/util/Collection;)Z" line="131"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Ljava/util/Collection;)Z" line="136"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="141"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="146"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(I)Z" line="151"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(I)Z" line="156"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rem" desc="(I)Z" line="161"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addAll" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z" line="166"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsAll" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z" line="171"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeAll" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z" line="176"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="retainAll" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z" line="181"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="21"/><counter type="LINE" missed="15" covered="6"/><counter type="COMPLEXITY" missed="14" covered="4"/><counter type="METHOD" missed="14" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/internal/util/JGAlgoUtils$IterPeekableImpl$Int" sourcefilename="JGAlgoUtils.java"><method name="&lt;init&gt;" desc="(Lit/unimi/dsi/fastutil/ints/IntIterator;)V" line="199"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="advance" desc="()V" line="205"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasNext" desc="()Z" line="211"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nextInt" desc="()I" line="216"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="peekNext" desc="()I" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Range.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="1" ci="11" mb="2" cb="2"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="1" cb="1"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="81"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="JGAlgoUtils.java"><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="2"/><line nr="85" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="100" mi="11" ci="0" mb="2" cb="0"/><line nr="105" mi="0" ci="11" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="11" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="1" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="2" cb="0"/><line nr="166" mi="6" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="7" ci="0" mb="2" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="3" ci="0" mb="0" cb="0"/><line nr="182" mi="2" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="2" ci="0" mb="0" cb="0"/><line nr="190" mi="3" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="0" cb="0"/><line nr="200" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="1" ci="0" mb="0" cb="0"/><line nr="205" mi="7" ci="0" mb="2" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="207" mi="1" ci="0" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="3" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="3" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="2" mb="0" cb="0"/><line nr="237" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="5" mb="0" cb="0"/><line nr="239" mi="0" ci="1" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="248" mi="0" ci="7" mb="0" cb="0"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="1" cb="1"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="1" mb="0" cb="0"/><line nr="269" mi="0" ci="7" mb="0" cb="2"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="6" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="1" ci="0" mb="0" cb="0"/><line nr="290" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="2" cb="0"/><line nr="292" mi="4" ci="0" mb="0" cb="0"/><line nr="293" mi="5" ci="0" mb="4" cb="0"/><line nr="294" mi="4" ci="0" mb="0" cb="0"/><line nr="295" mi="3" ci="0" mb="0" cb="0"/><line nr="296" mi="3" ci="0" mb="0" cb="0"/><line nr="297" mi="1" ci="0" mb="0" cb="0"/><line nr="301" mi="9" ci="0" mb="2" cb="0"/><line nr="306" mi="2" ci="0" mb="0" cb="0"/><line nr="307" mi="6" ci="0" mb="0" cb="0"/><line nr="308" mi="2" ci="0" mb="0" cb="0"/><line nr="313" mi="7" ci="0" mb="2" cb="0"/><line nr="318" mi="2" ci="0" mb="0" cb="0"/><line nr="319" mi="6" ci="0" mb="0" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="325" mi="3" ci="0" mb="0" cb="0"/><line nr="330" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="340" mi="4" ci="0" mb="0" cb="0"/><line nr="345" mi="4" ci="0" mb="0" cb="0"/><line nr="351" mi="0" ci="5" mb="0" cb="0"/><line nr="358" mi="0" ci="2" mb="0" cb="0"/><line nr="359" mi="0" ci="2" mb="1" cb="1"/><line nr="360" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="1" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="0"/><line nr="371" mi="9" ci="0" mb="4" cb="0"/><line nr="376" mi="0" ci="6" mb="0" cb="0"/><line nr="381" mi="4" ci="0" mb="0" cb="0"/><line nr="386" mi="4" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="396" mi="4" ci="0" mb="0" cb="0"/><line nr="401" mi="4" ci="0" mb="0" cb="0"/><line nr="406" mi="4" ci="0" mb="0" cb="0"/><line nr="411" mi="4" ci="0" mb="0" cb="0"/><line nr="416" mi="6" ci="0" mb="4" cb="0"/><line nr="417" mi="4" ci="0" mb="0" cb="0"/><line nr="418" mi="2" ci="0" mb="0" cb="0"/><line nr="423" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="4" ci="0" mb="0" cb="0"/><line nr="433" mi="4" ci="0" mb="0" cb="0"/><line nr="438" mi="9" ci="0" mb="4" cb="0"/><line nr="443" mi="12" ci="0" mb="4" cb="0"/><line nr="448" mi="6" ci="0" mb="0" cb="0"/><line nr="453" mi="7" ci="0" mb="0" cb="0"/><line nr="458" mi="9" ci="0" mb="6" cb="0"/><line nr="459" mi="4" ci="0" mb="0" cb="0"/><line nr="460" mi="6" ci="0" mb="4" cb="0"/><line nr="461" mi="2" ci="0" mb="0" cb="0"/><line nr="462" mi="7" ci="0" mb="0" cb="0"/><line nr="488" mi="0" ci="2" mb="1" cb="1"/><line nr="489" mi="0" ci="6" mb="0" cb="0"/><line nr="491" mi="5" ci="0" mb="0" cb="0"/><line nr="493" mi="0" ci="1" mb="0" cb="0"/><line nr="496" mi="0" ci="2" mb="0" cb="0"/><line nr="497" mi="1" ci="5" mb="1" cb="1"/><line nr="501" mi="0" ci="5" mb="0" cb="0"/><line nr="505" mi="5" ci="0" mb="0" cb="0"/><line nr="512" mi="0" ci="2" mb="0" cb="0"/><line nr="513" mi="0" ci="3" mb="0" cb="0"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="518" mi="0" ci="3" mb="0" cb="0"/><line nr="519" mi="0" ci="1" mb="0" cb="0"/><line nr="527" mi="2" ci="0" mb="0" cb="0"/><line nr="528" mi="3" ci="0" mb="0" cb="0"/><line nr="529" mi="1" ci="0" mb="0" cb="0"/><line nr="533" mi="4" ci="0" mb="0" cb="0"/><line nr="540" mi="0" ci="2" mb="0" cb="0"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="542" mi="0" ci="1" mb="0" cb="0"/><line nr="546" mi="3" ci="0" mb="0" cb="0"/><line nr="551" mi="0" ci="5" mb="0" cb="0"/><line nr="555" mi="0" ci="21" mb="0" cb="0"/><line nr="559" mi="0" ci="21" mb="0" cb="0"/><line nr="563" mi="0" ci="2" mb="0" cb="0"/><line nr="564" mi="0" ci="1" mb="0" cb="0"/><line nr="568" mi="0" ci="2" mb="0" cb="0"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><line nr="579" mi="0" ci="1" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="2" mb="0" cb="0"/><line nr="593" mi="0" ci="2" mb="0" cb="0"/><line nr="597" mi="0" ci="1" mb="0" cb="0"/><line nr="601" mi="4" ci="0" mb="0" cb="0"/><line nr="606" mi="3" ci="0" mb="0" cb="0"/><line nr="611" mi="0" ci="3" mb="0" cb="0"/><line nr="616" mi="0" ci="2" mb="0" cb="0"/><line nr="621" mi="2" ci="0" mb="0" cb="0"/><line nr="626" mi="0" ci="2" mb="0" cb="0"/><line nr="631" mi="2" ci="0" mb="0" cb="0"/><line nr="636" mi="2" ci="0" mb="0" cb="0"/><line nr="640" mi="0" ci="6" mb="0" cb="0"/><line nr="643" mi="0" ci="6" mb="0" cb="2"/><line nr="644" mi="0" ci="4" mb="0" cb="0"/><line nr="645" mi="0" ci="4" mb="0" cb="0"/><line nr="646" mi="0" ci="5" mb="0" cb="2"/><line nr="647" mi="0" ci="4" mb="0" cb="0"/><line nr="648" mi="0" ci="7" mb="0" cb="0"/><line nr="650" mi="0" ci="2" mb="0" cb="0"/><line nr="652" mi="0" ci="1" mb="0" cb="0"/><line nr="653" mi="0" ci="2" mb="0" cb="0"/><line nr="657" mi="0" ci="6" mb="0" cb="2"/><line nr="658" mi="0" ci="4" mb="0" cb="0"/><line nr="659" mi="0" ci="4" mb="0" cb="0"/><line nr="660" mi="0" ci="5" mb="0" cb="2"/><line nr="661" mi="0" ci="3" mb="0" cb="0"/><line nr="663" mi="0" ci="4" mb="0" cb="0"/><line nr="664" mi="0" ci="6" mb="0" cb="0"/><line nr="666" mi="0" ci="1" mb="0" cb="0"/><line nr="667" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="0" ci="6" mb="1" cb="1"/><line nr="672" mi="0" ci="4" mb="0" cb="0"/><line nr="673" mi="0" ci="4" mb="0" cb="0"/><line nr="674" mi="0" ci="4" mb="0" cb="0"/><line nr="675" mi="0" ci="3" mb="0" cb="2"/><line nr="676" mi="0" ci="4" mb="0" cb="0"/><line nr="677" mi="0" ci="7" mb="0" cb="0"/><line nr="678" mi="0" ci="3" mb="0" cb="2"/><line nr="679" mi="0" ci="3" mb="0" cb="0"/><line nr="681" mi="0" ci="6" mb="0" cb="0"/><line nr="682" mi="0" ci="4" mb="0" cb="0"/><line nr="683" mi="0" ci="7" mb="0" cb="0"/><line nr="684" mi="0" ci="4" mb="0" cb="0"/><line nr="686" mi="0" ci="1" mb="0" cb="0"/><line nr="687" mi="2" ci="0" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="695" mi="0" ci="4" mb="0" cb="0"/><line nr="696" mi="0" ci="1" mb="0" cb="0"/><line nr="699" mi="0" ci="5" mb="0" cb="0"/><line nr="704" mi="1" ci="9" mb="1" cb="1"/><line nr="711" mi="0" ci="3" mb="0" cb="0"/><line nr="712" mi="0" ci="1" mb="0" cb="0"/><line nr="715" mi="0" ci="5" mb="0" cb="0"/><line nr="719" mi="0" ci="5" mb="0" cb="0"/><line nr="727" mi="0" ci="14" mb="0" cb="0"/><line nr="731" mi="0" ci="7" mb="0" cb="0"/><line nr="735" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="386" covered="524"/><counter type="BRANCH" missed="50" covered="22"/><counter type="LINE" missed="97" covered="123"/><counter type="COMPLEXITY" missed="81" covered="66"/><counter type="METHOD" missed="53" covered="58"/><counter type="CLASS" missed="4" covered="13"/></sourcefile><sourcefile name="Assertions.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="1" cb="1"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="2"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="1" cb="1"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="11" mb="0" cb="2"/><line nr="59" mi="0" ci="11" mb="1" cb="1"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="1" cb="1"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="2"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="11" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="11" mb="0" cb="2"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="1" cb="1"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="1" cb="1"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="1" cb="1"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="1" cb="1"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="3" ci="2" mb="3" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="1" cb="1"/><line nr="107" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="2" cb="2"/><line nr="109" mi="11" ci="0" mb="2" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="1" cb="1"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="2" cb="2"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="1" cb="1"/><line nr="121" mi="1" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="2" cb="2"/><line nr="123" mi="6" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="1" cb="1"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="1" cb="1"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="145" mi="0" ci="11" mb="0" cb="2"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="1" cb="1"/><line nr="148" mi="6" ci="0" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="11" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="2" mb="1" cb="1"/><line nr="153" mi="3" ci="0" mb="2" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="2" cb="0"/><line nr="157" mi="6" ci="0" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="11" mb="0" cb="2"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="2" mb="1" cb="1"/><line nr="168" mi="7" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="2"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="1" cb="1"/><line nr="174" mi="7" ci="0" mb="0" cb="0"/><line nr="177" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="1" cb="3"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="11" mb="0" cb="2"/><line nr="184" mi="0" ci="4" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="6" mb="2" cb="2"/><line nr="187" mi="8" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="2"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="4" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="2" cb="2"/><line nr="195" mi="8" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="1" mb="0" cb="0"/><line nr="202" mi="0" ci="2" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="2"/><line nr="204" mi="0" ci="4" mb="0" cb="0"/><line nr="205" mi="0" ci="3" mb="1" cb="1"/><line nr="206" mi="6" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="209" mi="0" ci="5" mb="1" cb="1"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="6" mb="2" cb="2"/><line nr="221" mi="8" ci="0" mb="0" cb="0"/><line nr="223" mi="0" ci="1" mb="0" cb="0"/><line nr="226" mi="3" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="2" mb="1" cb="1"/><line nr="233" mi="1" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="1" cb="1"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="2" ci="0" mb="2" cb="0"/><line nr="240" mi="1" ci="0" mb="0" cb="0"/><line nr="241" mi="3" ci="0" mb="2" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="1" ci="0" mb="0" cb="0"/><line nr="247" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="1" cb="1"/><line nr="251" mi="1" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="11" mb="0" cb="2"/><line nr="253" mi="0" ci="2" mb="1" cb="1"/><line nr="254" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="1" cb="1"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><line nr="260" mi="0" ci="11" mb="0" cb="2"/><line nr="261" mi="0" ci="2" mb="1" cb="1"/><line nr="262" mi="5" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="1" mb="0" cb="0"/><line nr="266" mi="0" ci="2" mb="1" cb="1"/><line nr="267" mi="1" ci="0" mb="0" cb="0"/><line nr="268" mi="4" ci="7" mb="1" cb="1"/><line nr="269" mi="0" ci="2" mb="1" cb="1"/><line nr="270" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="1" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="1" cb="1"/><line nr="275" mi="1" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="3" mb="1" cb="1"/><line nr="277" mi="5" ci="0" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="2" mb="1" cb="1"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="1" cb="1"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="1" cb="1"/><line nr="292" mi="1" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="1" cb="1"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="298" mi="0" ci="2" mb="1" cb="1"/><line nr="299" mi="1" ci="0" mb="0" cb="0"/><line nr="300" mi="0" ci="6" mb="1" cb="1"/><line nr="301" mi="5" ci="0" mb="0" cb="0"/><line nr="302" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="2" mb="1" cb="1"/><line nr="307" mi="1" ci="0" mb="0" cb="0"/><line nr="308" mi="0" ci="6" mb="1" cb="1"/><line nr="309" mi="5" ci="0" mb="0" cb="0"/><line nr="310" mi="0" ci="1" mb="0" cb="0"/><line nr="313" mi="0" ci="2" mb="1" cb="1"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="3" mb="1" cb="1"/><line nr="316" mi="5" ci="0" mb="0" cb="0"/><line nr="317" mi="0" ci="1" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="1" cb="1"/><line nr="321" mi="1" ci="0" mb="0" cb="0"/><line nr="322" mi="0" ci="3" mb="1" cb="1"/><line nr="323" mi="5" ci="0" mb="0" cb="0"/><line nr="324" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="254" covered="450"/><counter type="BRANCH" missed="70" covered="92"/><counter type="LINE" missed="64" covered="128"/><counter type="COMPLEXITY" missed="71" covered="47"/><counter type="METHOD" missed="7" covered="30"/><counter type="CLASS" missed="1" covered="5"/></sourcefile><sourcefile name="Bitmap.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="1" cb="1"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="15" mb="0" cb="2"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="2"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="2" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="11" ci="0" mb="2" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="23" ci="0" mb="2" cb="0"/><line nr="112" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="12" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="138" mi="17" ci="0" mb="2" cb="0"/><line nr="139" mi="4" ci="0" mb="2" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="9" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="2"/><line nr="167" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="2"/><line nr="169" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="185" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="11" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="2"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="2"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="2" cb="2"/><line nr="199" mi="8" ci="0" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="208" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="17" mb="0" cb="2"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="10" mb="0" cb="0"/><line nr="223" mi="0" ci="7" mb="0" cb="0"/><line nr="227" mi="0" ci="8" mb="0" cb="2"/><line nr="232" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="8" mb="0" cb="2"/><line nr="235" mi="0" ci="10" mb="0" cb="0"/><line nr="237" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="0" ci="4" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="11" mb="0" cb="2"/><line nr="254" mi="0" ci="6" mb="0" cb="0"/><line nr="255" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="309"/><counter type="BRANCH" missed="15" covered="23"/><counter type="LINE" missed="16" covered="58"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="3" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IntAdapters.java"><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="2"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="116" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="141" mi="3" ci="0" mb="0" cb="0"/><line nr="142" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="6" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="5" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="3" mb="1" cb="1"/><line nr="188" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="3" mb="1" cb="1"/><line nr="196" mi="3" ci="0" mb="0" cb="0"/><line nr="198" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="3" mb="1" cb="1"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="12" mb="0" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="98" covered="124"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="21" covered="30"/><counter type="COMPLEXITY" missed="20" covered="21"/><counter type="METHOD" missed="16" covered="18"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="ImmutableIntArraySet.java"><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="10" mb="3" cb="3"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="13" ci="1" mb="2" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="1" cb="1"/><line nr="62" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="9" ci="0" mb="2" cb="0"/><line nr="75" mi="11" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="2" cb="0"/><line nr="83" mi="8" ci="0" mb="0" cb="0"/><line nr="84" mi="9" ci="0" mb="2" cb="0"/><line nr="85" mi="11" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="10" mb="0" cb="2"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="9" mb="0" cb="2"/><line nr="132" mi="0" ci="6" mb="0" cb="2"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="141"/><counter type="BRANCH" missed="14" covered="10"/><counter type="LINE" missed="14" covered="31"/><counter type="COMPLEXITY" missed="12" covered="17"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="929" covered="1629"/><counter type="BRANCH" missed="157" covered="161"/><counter type="LINE" missed="213" covered="384"/><counter type="COMPLEXITY" missed="199" covered="189"/><counter type="METHOD" missed="82" covered="147"/><counter type="CLASS" missed="5" covered="29"/></package><package name="com/jgalgo"><class name="com/jgalgo/JGAlgoConfig" sourcefilename="JGAlgoConfig.java"><method name="setParallelByDefault" desc="(Z)V" line="44"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="JGAlgoConfig.java"><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><counter type="INSTRUCTION" missed="28140" covered="99522"/><counter type="BRANCH" missed="4476" covered="8800"/><counter type="LINE" missed="4333" covered="21860"/><counter type="COMPLEXITY" missed="3994" covered="8049"/><counter type="METHOD" missed="1232" covered="4141"/><counter type="CLASS" missed="161" covered="856"/></report>