memberSearchIndex = [{"p":"com.jgalgo.graph","c":"AbstractGraph","l":"AbstractGraph()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableNetworkAdapter","l":"addEdge(EndpointPair<V>, E)","url":"addEdge(com.google.common.graph.EndpointPair,E)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addEdge(int, int, int)","url":"addEdge(int,int,int)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"addEdge(int, int, int)","url":"addEdge(int,int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addEdge(int, int, int)","url":"addEdge(int,int,int)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addEdge(int, int, int)","url":"addEdge(int,int,int)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addEdge(int, int)","url":"addEdge(int,int)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"addEdge(int, int)","url":"addEdge(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addEdge(int, int)","url":"addEdge(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addEdge(int, int)","url":"addEdge(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addEdge(Integer, Integer, Integer)","url":"addEdge(java.lang.Integer,java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addEdge(Integer, Integer, Integer)","url":"addEdge(java.lang.Integer,java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addEdge(Integer, Integer)","url":"addEdge(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addEdge(Integer, Integer)","url":"addEdge(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableNetworkAdapter","l":"addEdge(V, V, E)","url":"addEdge(V,V,E)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"addEdge(V, V, E)","url":"addEdge(V,V,E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"addEdge(V, V, E)","url":"addEdge(V,V,E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"addEdge(V, V, E)","url":"addEdge(V,V,E)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addEdge(V, V, E)","url":"addEdge(V,V,E)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addEdge(V, V, E)","url":"addEdge(V,V,E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"addEdge(V, V)","url":"addEdge(V,V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addEdge(V, V)","url":"addEdge(V,V)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addEdge(V, V)","url":"addEdge(V,V)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addEdgeRemoveListener(IndexRemoveListener)","url":"addEdgeRemoveListener(com.jgalgo.graph.IndexRemoveListener)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addEdges(EdgeSet<? extends Integer, ? extends Integer>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"addEdges(EdgeSet<? extends Integer, ? extends Integer>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addEdges(EdgeSet<? extends Integer, ? extends Integer>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addEdges(EdgeSet<? extends Integer, ? extends Integer>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"addEdges(EdgeSet<? extends V, ? extends E>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"addEdges(EdgeSet<? extends V, ? extends E>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addEdges(EdgeSet<? extends V, ? extends E>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addEdges(EdgeSet<? extends V, ? extends E>)","url":"addEdges(com.jgalgo.graph.EdgeSet)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addEdgesReassignIds(IEdgeSet)","url":"addEdgesReassignIds(com.jgalgo.graph.IEdgeSet)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"addEdgesReassignIds(IEdgeSet)","url":"addEdgesReassignIds(com.jgalgo.graph.IEdgeSet)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"addEdgesWeights(String, Class<? super T>, T)","url":"addEdgesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"addEdgesWeights(String, Class<? super T>, T)","url":"addEdgesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addEdgesWeights(String, Class<? super T>, T)","url":"addEdgesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addEdgesWeights(String, Class<? super T>, T)","url":"addEdgesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addEdgesWeights(String, Class<? super T>, T)","url":"addEdgesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addEdgesWeights(String, Class<? super T>)","url":"addEdgesWeights(java.lang.String,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addEdgesWeights(String, Class<? super T>)","url":"addEdgesWeights(java.lang.String,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addEdgesWeights(String, Class<? super T>)","url":"addEdgesWeights(java.lang.String,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"addHint(GraphFactory.Hint)","url":"addHint(com.jgalgo.graph.GraphFactory.Hint)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"addHint(GraphFactory.Hint)","url":"addHint(com.jgalgo.graph.GraphFactory.Hint)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"addHint(GraphFactory.Hint)","url":"addHint(com.jgalgo.graph.GraphFactory.Hint)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic","l":"addLeaf(LowestCommonAncestorDynamic.Vertex)","url":"addLeaf(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowInts","l":"addLeaf(LowestCommonAncestorDynamic.Vertex)","url":"addLeaf(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowLongs","l":"addLeaf(LowestCommonAncestorDynamic.Vertex)","url":"addLeaf(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowSimple","l":"addLeaf(LowestCommonAncestorDynamic.Vertex)","url":"addLeaf(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableGraphAdapter","l":"addNode(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableNetworkAdapter","l":"addNode(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableValueGraphAdapter","l":"addNode(V)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IQueries","l":"addQuery(int, int)","url":"addQuery(int,int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IQueries","l":"addQuery(int, int)","url":"addQuery(int,int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IQueries","l":"addQuery(Integer, Integer)","url":"addQuery(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IQueries","l":"addQuery(Integer, Integer)","url":"addQuery(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Queries","l":"addQuery(V, V)","url":"addQuery(V,V)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Queries","l":"addQuery(V, V)","url":"addQuery(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"addVertex()"},{"p":"com.jgalgo.graph","c":"Graph","l":"addVertex()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addVertex()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addVertex()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addVertex()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addVertex(int)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"addVertex(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addVertex(int)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addVertex(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addVertex(Integer)","url":"addVertex(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addVertex(Integer)","url":"addVertex(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"addVertex(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"addVertex(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"addVertex(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addVertex(V)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addVertex(V)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addVertexInt()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"addVertexInt()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addVertexInt()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addVertexInt()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addVertexRemoveListener(IndexRemoveListener)","url":"addVertexRemoveListener(com.jgalgo.graph.IndexRemoveListener)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addVertices(Collection<? extends Integer>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"addVertices(Collection<? extends Integer>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"addVertices(Collection<? extends Integer>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"addVertices(Collection<? extends Integer>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"addVertices(Collection<? extends V>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"addVertices(Collection<? extends V>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addVertices(Collection<? extends V>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addVertices(Collection<? extends V>)","url":"addVertices(java.util.Collection)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"addVerticesWeights(String, Class<? super T>, T)","url":"addVerticesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"addVerticesWeights(String, Class<? super T>, T)","url":"addVerticesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addVerticesWeights(String, Class<? super T>, T)","url":"addVerticesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addVerticesWeights(String, Class<? super T>, T)","url":"addVerticesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addVerticesWeights(String, Class<? super T>, T)","url":"addVerticesWeights(java.lang.String,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"Graph","l":"addVerticesWeights(String, Class<? super T>)","url":"addVerticesWeights(java.lang.String,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"addVerticesWeights(String, Class<? super T>)","url":"addVerticesWeights(java.lang.String,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"addVerticesWeights(String, Class<? super T>)","url":"addVerticesWeights(java.lang.String,java.lang.Class)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"adjacentEdges(E)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"adjacentNodes(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"adjacentNodes(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"adjacentNodes(V)"},{"p":"com.jgalgo.alg.common","c":"EdgeDirection","l":"All"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutAllSt","l":"allMinimumCuts(Graph<V, E>, WeightFunction<E>, V, V)","url":"allMinimumCuts(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllSt","l":"allMinimumCuts(Graph<V, E>, WeightFunction<V>, V, V)","url":"allMinimumCuts(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllGlobal","l":"allMinimumCuts(Graph<V, E>, WeightFunction<V>)","url":"allMinimumCuts(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.graph","c":"EdgeSet","l":"allOf(Graph<V, E>)","url":"allOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IEdgeSet","l":"allOf(IntGraph)","url":"allOf(com.jgalgo.graph.IntGraph)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"allowParallelEdges()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"allowParallelEdges()"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"allowParallelEdges()"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"allowParallelEdges(boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"allowParallelEdges(boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"allowParallelEdges(boolean)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"allowSelfEdges()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"allowSelfEdges()"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"allowSelfEdges()"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"allowSelfEdges(boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"allowSelfEdges(boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"allowSelfEdges(boolean)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"allowsParallelEdges()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"allowsSelfLoops()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"allowsSelfLoops()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"allowsSelfLoops()"},{"p":"com.jgalgo.alg.shortestpath","c":"SimplePathsEnumerator","l":"allSimplePaths(Graph<V, E>, V, V)","url":"allSimplePaths(com.jgalgo.graph.Graph,V,V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"asGraph()"},{"p":"com.jgalgo.graph","c":"WeightFunctions","l":"asIntGraphWeightFunc(WeightFunction<Integer>)","url":"asIntGraphWeightFunc(com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"backtrackEdge(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"backtrackEdge(Integer)","url":"backtrackEdge(java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Result","l":"backtrackEdge(V)"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"BarabasiAlbertGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"BarabasiAlbertGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.example","c":"BfsDfsExample","l":"bfsExample()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"bfsLayers(Graph<V, E>, V)","url":"bfsLayers(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"bfsTree(Graph<V, E>, V, boolean)","url":"bfsTree(com.jgalgo.graph.Graph,V,boolean)"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"bfsTree(Graph<V, E>, V)","url":"bfsTree(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgoAbstract","l":"BiConnectedComponentsAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgoHopcroftTarjan","l":"BiConnectedComponentsAlgoHopcroftTarjan()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo.Builder","l":"bipartite(boolean)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"blockEdges(int)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"blockEdges(int)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"blocksGraph()"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"blocksGraph()"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"blocksGraph(boolean, boolean)","url":"blocksGraph(boolean,boolean)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"blocksGraph(boolean, boolean)","url":"blocksGraph(boolean,boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"blockSite(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.Result","l":"blockSite(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"blockSiteInt(int)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"blockSubGraph(int, boolean, boolean)","url":"blockSubGraph(int,boolean,boolean)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"blockSubGraph(int, boolean, boolean)","url":"blockSubGraph(int,boolean,boolean)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"blockSubGraph(int)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"blockSubGraph(int)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"blockVertices(int)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"blockVertices(int)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow.Builder","l":"build()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo.Builder","l":"build()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.Builder","l":"build()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Builder","l":"build()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"build()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"build()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"build()"},{"p":"com.jgalgo.graph","c":"IdBuilderInt","l":"build(IntSet)","url":"build(it.unimi.dsi.fastutil.ints.IntSet)"},{"p":"com.jgalgo.graph","c":"IdBuilderInt","l":"build(Set<Integer>)","url":"build(java.util.Set)"},{"p":"com.jgalgo.graph","c":"IdBuilder","l":"build(Set<K>)","url":"build(java.util.Set)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"builder()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo","l":"builder()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs","l":"builder()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource","l":"builder()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"buildMutable()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"buildMutable()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"buildMutable()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo.Builder","l":"cardinality(boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.Builder","l":"cardinality(boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Builder","l":"cardinality(boolean)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"CardinalityWeightFunction"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"CardinalityWeightFunction"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"cardinalityWeightFunction()"},{"p":"com.jgalgo.alg.distancemeasures","c":"DistanceMeasures","l":"center()"},{"p":"com.jgalgo.alg.distancemeasures","c":"IDistanceMeasures","l":"center()"},{"p":"com.jgalgo.alg.cycle","c":"ChinesePostmanAbstract","l":"ChinesePostmanAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cycle","c":"ChinesePostmanImpl","l":"ChinesePostmanImpl()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"clear()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"clear()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic","l":"clear()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowInts","l":"clear()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowLongs","l":"clear()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowSimple","l":"clear()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Queries","l":"clear()"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Queries","l":"clear()"},{"p":"com.jgalgo.graph","c":"Graph","l":"clear()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"clear()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"clear()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"clearEdges()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"clearEdges()"},{"p":"com.jgalgo.graph","c":"Graph","l":"clearEdges()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"clearEdges()"},{"p":"com.jgalgo.alg.closure","c":"ClosuresEnumeratorAbstract","l":"ClosuresEnumeratorAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.closure","c":"ClosuresEnumeratorSchrageBaker","l":"ClosuresEnumeratorSchrageBaker()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.closure","c":"ClosuresEnumerator","l":"closuresIter(Graph<V, E>)","url":"closuresIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.closure","c":"ClosuresEnumeratorAbstract","l":"closuresIter(Graph<V, E>)","url":"closuresIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.color","c":"ColoringAlgoAbstract","l":"ColoringAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.color","c":"ColoringDSatur","l":"ColoringDSatur()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.example","c":"ColoringExample","l":"coloringExample()"},{"p":"com.jgalgo.alg.color","c":"ColoringGreedy","l":"ColoringGreedy()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.color","c":"ColoringRecursiveLargestFirst","l":"ColoringRecursiveLargestFirst()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"LineGraphGenerator","l":"commonVertexWeights(String)","url":"commonVertexWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"compare(int, int)","url":"compare(int,int)"},{"p":"com.jgalgo.graph","c":"IWeightFunctionInt","l":"compare(int, int)","url":"compare(int,int)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightFunctionInt","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"compare(Integer, Integer)","url":"compare(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"compare(K, K)","url":"compare(K,K)"},{"p":"com.jgalgo.graph","c":"WeightFunctionInt","l":"compare(K, K)","url":"compare(K,K)"},{"p":"com.jgalgo.gen","c":"ComplementGraphGenerator","l":"ComplementGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"ComplementGraphGenerator","l":"ComplementGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"CompleteBipartiteGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"CompleteBipartiteGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"CompleteGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"CompleteGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs","l":"computeAllShortestPaths(Graph<V, E>, WeightFunction<E>)","url":"computeAllShortestPaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairsAbstract","l":"computeAllShortestPaths(Graph<V, E>, WeightFunction<E>)","url":"computeAllShortestPaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.color","c":"ColoringAlgo","l":"computeColoring(Graph<V, E>)","url":"computeColoring(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.color","c":"ColoringAlgoAbstract","l":"computeColoring(Graph<V, E>)","url":"computeColoring(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo","l":"computeCores(Graph<V, E>, EdgeDirection)","url":"computeCores(com.jgalgo.graph.Graph,com.jgalgo.alg.common.EdgeDirection)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgoAbstract","l":"computeCores(Graph<V, E>, EdgeDirection)","url":"computeCores(com.jgalgo.graph.Graph,com.jgalgo.alg.common.EdgeDirection)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo","l":"computeCores(Graph<V, E>)","url":"computeCores(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.euler","c":"EulerianTourAlgo","l":"computeEulerianTour(Graph<V, E>)","url":"computeEulerianTour(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.euler","c":"EulerianTourAlgo","l":"computeEulerianTourIfExist(Graph<V, E>)","url":"computeEulerianTourIfExist(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima","l":"computeHeaviestEdgeInTreePaths(Graph<V, E>, WeightFunction<E>, TreePathMaxima.Queries<V, E>)","url":"computeHeaviestEdgeInTreePaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.alg.tree.TreePathMaxima.Queries)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaximaAbstract","l":"computeHeaviestEdgeInTreePaths(Graph<V, E>, WeightFunction<E>, TreePathMaxima.Queries<V, E>)","url":"computeHeaviestEdgeInTreePaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.alg.tree.TreePathMaxima.Queries)"},{"p":"com.jgalgo.alg.connect","c":"KEdgeConnectedComponentsAlgo","l":"computeKEdgeConnectedComponents(Graph<V, E>, int)","url":"computeKEdgeConnectedComponents(com.jgalgo.graph.Graph,int)"},{"p":"com.jgalgo.alg.connect","c":"KEdgeConnectedComponentsAlgoAbstract","l":"computeKEdgeConnectedComponents(Graph<V, E>, int)","url":"computeKEdgeConnectedComponents(com.jgalgo.graph.Graph,int)"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsSt","l":"computeKShortestPaths(Graph<V, E>, WeightFunction<E>, V, V, int)","url":"computeKShortestPaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V,int)"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStAbstract","l":"computeKShortestPaths(Graph<V, E>, WeightFunction<E>, V, V, int)","url":"computeKShortestPaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V,int)"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlow","l":"computeMaximumFlow(Graph<V, E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMaximumFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowAbstract","l":"computeMaximumFlow(Graph<V, E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMaximumFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlow","l":"computeMaximumFlow(Graph<V, E>, WeightFunction<E>, V, V)","url":"computeMaximumFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowAbstract","l":"computeMaximumFlow(Graph<V, E>, WeightFunction<E>, V, V)","url":"computeMaximumFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo","l":"computeMaximumMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMaximumMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstract","l":"computeMaximumMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMaximumMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo","l":"computeMaximumPerfectMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMaximumPerfectMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstract","l":"computeMaximumPerfectMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMaximumPerfectMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"computeMinCostFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<V>)","url":"computeMinCostFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstract","l":"computeMinCostFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<V>)","url":"computeMinCostFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"computeMinCostFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<V>)","url":"computeMinCostFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstract","l":"computeMinCostFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<V>)","url":"computeMinCostFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstract","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, V, V)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstract","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, V, V)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstract","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<E>, V, V)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstract","l":"computeMinCostMaxFlow(Graph<V, E>, WeightFunction<E>, WeightFunction<E>, WeightFunction<E>, V, V)","url":"computeMinCostMaxFlow(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutSt","l":"computeMinimumCut(Graph<V, E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutStAbstract","l":"computeMinimumCut(Graph<V, E>, WeightFunction<E>, Collection<V>, Collection<V>)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutSt","l":"computeMinimumCut(Graph<V, E>, WeightFunction<E>, V, V)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutStAbstract","l":"computeMinimumCut(Graph<V, E>, WeightFunction<E>, V, V)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutGlobal","l":"computeMinimumCut(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutGlobalAbstract","l":"computeMinimumCut(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutSt","l":"computeMinimumCut(Graph<V, E>, WeightFunction<V>, V, V)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutStAbstract","l":"computeMinimumCut(Graph<V, E>, WeightFunction<V>, V, V)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutGlobal","l":"computeMinimumCut(Graph<V, E>, WeightFunction<V>)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutGlobalAbstract","l":"computeMinimumCut(Graph<V, E>, WeightFunction<V>)","url":"computeMinimumCut(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowPushRelabel","l":"computeMinimumCut(IndexGraph, IWeightFunction, int, int)","url":"computeMinimumCut(com.jgalgo.graph.IndexGraph,com.jgalgo.graph.IWeightFunction,int,int)"},{"p":"com.jgalgo.alg.span","c":"MinimumDirectedSpanningTree","l":"computeMinimumDirectedSpanningTree(Graph<V, E>, WeightFunction<E>, V)","url":"computeMinimumDirectedSpanningTree(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V)"},{"p":"com.jgalgo.alg.span","c":"MinimumDirectedSpanningTreeAbstract","l":"computeMinimumDirectedSpanningTree(Graph<V, E>, WeightFunction<E>, V)","url":"computeMinimumDirectedSpanningTree(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V)"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgo","l":"computeMinimumDominationSet(Graph<V, E>, WeightFunction<V>, EdgeDirection)","url":"computeMinimumDominationSet(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.alg.common.EdgeDirection)"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgoAbstract","l":"computeMinimumDominationSet(Graph<V, E>, WeightFunction<V>, EdgeDirection)","url":"computeMinimumDominationSet(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,com.jgalgo.alg.common.EdgeDirection)"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgo","l":"computeMinimumDominationSet(Graph<V, E>, WeightFunction<V>)","url":"computeMinimumDominationSet(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cover","c":"EdgeCover","l":"computeMinimumEdgeCover(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumEdgeCover(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cover","c":"EdgeCoverAbstract","l":"computeMinimumEdgeCover(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumEdgeCover(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo","l":"computeMinimumMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstract","l":"computeMinimumMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cycle","c":"MinimumMeanCycle","l":"computeMinimumMeanCycle(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumMeanCycle(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cycle","c":"MinimumMeanCycleAbstract","l":"computeMinimumMeanCycle(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumMeanCycle(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo","l":"computeMinimumPerfectMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumPerfectMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstract","l":"computeMinimumPerfectMatching(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumPerfectMatching(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTree","l":"computeMinimumSpanningTree(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumSpanningTree(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeAbstract","l":"computeMinimumSpanningTree(Graph<V, E>, WeightFunction<E>)","url":"computeMinimumSpanningTree(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cover","c":"VertexCover","l":"computeMinimumVertexCover(Graph<V, E>, WeightFunction<V>)","url":"computeMinimumVertexCover(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cover","c":"VertexCoverAbstract","l":"computeMinimumVertexCover(Graph<V, E>, WeightFunction<V>)","url":"computeMinimumVertexCover(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cycle","c":"ChinesePostman","l":"computeShortestEdgeVisitorCircle(Graph<V, E>, WeightFunction<E>)","url":"computeShortestEdgeVisitorCircle(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cycle","c":"ChinesePostman","l":"computeShortestEdgeVisitorCircleIfExist(Graph<V, E>, WeightFunction<E>)","url":"computeShortestEdgeVisitorCircleIfExist(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.cycle","c":"ChinesePostmanAbstract","l":"computeShortestEdgeVisitorCircleIfExist(Graph<V, E>, WeightFunction<E>)","url":"computeShortestEdgeVisitorCircleIfExist(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathHeuristicSt","l":"computeShortestPath(Graph<V, E>, WeightFunction<E>, V, V, ToDoubleFunction<V>)","url":"computeShortestPath(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V,java.util.function.ToDoubleFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathHeuristicStAbstract","l":"computeShortestPath(Graph<V, E>, WeightFunction<E>, V, V, ToDoubleFunction<V>)","url":"computeShortestPath(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V,java.util.function.ToDoubleFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSt","l":"computeShortestPath(Graph<V, E>, WeightFunction<E>, V, V)","url":"computeShortestPath(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathHeuristicSt","l":"computeShortestPath(IntGraph, IWeightFunction, int, int, IntToDoubleFunction)","url":"computeShortestPath(com.jgalgo.graph.IntGraph,com.jgalgo.graph.IWeightFunction,int,int,java.util.function.IntToDoubleFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathHeuristicStAbstract","l":"computeShortestPath(IntGraph, IWeightFunction, int, int, IntToDoubleFunction)","url":"computeShortestPath(com.jgalgo.graph.IntGraph,com.jgalgo.graph.IWeightFunction,int,int,java.util.function.IntToDoubleFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSt","l":"computeShortestPathAndWeight(Graph<V, E>, WeightFunction<E>, V, V)","url":"computeShortestPathAndWeight(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathStAbstract","l":"computeShortestPathAndWeight(Graph<V, E>, WeightFunction<E>, V, V)","url":"computeShortestPathAndWeight(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource","l":"computeShortestPaths(Graph<V, E>, WeightFunction<E>, V)","url":"computeShortestPaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceAbstract","l":"computeShortestPaths(Graph<V, E>, WeightFunction<E>, V)","url":"computeShortestPaths(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"Tsp","l":"computeShortestTour(Graph<V, E>, WeightFunction<E>)","url":"computeShortestTour(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"TspAbstract","l":"computeShortestTour(Graph<V, E>, WeightFunction<E>)","url":"computeShortestTour(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeAlgo","l":"computeSteinerTree(Graph<V, E>, WeightFunction<E>, Collection<V>)","url":"computeSteinerTree(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,java.util.Collection)"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeAlgoAbstract","l":"computeSteinerTree(Graph<V, E>, WeightFunction<E>, Collection<V>)","url":"computeSteinerTree(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,java.util.Collection)"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeMehlhorn","l":"computeSteinerTree(IndexGraph, IWeightFunction, IntCollection)","url":"computeSteinerTree(com.jgalgo.graph.IndexGraph,com.jgalgo.graph.IWeightFunction,it.unimi.dsi.fastutil.ints.IntCollection)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs","l":"computeSubsetShortestPaths(Graph<V, E>, Collection<V>, WeightFunction<E>)","url":"computeSubsetShortestPaths(com.jgalgo.graph.Graph,java.util.Collection,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairsAbstract","l":"computeSubsetShortestPaths(Graph<V, E>, Collection<V>, WeightFunction<E>)","url":"computeSubsetShortestPaths(com.jgalgo.graph.Graph,java.util.Collection,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo","l":"computeTopologicalSorting(Graph<V, E>)","url":"computeTopologicalSorting(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo","l":"computeTopologicalSortingIfExist(Graph<V, E>)","url":"computeTopologicalSortingIfExist(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgoAbstract","l":"computeTopologicalSortingIfExist(Graph<V, E>)","url":"computeTopologicalSortingIfExist(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo","l":"computeVoronoiCells(Graph<V, E>, Collection<V>, WeightFunction<E>)","url":"computeVoronoiCells(com.jgalgo.graph.Graph,java.util.Collection,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgoAbstract","l":"computeVoronoiCells(Graph<V, E>, Collection<V>, WeightFunction<E>)","url":"computeVoronoiCells(com.jgalgo.graph.Graph,java.util.Collection,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"containsEdge(E)"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"containsEdge(E)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"containsEdge(int, int)","url":"containsEdge(int,int)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"containsEdge(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"containsEdge(Integer, Integer)","url":"containsEdge(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"containsEdge(Integer)","url":"containsEdge(java.lang.Integer)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"containsEdge(V, V)","url":"containsEdge(V,V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"containsEdge(V, V)","url":"containsEdge(V,V)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"containsParallelEdges(Graph<V, E>)","url":"containsParallelEdges(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"containsVertex(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"copy()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"copy()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"copy()"},{"p":"com.jgalgo.graph","c":"Graph","l":"copy(boolean, boolean)","url":"copy(boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"copy(boolean, boolean)","url":"copy(boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"copy(boolean, boolean)","url":"copy(boolean,boolean)"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"copyWeights(boolean, boolean)","url":"copyWeights(boolean,boolean)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.IResult","l":"coreCrust(int)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.Result","l":"coreCrust(int)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgoAbstract","l":"CoresAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgoImpl","l":"CoresAlgoImpl()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.IResult","l":"coreShell(int)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.Result","l":"coreShell(int)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.IResult","l":"coreVertices(int)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.Result","l":"coreVertices(int)"},{"p":"com.jgalgo.graph","c":"Weights","l":"createExternalEdgesWeights(Graph<?, E>, Class<? super T>, T)","url":"createExternalEdgesWeights(com.jgalgo.graph.Graph,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"Weights","l":"createExternalEdgesWeights(Graph<?, E>, Class<? super T>)","url":"createExternalEdgesWeights(com.jgalgo.graph.Graph,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"createExternalEdgesWeights(IntGraph, Class<? super T>, T)","url":"createExternalEdgesWeights(com.jgalgo.graph.IntGraph,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"createExternalEdgesWeights(IntGraph, Class<? super T>)","url":"createExternalEdgesWeights(com.jgalgo.graph.IntGraph,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"Weights","l":"createExternalVerticesWeights(Graph<V, ?>, Class<? super T>, T)","url":"createExternalVerticesWeights(com.jgalgo.graph.Graph,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"Weights","l":"createExternalVerticesWeights(Graph<V, ?>, Class<? super T>)","url":"createExternalVerticesWeights(com.jgalgo.graph.Graph,java.lang.Class)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"createExternalVerticesWeights(IntGraph, Class<? super T>, T)","url":"createExternalVerticesWeights(com.jgalgo.graph.IntGraph,java.lang.Class,T)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"createExternalVerticesWeights(IntGraph, Class<? super T>)","url":"createExternalVerticesWeights(com.jgalgo.graph.IntGraph,java.lang.Class)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"crossEdges()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"crossEdges()"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"crossEdges(int, int)","url":"crossEdges(int,int)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"crossEdges(int, int)","url":"crossEdges(int,int)"},{"p":"com.jgalgo.alg.shortestpath","c":"NegativeCycleException","l":"cycle()"},{"p":"com.jgalgo.alg.shortestpath","c":"NegativeCycleException","l":"cycle(Graph<V, E>)","url":"cycle(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.cycle","c":"CyclesEnumeratorAbstract","l":"CyclesEnumeratorAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cycle","c":"CyclesEnumeratorJohnson","l":"CyclesEnumeratorJohnson()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cycle","c":"CyclesEnumeratorTarjan","l":"CyclesEnumeratorTarjan()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cycle","c":"CyclesEnumerator","l":"cyclesIter(Graph<V, E>)","url":"cyclesIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.cycle","c":"CyclesEnumeratorAbstract","l":"cyclesIter(Graph<V, E>)","url":"cyclesIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Builder","l":"dag(boolean)"},{"p":"com.jgalgo.graph","c":"IdBuilderInt","l":"defaultBuilder()"},{"p":"com.jgalgo.graph","c":"IdBuilder","l":"defaultBuilder(Class<K>)","url":"defaultBuilder(java.lang.Class)"},{"p":"com.jgalgo.graph","c":"IdBuilderInt","l":"defaultFactory()"},{"p":"com.jgalgo.graph","c":"IdBuilder","l":"defaultFactory(Class<K>)","url":"defaultFactory(java.lang.Class)"},{"p":"com.jgalgo.graph","c":"WeightsBool","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsByte","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsChar","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsDouble","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsFloat","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsInt","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsLong","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsObj","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"WeightsShort","l":"defaultWeight()"},{"p":"com.jgalgo.graph","c":"Weights","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsBool","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsByte","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsChar","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsDouble","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsFloat","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsInt","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsLong","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsObj","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.graph","c":"WeightsShort","l":"defaultWeightAsObj()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"degree(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"degree(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"degreeOf(V)"},{"p":"com.jgalgo.graph","c":"GraphFactory.Hint","l":"DenseGraph"},{"p":"com.jgalgo.example","c":"BfsDfsExample","l":"dfsExample()"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter","l":"dfsTree(Graph<V, E>, V, boolean)","url":"dfsTree(com.jgalgo.graph.Graph,V,boolean)"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter","l":"dfsTree(Graph<V, E>, V)","url":"dfsTree(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.distancemeasures","c":"DistanceMeasures","l":"diameter()"},{"p":"com.jgalgo.gen","c":"DifferenceGraphGenerator","l":"DifferenceGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"DifferenceGraphGenerator","l":"DifferenceGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.io","c":"Digraph6GraphReader","l":"Digraph6GraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"Digraph6GraphWriter","l":"Digraph6GraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"DimacsGraphReader","l":"DimacsGraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"DimacsGraphWriter","l":"DimacsGraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"directed()"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"directed()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"directed()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"directed()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"directed()"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"directed()"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"directed(boolean)"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"directed(boolean)"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"directed(boolean)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"directed(boolean)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"directed(boolean)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"directed(boolean)"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"directedAll()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"directedAll()"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"directedAll()"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"directedLeftToRight()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"directedLeftToRight()"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"directedLeftToRight()"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"directedRightToLeft()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"directedRightToLeft()"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"directedRightToLeft()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.IResult","l":"distance(int, int)","url":"distance(int,int)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"distance(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"distance(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.IResult","l":"distance(Integer, Integer)","url":"distance(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"distance(Integer)","url":"distance(java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"distance(Integer)","url":"distance(java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.Result","l":"distance(V, V)","url":"distance(V,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Result","l":"distance(V)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.Result","l":"distance(V)"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgoAbstract","l":"DominatingSetAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgoGreedy","l":"DominatingSetAlgoGreedy()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.example","c":"LowestCommonAncestorExample","l":"dynamicLcaExample()"},{"p":"com.jgalgo.alg.distancemeasures","c":"IDistanceMeasures","l":"eccentricity(int)"},{"p":"com.jgalgo.alg.distancemeasures","c":"IDistanceMeasures","l":"eccentricity(Integer)","url":"eccentricity(java.lang.Integer)"},{"p":"com.jgalgo.alg.distancemeasures","c":"DistanceMeasures","l":"eccentricity(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"edgeBuilder()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"edgeBuilder()"},{"p":"com.jgalgo.graph","c":"Graph","l":"edgeBuilder()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"edgeBuilder()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"edgeBuilder()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"edgeBuilder()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgeBuilder()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"edgeBuilder()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"edgeConnectingOrNull(V, V)","url":"edgeConnectingOrNull(V,V)"},{"p":"com.jgalgo.alg.cover","c":"EdgeCoverAbstract","l":"EdgeCoverAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cover","c":"EdgeCoverCardinality","l":"EdgeCoverCardinality()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cover","c":"EdgeCoverWeighted","l":"EdgeCoverWeighted()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"DifferenceGraphGenerator","l":"edgeDifferenceByEndpoints()"},{"p":"com.jgalgo.gen","c":"SymmetricDifferenceGraphGenerator","l":"edgeDifferenceByEndpoints()"},{"p":"com.jgalgo.gen","c":"DifferenceGraphGenerator","l":"edgeDifferenceById()"},{"p":"com.jgalgo.gen","c":"SymmetricDifferenceGraphGenerator","l":"edgeDifferenceById()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"edgeEndpoint(E, V)","url":"edgeEndpoint(E,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"edgeEndpoint(E, V)","url":"edgeEndpoint(E,V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"edgeEndpoint(E, V)","url":"edgeEndpoint(E,V)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgeEndpoint(int, int)","url":"edgeEndpoint(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgeEndpoint(Integer, Integer)","url":"edgeEndpoint(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"edgeIntersectByEndpoints()"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"edgeIntersectById()"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"edgeIter()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"edgeIter()"},{"p":"com.jgalgo.example","c":"EdgeIterationExample","l":"edgeIterationExample()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"edgeOrder()"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter","l":"edgePath()"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter.Int","l":"edgePath()"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"edgeProbabilities(double, double, double, double)","url":"edgeProbabilities(double,double,double,double)"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"edgeProbability(double)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"edgeProbability(double)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"edges()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"edges()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"edges()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"edges()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"edges()"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"edges()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"edges()"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"edges()"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"edges()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTree.IResult","l":"edges()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTree.Result","l":"edges()"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeAlgo.IResult","l":"edges()"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeAlgo.Result","l":"edges()"},{"p":"com.jgalgo.graph","c":"Graph","l":"edges()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"edges()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"edges()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edges()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"edges()"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"ComplementGraphGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"LineGraphGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"edges(IdBuilder<E>)","url":"edges(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"edges(int, IdBuilder<E>)","url":"edges(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"edges(int, IdBuilder<E>)","url":"edges(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"edges(int, IdBuilder<E>)","url":"edges(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"edges(int)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"edges(int)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"edges(int)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"edgesConnecting(V, V)","url":"edgesConnecting(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"edgeSet()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"edgesOf(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"edgeSource(E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"edgeSource(E)"},{"p":"com.jgalgo.graph","c":"Graph","l":"edgeSource(E)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgeSource(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgeSource(Integer)","url":"edgeSource(java.lang.Integer)"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"edgesPerStep(int)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder.ReIndexedGraph","l":"edgesReIndexing"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"edgesWeights(String)","url":"edgesWeights(java.lang.String)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"edgesWeights(String)","url":"edgesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"Graph","l":"edgesWeights(String)","url":"edgesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"edgesWeights(String)","url":"edgesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgesWeights(String)","url":"edgesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"edgesWeights(String)","url":"edgesWeights(java.lang.String)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"edgesWeightsKeys()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"edgesWeightsKeys()"},{"p":"com.jgalgo.graph","c":"Graph","l":"edgesWeightsKeys()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"edgesWeightsKeys()"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"edgesWeightsKeys(Set<String>)","url":"edgesWeightsKeys(java.util.Set)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"edgeTarget(E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"edgeTarget(E)"},{"p":"com.jgalgo.graph","c":"Graph","l":"edgeTarget(E)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgeTarget(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"edgeTarget(Integer)","url":"edgeTarget(java.lang.Integer)"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"edgeUnionByEndpoints()"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"edgeUnionById()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"edgeValueOrDefault(EndpointPair<V>, ValueT)","url":"edgeValueOrDefault(com.google.common.graph.EndpointPair,ValueT)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"edgeValueOrDefault(V, V, ValueT)","url":"edgeValueOrDefault(V,V,ValueT)"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"emptyGraph(Collection<? extends V>)","url":"emptyGraph(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"EmptyGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"EmptyGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"ensureEdgeCapacity(int)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"ensureEdgeCapacity(int)"},{"p":"com.jgalgo.graph","c":"Graph","l":"ensureEdgeCapacity(int)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"ensureEdgeCapacity(int)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"ensureVertexCapacity(int)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"ensureVertexCapacity(int)"},{"p":"com.jgalgo.graph","c":"Graph","l":"ensureVertexCapacity(int)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"ensureVertexCapacity(int)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.jgalgo.graph","c":"AbstractGraph","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"expectedEdgesNum(int)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"expectedEdgesNum(int)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"expectedEdgesNum(int)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"expectedVerticesNum(int)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"expectedVerticesNum(int)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"expectedVerticesNum(int)"},{"p":"com.jgalgo.graph","c":"GraphFactory.Hint","l":"FastEdgeLookup"},{"p":"com.jgalgo.graph","c":"GraphFactory.Hint","l":"FastEdgeRemoval"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo","l":"findBiConnectedComponents(Graph<V, E>)","url":"findBiConnectedComponents(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgoAbstract","l":"findBiConnectedComponents(Graph<V, E>)","url":"findBiConnectedComponents(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.connect","c":"KVertexConnectedComponentsAlgo","l":"findKVertexConnectedComponents(Graph<V, E>, int)","url":"findKVertexConnectedComponents(com.jgalgo.graph.Graph,int)"},{"p":"com.jgalgo.alg.connect","c":"KVertexConnectedComponentsAlgoAbstract","l":"findKVertexConnectedComponents(Graph<V, E>, int)","url":"findKVertexConnectedComponents(com.jgalgo.graph.Graph,int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStatic.IDataStructure","l":"findLca(int, int)","url":"findLca(int,int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStatic.IDataStructure","l":"findLca(Integer, Integer)","url":"findLca(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStatic.DataStructure","l":"findLca(V, V)","url":"findLca(V,V)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic","l":"findLowestCommonAncestor(LowestCommonAncestorDynamic.Vertex, LowestCommonAncestorDynamic.Vertex)","url":"findLowestCommonAncestor(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex,com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowInts","l":"findLowestCommonAncestor(LowestCommonAncestorDynamic.Vertex, LowestCommonAncestorDynamic.Vertex)","url":"findLowestCommonAncestor(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex,com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowLongs","l":"findLowestCommonAncestor(LowestCommonAncestorDynamic.Vertex, LowestCommonAncestorDynamic.Vertex)","url":"findLowestCommonAncestor(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex,com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowSimple","l":"findLowestCommonAncestor(LowestCommonAncestorDynamic.Vertex, LowestCommonAncestorDynamic.Vertex)","url":"findLowestCommonAncestor(com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex,com.jgalgo.alg.tree.LowestCommonAncestorDynamic.Vertex)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline","l":"findLowestCommonAncestors(Graph<V, E>, V, LowestCommonAncestorOffline.Queries<V, E>)","url":"findLowestCommonAncestors(com.jgalgo.graph.Graph,V,com.jgalgo.alg.tree.LowestCommonAncestorOffline.Queries)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOfflineAbstract","l":"findLowestCommonAncestors(Graph<V, E>, V, LowestCommonAncestorOffline.Queries<V, E>)","url":"findLowestCommonAncestors(com.jgalgo.graph.Graph,V,com.jgalgo.alg.tree.LowestCommonAncestorOffline.Queries)"},{"p":"com.jgalgo.alg.bipartite","c":"BipartiteGraphs","l":"findPartition(Graph<V, E>, boolean)","url":"findPartition(com.jgalgo.graph.Graph,boolean)"},{"p":"com.jgalgo.alg.bipartite","c":"BipartiteGraphs","l":"findPartition(Graph<V, E>)","url":"findPartition(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"findPath(Graph<V, E>, V, V)","url":"findPath(com.jgalgo.graph.Graph,V,V)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"findPath(IntGraph, int, int)","url":"findPath(com.jgalgo.graph.IntGraph,int,int)"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsAlgo","l":"findStronglyConnectedComponents(Graph<V, E>)","url":"findStronglyConnectedComponents(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsAlgoAbstract","l":"findStronglyConnectedComponents(Graph<V, E>)","url":"findStronglyConnectedComponents(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.connect","c":"WeaklyConnectedComponentsAlgo","l":"findWeaklyConnectedComponents(Graph<V, E>)","url":"findWeaklyConnectedComponents(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.connect","c":"WeaklyConnectedComponentsAlgoAbstract","l":"findWeaklyConnectedComponents(Graph<V, E>)","url":"findWeaklyConnectedComponents(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"fromArray(IndexGraph, int[], int)","url":"fromArray(com.jgalgo.graph.IndexGraph,int[],int)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"fromBitmap(IndexGraph, Bitmap)","url":"fromBitmap(com.jgalgo.graph.IndexGraph,com.jgalgo.internal.util.Bitmap)"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"fromMap(Graph<V, E>, Map<V, Boolean>)","url":"fromMap(com.jgalgo.graph.Graph,java.util.Map)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"fromMap(Graph<V, E>, Object2IntMap<V>)","url":"fromMap(com.jgalgo.graph.Graph,it.unimi.dsi.fastutil.objects.Object2IntMap)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"fromMap(IntGraph, Int2IntMap)","url":"fromMap(com.jgalgo.graph.IntGraph,it.unimi.dsi.fastutil.ints.Int2IntMap)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"fromMap(IntGraph, Map<Integer, Boolean>)","url":"fromMap(com.jgalgo.graph.IntGraph,java.util.Map)"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"fromMapping(Graph<V, E>, Predicate<V>)","url":"fromMapping(com.jgalgo.graph.Graph,java.util.function.Predicate)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"fromMapping(Graph<V, E>, ToIntFunction<V>)","url":"fromMapping(com.jgalgo.graph.Graph,java.util.function.ToIntFunction)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"fromMapping(IntGraph, IntPredicate)","url":"fromMapping(com.jgalgo.graph.IntGraph,java.util.function.IntPredicate)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"fromMapping(IntGraph, IntUnaryOperator)","url":"fromMapping(com.jgalgo.graph.IntGraph,java.util.function.IntUnaryOperator)"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"fromWeights(Graph<V, E>, WeightsBool<V>)","url":"fromWeights(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightsBool)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"fromWeights(IntGraph, IWeightsBool)","url":"fromWeights(com.jgalgo.graph.IntGraph,com.jgalgo.graph.IWeightsBool)"},{"p":"com.jgalgo.gen","c":"GraphGenerator","l":"generate()"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"ComplementGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"DifferenceGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"GraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"LineGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"SymmetricDifferenceGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"generateIntoBuilder()"},{"p":"com.jgalgo.gen","c":"GraphGenerator","l":"generateMutable()"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"get(int)"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"get(Integer)","url":"get(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"WeightsBool","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsByte","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsChar","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsDouble","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsFloat","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsInt","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsLong","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsObj","l":"get(K)"},{"p":"com.jgalgo.graph","c":"WeightsShort","l":"get(K)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getAllEdges(V, V)","url":"getAllEdges(V,V)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"getAsObj(int)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"getAsObj(Integer)","url":"getAsObj(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"Weights","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsBool","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsByte","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsChar","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsDouble","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsFloat","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsInt","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsLong","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsObj","l":"getAsObj(K)"},{"p":"com.jgalgo.graph","c":"WeightsShort","l":"getAsObj(K)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.IResult","l":"getBiCcEdges(int)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.Result","l":"getBiCcEdges(int)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.IResult","l":"getBiCcVertices(int)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.Result","l":"getBiCcVertices(int)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.Result","l":"getBlockGraph()"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.IResult","l":"getCutVertices()"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.Result","l":"getCutVertices()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic.Vertex","l":"getData()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"getEdge(int, int)","url":"getEdge(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"getEdge(Integer, Integer)","url":"getEdge(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"getEdge(V, V)","url":"getEdge(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getEdge(V, V)","url":"getEdge(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"getEdge(V, V)","url":"getEdge(V,V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"getEdge(V, V)","url":"getEdge(V,V)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"getEdges(int, int)","url":"getEdges(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"getEdges(Integer, Integer)","url":"getEdges(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"getEdges(V, V)","url":"getEdges(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"getEdges(V, V)","url":"getEdges(V,V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"getEdges(V, V)","url":"getEdges(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getEdgeSource(E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getEdgeSupplier()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getEdgeTarget(E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getEdgeWeight(E)"},{"p":"com.jgalgo.alg.bipartite","c":"BipartiteGraphs","l":"getExistingPartition(Graph<V, E>)","url":"getExistingPartition(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.bipartite","c":"BipartiteGraphs","l":"getExistingPartition(IntGraph)","url":"getExistingPartition(com.jgalgo.graph.IntGraph)"},{"p":"com.jgalgo.alg.flow","c":"Flow","l":"getFlow(E)"},{"p":"com.jgalgo.alg.flow","c":"IFlow","l":"getFlow(int)"},{"p":"com.jgalgo.alg.flow","c":"IFlow","l":"getFlow(Integer)","url":"getFlow(java.lang.Integer)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IResult","l":"getHeaviestEdge(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Result","l":"getHeaviestEdge(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IResult","l":"getHeaviestEdgeInt(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IResult","l":"getLca(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Result","l":"getLca(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IResult","l":"getLcaInt(int)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"getMatchedEdge(int)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"getMatchedEdge(Integer)","url":"getMatchedEdge(java.lang.Integer)"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"getMatchedEdge(V)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.Result","l":"getNumberOfBiCcs()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic.Vertex","l":"getParent()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.IResult","l":"getPath(int, int)","url":"getPath(int,int)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"getPath(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"getPath(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.IResult","l":"getPath(Integer, Integer)","url":"getPath(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"getPath(Integer)","url":"getPath(java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"getPath(Integer)","url":"getPath(java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs.Result","l":"getPath(V, V)","url":"getPath(V,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Result","l":"getPath(V)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.Result","l":"getPath(V)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IQueries","l":"getQuerySource(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Queries","l":"getQuerySource(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IQueries","l":"getQuerySource(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Queries","l":"getQuerySource(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IQueries","l":"getQuerySourceInt(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IQueries","l":"getQuerySourceInt(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IQueries","l":"getQueryTarget(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Queries","l":"getQueryTarget(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IQueries","l":"getQueryTarget(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Queries","l":"getQueryTarget(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IQueries","l":"getQueryTargetInt(int)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IQueries","l":"getQueryTargetInt(int)"},{"p":"com.jgalgo.alg.flow","c":"IFlow","l":"getSupply(int)"},{"p":"com.jgalgo.alg.flow","c":"IFlow","l":"getSupply(Integer)","url":"getSupply(java.lang.Integer)"},{"p":"com.jgalgo.alg.flow","c":"Flow","l":"getSupply(V)"},{"p":"com.jgalgo.alg.flow","c":"Flow","l":"getSupplySubset(Collection<V>)","url":"getSupplySubset(java.util.Collection)"},{"p":"com.jgalgo.alg.flow","c":"Flow","l":"getTotalCost(WeightFunction<E>)","url":"getTotalCost(com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getType()"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.IResult","l":"getVertexBiCcs(int)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.IResult","l":"getVertexBiCcs(Integer)","url":"getVertexBiCcs(java.lang.Integer)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.Result","l":"getVertexBiCcs(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"getVertexSupplier()"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"GexfGraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"GexfGraphReader(Class<V>, Class<E>)","url":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"com.jgalgo.io","c":"GexfGraphWriter","l":"GexfGraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"GmlGraphReader","l":"GmlGraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"GmlGraphReader","l":"GmlGraphReader(Class<V>, Class<E>)","url":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"com.jgalgo.io","c":"GmlGraphWriter","l":"GmlGraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"GnmBipartiteGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"GnmBipartiteGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"GnmGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"GnmGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"GnpBipartiteGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"GnpBipartiteGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"GnpGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"GnpGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder.ReIndexedGraph","l":"graph"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"graph()"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"graph()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"graph()"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"graph()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"graph()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Result","l":"graph()"},{"p":"com.jgalgo.gen","c":"LineGraphGenerator","l":"graph(Graph<?, V>)","url":"graph(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.gen","c":"ComplementGraphGenerator","l":"graph(Graph<V, ?>)","url":"graph(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.io","c":"Graph6GraphReader","l":"Graph6GraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"Graph6GraphWriter","l":"Graph6GraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"ComplementGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"DifferenceGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"LineGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"SymmetricDifferenceGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"graphFactory()"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"graphFactory()"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"GraphMlGraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"GraphMlGraphReader(Class<V>, Class<E>)","url":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"com.jgalgo.io","c":"GraphMlGraphWriter","l":"GraphMlGraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"graphs(Collection<? extends Graph<V, E>>)","url":"graphs(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"graphs(Collection<? extends Graph<V, E>>)","url":"graphs(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"DifferenceGraphGenerator","l":"graphs(Graph<V, E>, Graph<V, E>)","url":"graphs(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.gen","c":"SymmetricDifferenceGraphGenerator","l":"graphs(Graph<V, E>, Graph<V, E>)","url":"graphs(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"graphs(Graph<V, E>...)","url":"graphs(com.jgalgo.graph.Graph...)"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"graphs(Graph<V, E>...)","url":"graphs(com.jgalgo.graph.Graph...)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"GuavaGraphAdapter(Graph<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableGraphAdapter","l":"GuavaMutableGraphAdapter(Graph<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableNetworkAdapter","l":"GuavaMutableNetworkAdapter(Graph<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableValueGraphAdapter","l":"GuavaMutableValueGraphAdapter(Graph<V, E>, String)","url":"%3Cinit%3E(com.jgalgo.graph.Graph,java.lang.String)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"GuavaNetworkAdapter(Graph<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"GuavaNetworkWrapper(Network<V, E>, boolean)","url":"%3Cinit%3E(com.google.common.graph.Network,boolean)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"GuavaNetworkWrapper(Network<V, E>)","url":"%3Cinit%3E(com.google.common.graph.Network)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"GuavaValueGraphAdapter(Graph<V, E>, String)","url":"%3Cinit%3E(com.jgalgo.graph.Graph,java.lang.String)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"hamiltonianCycle(Graph<V, E>)","url":"hamiltonianCycle(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"hamiltonianCyclesIter(Graph<V, E>)","url":"hamiltonianCyclesIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgoAbstract","l":"hamiltonianCyclesIter(Graph<V, E>)","url":"hamiltonianCyclesIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"hamiltonianPath(Graph<V, E>, V, V)","url":"hamiltonianPath(com.jgalgo.graph.Graph,V,V)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"hamiltonianPath(Graph<V, E>)","url":"hamiltonianPath(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgoAbstract","l":"HamiltonianPathAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgoAbstractBasedCycle","l":"HamiltonianPathAlgoAbstractBasedCycle()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathRubin","l":"HamiltonianPathRubin()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"hamiltonianPathsIter(Graph<V, E>, V, V)","url":"hamiltonianPathsIter(com.jgalgo.graph.Graph,V,V)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgoAbstract","l":"hamiltonianPathsIter(Graph<V, E>, V, V)","url":"hamiltonianPathsIter(com.jgalgo.graph.Graph,V,V)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"hamiltonianPathsIter(Graph<V, E>)","url":"hamiltonianPathsIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgoAbstract","l":"hamiltonianPathsIter(Graph<V, E>)","url":"hamiltonianPathsIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"hasEdgeConnecting(EndpointPair<V>)","url":"hasEdgeConnecting(com.google.common.graph.EndpointPair)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"hasEdgeConnecting(EndpointPair<V>)","url":"hasEdgeConnecting(com.google.common.graph.EndpointPair)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"hasEdgeConnecting(EndpointPair<V>)","url":"hasEdgeConnecting(com.google.common.graph.EndpointPair)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"hasEdgeConnecting(V, V)","url":"hasEdgeConnecting(V,V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"hasEdgeConnecting(V, V)","url":"hasEdgeConnecting(V,V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"hasEdgeConnecting(V, V)","url":"hasEdgeConnecting(V,V)"},{"p":"com.jgalgo.graph","c":"AbstractGraph","l":"hashCode()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"hasNext()"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter","l":"hasNext()"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter","l":"hasNext()"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"identityEdgesMap(IntSet)","url":"identityEdgesMap(it.unimi.dsi.fastutil.ints.IntSet)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"identityVerticesMap(IntSet)","url":"identityVerticesMap(it.unimi.dsi.fastutil.ints.IntSet)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"idToIndex(int)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"idToIndex(Integer)","url":"idToIndex(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IndexIdMap","l":"idToIndex(K)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"idToIndexCollection(Collection<K>, IndexIdMap<K>)","url":"idToIndexCollection(java.util.Collection,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"idToIndexIfExist(int)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"idToIndexIfExist(Integer)","url":"idToIndexIfExist(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IndexIdMap","l":"idToIndexIfExist(K)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"idToIndexIterator(Iterator<K>, IndexIdMap<K>)","url":"idToIndexIterator(java.util.Iterator,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"idToIndexList(List<K>, IndexIdMap<K>)","url":"idToIndexList(java.util.List,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"idToIndexSet(Set<K>, IndexIdMap<K>)","url":"idToIndexSet(java.util.Set,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"idToIndexWeightFunc(WeightFunction<K>, IndexIdMap<K>)","url":"idToIndexWeightFunc(com.jgalgo.graph.WeightFunction,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"idToIndexWeightFunc(WeightFunctionInt<K>, IndexIdMap<K>)","url":"idToIndexWeightFunc(com.jgalgo.graph.WeightFunctionInt,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"idToIndexWeights(Weights<K, T>, IndexIdMap<K>)","url":"idToIndexWeights(com.jgalgo.graph.Weights,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"Graph","l":"immutableCopy()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"immutableCopy()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"immutableCopy()"},{"p":"com.jgalgo.graph","c":"Graph","l":"immutableCopy(boolean, boolean)","url":"immutableCopy(boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"immutableCopy(boolean, boolean)","url":"immutableCopy(boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"immutableCopy(boolean, boolean)","url":"immutableCopy(boolean,boolean)"},{"p":"com.jgalgo.graph","c":"Graph","l":"immutableView()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"immutableView()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"immutableView()"},{"p":"com.jgalgo.alg.common","c":"EdgeDirection","l":"In"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"incidentEdgeOrder()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"incidentEdgeOrder()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"incidentEdges(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"incidentEdges(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"incidentEdges(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"incidentNodes(E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"incomingEdgesOf(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"inDegree(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"inDegree(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"inDegreeOf(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"indexGraph()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"indexGraph()"},{"p":"com.jgalgo.graph","c":"Graph","l":"indexGraph()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"indexGraph()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"indexGraphEdgesMap()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"indexGraphEdgesMap()"},{"p":"com.jgalgo.graph","c":"Graph","l":"indexGraphEdgesMap()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"indexGraphEdgesMap()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"indexGraphEdgesMap()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"indexGraphVerticesMap()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"indexGraphVerticesMap()"},{"p":"com.jgalgo.graph","c":"Graph","l":"indexGraphVerticesMap()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"indexGraphVerticesMap()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"indexGraphVerticesMap()"},{"p":"com.jgalgo.graph","c":"IndexIdMap","l":"indexToId(int)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"indexToId(int)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdCollection(IntCollection, IndexIdMap<K>)","url":"indexToIdCollection(it.unimi.dsi.fastutil.ints.IntCollection,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdCollection(IntCollection, IndexIntIdMap)","url":"indexToIdCollection(it.unimi.dsi.fastutil.ints.IntCollection,com.jgalgo.graph.IndexIntIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdEdgeIter(Graph<V, E>, IEdgeIter)","url":"indexToIdEdgeIter(com.jgalgo.graph.Graph,com.jgalgo.graph.IEdgeIter)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdEdgeIter(IntGraph, IEdgeIter)","url":"indexToIdEdgeIter(com.jgalgo.graph.IntGraph,com.jgalgo.graph.IEdgeIter)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdEdgeSet(IEdgeSet, Graph<V, E>)","url":"indexToIdEdgeSet(com.jgalgo.graph.IEdgeSet,com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdEdgeSet(IEdgeSet, IntGraph)","url":"indexToIdEdgeSet(com.jgalgo.graph.IEdgeSet,com.jgalgo.graph.IntGraph)"},{"p":"com.jgalgo.graph","c":"IndexIdMap","l":"indexToIdIfExist(int)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"indexToIdIfExist(int)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"indexToIdIfExistInt(int)"},{"p":"com.jgalgo.graph","c":"IndexIntIdMap","l":"indexToIdInt(int)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdIterator(IntIterator, IndexIdMap<K>)","url":"indexToIdIterator(it.unimi.dsi.fastutil.ints.IntIterator,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdIterator(IntIterator, IndexIntIdMap)","url":"indexToIdIterator(it.unimi.dsi.fastutil.ints.IntIterator,com.jgalgo.graph.IndexIntIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdList(IntList, IndexIdMap<K>)","url":"indexToIdList(it.unimi.dsi.fastutil.ints.IntList,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdList(IntList, IndexIntIdMap)","url":"indexToIdList(it.unimi.dsi.fastutil.ints.IntList,com.jgalgo.graph.IndexIntIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdSet(IntSet, IndexIdMap<K>)","url":"indexToIdSet(it.unimi.dsi.fastutil.ints.IntSet,com.jgalgo.graph.IndexIdMap)"},{"p":"com.jgalgo.graph","c":"IndexIdMaps","l":"indexToIdSet(IntSet, IndexIntIdMap)","url":"indexToIdSet(it.unimi.dsi.fastutil.ints.IntSet,com.jgalgo.graph.IndexIntIdMap)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"inEdges(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"inEdges(Integer)","url":"inEdges(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"inEdges(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"inEdges(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"inEdges(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"inEdges(V)"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"initialCliqueSize(int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic","l":"initTree()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowInts","l":"initTree()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowLongs","l":"initTree()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowSimple","l":"initTree()"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow.Builder","l":"integerCosts(boolean)"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow.Builder","l":"integerNetwork(boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Builder","l":"integerWeights(boolean)"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"IntersectionGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"IntersectionGraphGenerator","l":"IntersectionGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.graph","c":"IEdgeSet","l":"intIterator()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"inverse()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismMapping","l":"inverse()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder.ReIndexingMap","l":"inverse()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"isAllowParallelEdges()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"isAllowParallelEdges()"},{"p":"com.jgalgo.graph","c":"Graph","l":"isAllowParallelEdges()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"isAllowSelfEdges()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"isAllowSelfEdges()"},{"p":"com.jgalgo.graph","c":"Graph","l":"isAllowSelfEdges()"},{"p":"com.jgalgo.alg.bipartite","c":"BipartiteGraphs","l":"isBipartite(Graph<V, E>)","url":"isBipartite(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"isCardinality(WeightFunction<?>)","url":"isCardinality(com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.closure","c":"ClosuresEnumerator","l":"isClosure(Graph<V, E>, Collection<V>)","url":"isClosure(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.alg.color","c":"ColoringAlgo","l":"isColoring(Graph<V, E>, ToIntFunction<V>)","url":"isColoring(com.jgalgo.graph.Graph,java.util.function.ToIntFunction)"},{"p":"com.jgalgo.alg.cover","c":"EdgeCover","l":"isCover(Graph<V, E>, Collection<E>)","url":"isCover(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.alg.cover","c":"VertexCover","l":"isCover(Graph<V, E>, Collection<V>)","url":"isCover(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutGlobal","l":"isCut(Graph<V, E>, Collection<V>)","url":"isCut(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.IResult","l":"isCutVertex(int)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.IResult","l":"isCutVertex(Integer)","url":"isCutVertex(java.lang.Integer)"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo.Result","l":"isCutVertex(V)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"isCycle()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"isCycle()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"isDirected()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"isDirected()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"isDirected()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"isDirected()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"isDirected()"},{"p":"com.jgalgo.graph","c":"Graph","l":"isDirected()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"isDirected()"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgo","l":"isDominatingSet(Graph<V, E>, Collection<V>, EdgeDirection)","url":"isDominatingSet(com.jgalgo.graph.Graph,java.util.Collection,com.jgalgo.alg.common.EdgeDirection)"},{"p":"com.jgalgo.alg.euler","c":"EulerianTourAlgo","l":"isEulerian(Graph<V, E>)","url":"isEulerian(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.euler","c":"EulerianTourAlgo","l":"isEulerianTour(Graph<V, E>, List<E>)","url":"isEulerianTour(com.jgalgo.graph.Graph,java.util.List)"},{"p":"com.jgalgo.alg.tree","c":"Trees","l":"isForest(Graph<V, E>)","url":"isForest(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"isHamiltonianPath(Graph<V, E>, List<E>)","url":"isHamiltonianPath(com.jgalgo.graph.Graph,java.util.List)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"isInteger(WeightFunction<?>)","url":"isInteger(com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"isLeft(int)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"isLeft(Integer)","url":"isLeft(java.lang.Integer)"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"isLeft(V)"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"isMatching(Graph<V, E>, Collection<E>)","url":"isMatching(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTester","l":"isomorphicMapping(Graph<V1, E1>, Graph<V2, E2>, boolean)","url":"isomorphicMapping(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph,boolean)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTester","l":"isomorphicMapping(Graph<V1, E1>, Graph<V2, E2>)","url":"isomorphicMapping(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTester","l":"isomorphicMappingsIter(Graph<V1, E1>, Graph<V2, E2>, boolean, BiPredicate<? super V1, ? super V2>, BiPredicate<? super E1, ? super E2>)","url":"isomorphicMappingsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph,boolean,java.util.function.BiPredicate,java.util.function.BiPredicate)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTesterAbstract","l":"isomorphicMappingsIter(Graph<V1, E1>, Graph<V2, E2>, boolean, BiPredicate<? super V1, ? super V2>, BiPredicate<? super E1, ? super E2>)","url":"isomorphicMappingsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph,boolean,java.util.function.BiPredicate,java.util.function.BiPredicate)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTester","l":"isomorphicMappingsIter(Graph<V1, E1>, Graph<V2, E2>, boolean)","url":"isomorphicMappingsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph,boolean)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTester","l":"isomorphicMappingsIter(Graph<V1, E1>, Graph<V2, E2>)","url":"isomorphicMappingsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTesterAbstract","l":"IsomorphismTesterAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTesterVf2","l":"IsomorphismTesterVf2()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"isPartition(Graph<V, E>, Predicate<V>)","url":"isPartition(com.jgalgo.graph.Graph,java.util.function.Predicate)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"isPartition(Graph<V, E>, ToIntFunction<V>)","url":"isPartition(com.jgalgo.graph.Graph,java.util.function.ToIntFunction)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"isPartition(IntGraph, IntPredicate)","url":"isPartition(com.jgalgo.graph.IntGraph,java.util.function.IntPredicate)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"isPartition(IntGraph, IntUnaryOperator)","url":"isPartition(com.jgalgo.graph.IntGraph,java.util.function.IntUnaryOperator)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"isPath(Graph<V, E>, V, V, List<E>)","url":"isPath(com.jgalgo.graph.Graph,V,V,java.util.List)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"isPath(IntGraph, int, int, IntList)","url":"isPath(com.jgalgo.graph.IntGraph,int,int,it.unimi.dsi.fastutil.ints.IntList)"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"isPerfect()"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"isRight(int)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"isRight(Integer)","url":"isRight(java.lang.Integer)"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"isRight(V)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"isSimple()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTree","l":"isSpanningForest(Graph<V, E>, Collection<E>)","url":"isSpanningForest(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTree","l":"isSpanningTree(Graph<V, E>, Collection<E>)","url":"isSpanningTree(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeAlgo","l":"isSteinerTree(Graph<V, E>, Collection<V>, Collection<E>)","url":"isSteinerTree(com.jgalgo.graph.Graph,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsAlgo","l":"isStronglyConnected(Graph<V, E>)","url":"isStronglyConnected(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsAlgoAbstract","l":"isStronglyConnected(Graph<V, E>)","url":"isStronglyConnected(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.tree","c":"Trees","l":"isTree(Graph<V, E>, V)","url":"isTree(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.tree","c":"Trees","l":"isTree(Graph<V, E>)","url":"isTree(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"isVertexMatched(int)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"isVertexMatched(Integer)","url":"isVertexMatched(java.lang.Integer)"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"isVertexMatched(V)"},{"p":"com.jgalgo.alg.connect","c":"WeaklyConnectedComponentsAlgo","l":"isWeaklyConnected(Graph<V, E>)","url":"isWeaklyConnected(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.connect","c":"WeaklyConnectedComponentsAlgoAbstract","l":"isWeaklyConnected(Graph<V, E>)","url":"isWeaklyConnected(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"EdgeSet","l":"iterator()"},{"p":"com.jgalgo.graph","c":"IEdgeSet","l":"iterator()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"JGraphTAdapter(Graph<V, E>, String)","url":"%3Cinit%3E(com.jgalgo.graph.Graph,java.lang.String)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"JGraphTAdapter(Graph<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"JGraphTWrapper(Graph<V, E>, String)","url":"%3Cinit%3E(org.jgrapht.Graph,java.lang.String)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"JGraphTWrapper(Graph<V, E>)","url":"%3Cinit%3E(org.jgrapht.Graph)"},{"p":"com.jgalgo.alg.connect","c":"KEdgeConnectedComponentsAlgoAbstract","l":"KEdgeConnectedComponentsAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"KEdgeConnectedComponentsWang","l":"KEdgeConnectedComponentsWang()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"Digraph6GraphWriter","l":"keepEdgesIds(boolean)"},{"p":"com.jgalgo.io","c":"Graph6GraphWriter","l":"keepEdgesIds(boolean)"},{"p":"com.jgalgo.io","c":"Sparse6GraphWriter","l":"keepEdgesIds(boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStAbstract","l":"KShortestPathsStAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStBasedPathsTree","l":"KShortestPathsStBasedPathsTree()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStHershbergerMaxelSuri","l":"KShortestPathsStHershbergerMaxelSuri()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStKatohIbarakiMine","l":"KShortestPathsStKatohIbarakiMine()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStYen","l":"KShortestPathsStYen()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"KVertexConnectedComponentsAlgoAbstract","l":"KVertexConnectedComponentsAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"KVertexConnectedComponentsWhiteMoody","l":"KVertexConnectedComponentsWhiteMoody()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"lastEdge()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter.Int","l":"lastEdge()"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter","l":"lastEdge()"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter.Int","l":"lastEdge()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter.Int","l":"lastEdgeInt()"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter.Int","l":"lastEdgeInt()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"layer()"},{"p":"com.jgalgo.io","c":"LedaGraphReader","l":"LedaGraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"LedaGraphWriter","l":"LedaGraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"leftEdges()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"leftEdges()"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"leftVertices()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"leftVertices()"},{"p":"com.jgalgo.gen","c":"LineGraphGenerator","l":"LineGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"LineGraphGenerator","l":"LineGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.graph","c":"WeightFunctions","l":"localEdgeWeightFunction(IndexGraph, IWeightFunction)","url":"localEdgeWeightFunction(com.jgalgo.graph.IndexGraph,com.jgalgo.graph.IWeightFunction)"},{"p":"com.jgalgo.graph","c":"WeightFunctions","l":"localEdgeWeightFunction(IndexGraph, IWeightFunctionInt)","url":"localEdgeWeightFunction(com.jgalgo.graph.IndexGraph,com.jgalgo.graph.IWeightFunctionInt)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowInts","l":"LowestCommonAncestorDynamicGabowInts()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowLongs","l":"LowestCommonAncestorDynamicGabowLongs()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowSimple","l":"LowestCommonAncestorDynamicGabowSimple()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOfflineAbstract","l":"LowestCommonAncestorOfflineAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOfflineUnionFind","l":"LowestCommonAncestorOfflineUnionFind()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStaticAbstract","l":"LowestCommonAncestorStaticAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStaticRmq","l":"LowestCommonAncestorStaticRmq()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.example","c":"BfsDfsExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.jgalgo.example","c":"ColoringExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.jgalgo.example","c":"EdgeIterationExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.jgalgo.example","c":"LowestCommonAncestorExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.jgalgo.example","c":"MaximumMatchingExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.jgalgo.example","c":"MinimumSpanningTreeExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.jgalgo.example","c":"ShortestPathExample","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder.ReIndexingMap","l":"map(int)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismMapping","l":"mapEdge(E1)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"mapEdge(int)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"mapEdge(Integer)","url":"mapEdge(java.lang.Integer)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"mappedEdges()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismMapping","l":"mappedEdges()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"mappedVertices()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismMapping","l":"mappedVertices()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"mapVertex(int)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"mapVertex(Integer)","url":"mapVertex(java.lang.Integer)"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismMapping","l":"mapVertex(V1)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"matchedVertices()"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"matchedVertices()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstract","l":"MatchingAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstractBasedMaximum","l":"MatchingAlgoAbstractBasedMaximum()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstractBasedMinimum","l":"MatchingAlgoAbstractBasedMinimum()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgoAbstractCardinality","l":"MatchingAlgoAbstractCardinality()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingCardinalityBipartiteHopcroftKarp","l":"MatchingCardinalityBipartiteHopcroftKarp()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingCardinalityGabow1976","l":"MatchingCardinalityGabow1976()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingWeightedBipartiteHungarianMethod","l":"MatchingWeightedBipartiteHungarianMethod()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingWeightedBipartiteSssp","l":"MatchingWeightedBipartiteSssp()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingWeightedBlossomV","l":"MatchingWeightedBlossomV()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingWeightedGabow1990","l":"MatchingWeightedGabow1990()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.match","c":"MatchingWeightedGabow1990Simpler","l":"MatchingWeightedGabow1990Simpler()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.Result","l":"maxCore()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Builder","l":"maxDistance(double)"},{"p":"com.jgalgo.alg.clique","c":"MaximalCliquesEnumeratorAbstract","l":"MaximalCliquesEnumeratorAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.clique","c":"MaximalCliquesEnumeratorBronKerbosch","l":"MaximalCliquesEnumeratorBronKerbosch()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.clique","c":"MaximalCliquesEnumeratorBronKerboschPivot","l":"MaximalCliquesEnumeratorBronKerboschPivot()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.clique","c":"MaximalCliquesEnumerator","l":"maximalCliquesIter(Graph<V, E>)","url":"maximalCliquesIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.clique","c":"MaximalCliquesEnumeratorAbstract","l":"maximalCliquesIter(Graph<V, E>)","url":"maximalCliquesIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.clique","c":"MaximalIndependentSetsEnumeratorAbstract","l":"MaximalIndependentSetsEnumeratorAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.clique","c":"MaximalIndependentSetsEnumeratorComplementCliques","l":"MaximalIndependentSetsEnumeratorComplementCliques()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.clique","c":"MaximalIndependentSetsEnumerator","l":"maximalIndependentSetsIter(Graph<V, E>)","url":"maximalIndependentSetsIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.clique","c":"MaximalIndependentSetsEnumeratorAbstract","l":"maximalIndependentSetsIter(Graph<V, E>)","url":"maximalIndependentSetsIter(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowAbstract","l":"MaximumFlowAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowAbstractWithoutResidualNet","l":"MaximumFlowAbstractWithoutResidualNet()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowAbstractWithResidualNet","l":"MaximumFlowAbstractWithResidualNet()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowDinic","l":"MaximumFlowDinic()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowDinicDynamicTrees","l":"MaximumFlowDinicDynamicTrees()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowEdmondsKarp","l":"MaximumFlowEdmondsKarp()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowPushRelabelDynamicTrees","l":"MaximumFlowPushRelabelDynamicTrees()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.example","c":"MaximumMatchingExample","l":"maximumMatchingExample()"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstract","l":"MinimumCostFlowAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstractBasedSourceSink","l":"MinimumCostFlowAbstractBasedSourceSink()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowAbstractBasedSupply","l":"MinimumCostFlowAbstractBasedSupply()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowCostScaling","l":"MinimumCostFlowCostScaling()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlowCycleCanceling","l":"MinimumCostFlowCycleCanceling()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutAllSt","l":"minimumCutsIter(Graph<V, E>, WeightFunction<E>, V, V)","url":"minimumCutsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutAllStAbstract","l":"minimumCutsIter(Graph<V, E>, WeightFunction<E>, V, V)","url":"minimumCutsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllSt","l":"minimumCutsIter(Graph<V, E>, WeightFunction<V>, V, V)","url":"minimumCutsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllStAbstract","l":"minimumCutsIter(Graph<V, E>, WeightFunction<V>, V, V)","url":"minimumCutsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,V,V)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllGlobal","l":"minimumCutsIter(Graph<V, E>, WeightFunction<V>)","url":"minimumCutsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllGlobalAbstract","l":"minimumCutsIter(Graph<V, E>, WeightFunction<V>)","url":"minimumCutsIter(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.span","c":"MinimumDirectedSpanningTreeAbstract","l":"MinimumDirectedSpanningTreeAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumDirectedSpanningTreeTarjan","l":"MinimumDirectedSpanningTreeTarjan()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutAllStAbstract","l":"MinimumEdgeCutAllStAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutAllStPicardQueyranne","l":"MinimumEdgeCutAllStPicardQueyranne()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutGlobalAbstract","l":"MinimumEdgeCutGlobalAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutGlobalStoerWagner","l":"MinimumEdgeCutGlobalStoerWagner()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutStAbstract","l":"MinimumEdgeCutStAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cycle","c":"MinimumMeanCycleAbstract","l":"MinimumMeanCycleAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cycle","c":"MinimumMeanCycleDasdanGupta","l":"MinimumMeanCycleDasdanGupta()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cycle","c":"MinimumMeanCycleHoward","l":"MinimumMeanCycleHoward()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeAbstract","l":"MinimumSpanningTreeAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeBoruvka","l":"MinimumSpanningTreeBoruvka()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeFredmanTarjan","l":"MinimumSpanningTreeFredmanTarjan()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeKargerKleinTarjan","l":"MinimumSpanningTreeKargerKleinTarjan()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeKruskal","l":"MinimumSpanningTreeKruskal()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreePrim","l":"MinimumSpanningTreePrim()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeYao","l":"MinimumSpanningTreeYao()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllGlobalAbstract","l":"MinimumVertexCutAllGlobalAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllGlobalKanevsky","l":"MinimumVertexCutAllGlobalKanevsky()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllStAbstract","l":"MinimumVertexCutAllStAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllStEdgeCut","l":"MinimumVertexCutAllStEdgeCut()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutGlobalAbstract","l":"MinimumVertexCutGlobalAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutGlobalEsfahanianHakimi","l":"MinimumVertexCutGlobalEsfahanianHakimi()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutStAbstract","l":"MinimumVertexCutStAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutStEdgeCut","l":"MinimumVertexCutStEdgeCut()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"moveEdge(E, V, V)","url":"moveEdge(E,V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"moveEdge(E, V, V)","url":"moveEdge(E,V,V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"moveEdge(E, V, V)","url":"moveEdge(E,V,V)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"moveEdge(int, int, int)","url":"moveEdge(int,int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"moveEdge(Integer, Integer, Integer)","url":"moveEdge(java.lang.Integer,java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.example","c":"MinimumSpanningTreeExample","l":"mstExample()"},{"p":"com.jgalgo.graph","c":"WeightFunctions","l":"negate(IWeightFunction)","url":"negate(com.jgalgo.graph.IWeightFunction)"},{"p":"com.jgalgo.alg.shortestpath","c":"NegativeCycleException","l":"NegativeCycleException(Graph<V, E>, Path<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.Graph,com.jgalgo.alg.common.Path)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Builder","l":"negativeWeights(boolean)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newBuilder()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newBuilder()"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newBuilder()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newBuilderCopyOf(Graph<Integer, Integer>, boolean, boolean)","url":"newBuilderCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newBuilderCopyOf(Graph<Integer, Integer>, boolean, boolean)","url":"newBuilderCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newBuilderCopyOf(Graph<Integer, Integer>)","url":"newBuilderCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newBuilderCopyOf(Graph<Integer, Integer>)","url":"newBuilderCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newBuilderCopyOf(Graph<V, E>, boolean, boolean)","url":"newBuilderCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newBuilderCopyOf(Graph<V, E>)","url":"newBuilderCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newCopyOf(Graph<Integer, Integer>, boolean, boolean)","url":"newCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"newCopyOf(Graph<Integer, Integer>, boolean, boolean)","url":"newCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newCopyOf(Graph<Integer, Integer>, boolean, boolean)","url":"newCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newCopyOf(Graph<Integer, Integer>)","url":"newCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"newCopyOf(Graph<Integer, Integer>)","url":"newCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newCopyOf(Graph<Integer, Integer>)","url":"newCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"newCopyOf(Graph<V, E>, boolean, boolean)","url":"newCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newCopyOf(Graph<V, E>, boolean, boolean)","url":"newCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"newCopyOf(Graph<V, E>)","url":"newCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newCopyOf(Graph<V, E>)","url":"newCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"newCopyOf(IndexGraph, boolean, boolean)","url":"newCopyOf(com.jgalgo.graph.IndexGraph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"newCopyOf(IndexGraph)","url":"newCopyOf(com.jgalgo.graph.IndexGraph)"},{"p":"com.jgalgo.graph","c":"Graph","l":"newDirected()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"newDirected()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"newDirected()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutSt","l":"newFromMaximumFlow(MaximumFlow)","url":"newFromMaximumFlow(com.jgalgo.alg.flow.MaximumFlow)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newGraph()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newGraph()"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newGraph()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newImmutableCopyOf(Graph<Integer, Integer>, boolean, boolean)","url":"newImmutableCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newImmutableCopyOf(Graph<Integer, Integer>, boolean, boolean)","url":"newImmutableCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newImmutableCopyOf(Graph<Integer, Integer>)","url":"newImmutableCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newImmutableCopyOf(Graph<Integer, Integer>)","url":"newImmutableCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newImmutableCopyOf(Graph<V, E>, boolean, boolean)","url":"newImmutableCopyOf(com.jgalgo.graph.Graph,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newImmutableCopyOf(Graph<V, E>)","url":"newImmutableCopyOf(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.clique","c":"MaximalCliquesEnumerator","l":"newInstance()"},{"p":"com.jgalgo.alg.clique","c":"MaximalIndependentSetsEnumerator","l":"newInstance()"},{"p":"com.jgalgo.alg.closure","c":"ClosuresEnumerator","l":"newInstance()"},{"p":"com.jgalgo.alg.color","c":"ColoringAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"BiConnectedComponentsAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"KEdgeConnectedComponentsAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"KVertexConnectedComponentsAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutAllSt","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutGlobal","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"MinimumEdgeCutSt","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllGlobal","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutAllSt","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutGlobal","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"MinimumVertexCutSt","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.connect","c":"WeaklyConnectedComponentsAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.cover","c":"EdgeCover","l":"newInstance()"},{"p":"com.jgalgo.alg.cover","c":"VertexCover","l":"newInstance()"},{"p":"com.jgalgo.alg.cycle","c":"ChinesePostman","l":"newInstance()"},{"p":"com.jgalgo.alg.cycle","c":"CyclesEnumerator","l":"newInstance()"},{"p":"com.jgalgo.alg.cycle","c":"MinimumMeanCycle","l":"newInstance()"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.euler","c":"EulerianTourAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlow","l":"newInstance()"},{"p":"com.jgalgo.alg.flow","c":"MinimumCostFlow","l":"newInstance()"},{"p":"com.jgalgo.alg.hamilton","c":"HamiltonianPathAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismTester","l":"newInstance()"},{"p":"com.jgalgo.alg.match","c":"MatchingAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsSt","l":"newInstance()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairs","l":"newInstance()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathHeuristicSt","l":"newInstance()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource","l":"newInstance()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSt","l":"newInstance()"},{"p":"com.jgalgo.alg.shortestpath","c":"SimplePathsEnumerator","l":"newInstance()"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.span","c":"MinimumDirectedSpanningTree","l":"newInstance()"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTree","l":"newInstance()"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeAlgo","l":"newInstance()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic","l":"newInstance()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline","l":"newInstance()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStatic","l":"newInstance()"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima","l":"newInstance()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"newInstance(boolean)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"newInstance(boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"newInstance(boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"newInstance(boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"newInstance(boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"newInstance(boolean)"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter","l":"newInstance(Graph<V, E>, V, WeightFunction<E>)","url":"newInstance(com.jgalgo.graph.Graph,V,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"newInstance(Graph<V, E>, V)","url":"newInstance(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter","l":"newInstance(Graph<V, E>, V)","url":"newInstance(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter","l":"newInstance(Graph<V, E>, V)","url":"newInstance(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Queries","l":"newInstance(Graph<V, E>)","url":"newInstance(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Queries","l":"newInstance(Graph<V, E>)","url":"newInstance(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"newInstance(IntGraph, int)","url":"newInstance(com.jgalgo.graph.IntGraph,int)"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter","l":"newInstance(IntGraph, int)","url":"newInstance(com.jgalgo.graph.IntGraph,int)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.IQueries","l":"newInstance(IntGraph)","url":"newInstance(com.jgalgo.graph.IntGraph)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.IQueries","l":"newInstance(IntGraph)","url":"newInstance(com.jgalgo.graph.IntGraph)"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowPushRelabel","l":"newInstanceFifo()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowPushRelabel","l":"newInstanceHighestFirst()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowPushRelabel","l":"newInstanceLowestFirst()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowPushRelabel","l":"newInstanceMoveToFront()"},{"p":"com.jgalgo.alg.flow","c":"MaximumFlowPushRelabel","l":"newInstancePartialAugment()"},{"p":"com.jgalgo.graph","c":"Graph","l":"newUndirected()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"newUndirected()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"newUndirected()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter","l":"next()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter.Int","l":"next()"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter","l":"next()"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter.Int","l":"next()"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter","l":"next()"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter.Int","l":"next()"},{"p":"com.jgalgo.alg.traversal","c":"BfsIter.Int","l":"nextInt()"},{"p":"com.jgalgo.alg.traversal","c":"DfsIter.Int","l":"nextInt()"},{"p":"com.jgalgo.alg.traversal","c":"RandomWalkIter.Int","l":"nextInt()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"nodeOrder()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"nodeOrder()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"nodeOrder()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"nodes()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"nodes()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"nodes()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"numberOfBlocks()"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"numberOfBlocks()"},{"p":"com.jgalgo.alg.distancemeasures","c":"DistanceMeasures","l":"of(Graph<V, E>, WeightFunction<E>)","url":"of(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.graph","c":"IEdgeSet","l":"of(IntSet, IntGraph)","url":"of(it.unimi.dsi.fastutil.ints.IntSet,com.jgalgo.graph.IntGraph)"},{"p":"com.jgalgo.graph","c":"EdgeSet","l":"of(Set<E>, Graph<V, E>)","url":"of(java.util.Set,com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"NoSuchEdgeException","l":"ofEdge(int)"},{"p":"com.jgalgo.graph","c":"NoSuchEdgeException","l":"ofEdge(Object)","url":"ofEdge(java.lang.Object)"},{"p":"com.jgalgo.graph","c":"NoSuchEdgeException","l":"ofIndex(int)"},{"p":"com.jgalgo.graph","c":"NoSuchVertexException","l":"ofIndex(int)"},{"p":"com.jgalgo.graph","c":"NoSuchVertexException","l":"ofVertex(int)"},{"p":"com.jgalgo.graph","c":"NoSuchVertexException","l":"ofVertex(Object)","url":"ofVertex(java.lang.Object)"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo.IResult","l":"orderComparator()"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo.Result","l":"orderComparator()"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo.IResult","l":"orderedVertices()"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo.Result","l":"orderedVertices()"},{"p":"com.jgalgo.alg.common","c":"EdgeDirection","l":"Out"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"outDegree(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"outDegree(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"outDegreeOf(V)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"outEdges(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"outEdges(Integer)","url":"outEdges(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"outEdges(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"outEdges(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"outEdges(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"outEdges(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"outgoingEdgesOf(V)"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"parallelEdges(boolean)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"parallelEdges(boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"partition()"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.Result","l":"partition()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"partitionFromIndexPartition(Graph<V, E>, IVertexBiPartition)","url":"partitionFromIndexPartition(com.jgalgo.graph.Graph,com.jgalgo.alg.common.IVertexBiPartition)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"partitionFromIndexPartition(Graph<V, E>, IVertexPartition)","url":"partitionFromIndexPartition(com.jgalgo.graph.Graph,com.jgalgo.alg.common.IVertexPartition)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"pathFromIndexPath(Graph<V, E>, IPath)","url":"pathFromIndexPath(com.jgalgo.graph.Graph,com.jgalgo.alg.common.IPath)"},{"p":"com.jgalgo.graph","c":"EdgeIter","l":"peekNext()"},{"p":"com.jgalgo.graph","c":"IEdgeIter","l":"peekNext()"},{"p":"com.jgalgo.graph","c":"IEdgeIter","l":"peekNextInt()"},{"p":"com.jgalgo.alg.distancemeasures","c":"DistanceMeasures","l":"periphery()"},{"p":"com.jgalgo.alg.distancemeasures","c":"IDistanceMeasures","l":"periphery()"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"predecessors(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"predecessors(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"predecessors(V)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStatic","l":"preProcessTree(Graph<V, E>, V)","url":"preProcessTree(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorStaticAbstract","l":"preProcessTree(Graph<V, E>, V)","url":"preProcessTree(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableGraphAdapter","l":"putEdge(EndpointPair<V>)","url":"putEdge(com.google.common.graph.EndpointPair)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableGraphAdapter","l":"putEdge(V, V)","url":"putEdge(V,V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableValueGraphAdapter","l":"putEdgeValue(EndpointPair<V>, ValueT)","url":"putEdgeValue(com.google.common.graph.EndpointPair,ValueT)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableValueGraphAdapter","l":"putEdgeValue(V, V, ValueT)","url":"putEdgeValue(V,V,ValueT)"},{"p":"com.jgalgo.alg.distancemeasures","c":"DistanceMeasures","l":"radius()"},{"p":"com.jgalgo.graph","c":"Graphs","l":"randEdge(Graph<?, E>, Random)","url":"randEdge(com.jgalgo.graph.Graph,java.util.Random)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"randEdge(IntGraph, Random)","url":"randEdge(com.jgalgo.graph.IntGraph,java.util.Random)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"randVertex(Graph<V, ?>, Random)","url":"randVertex(com.jgalgo.graph.Graph,java.util.Random)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"randVertex(IntGraph, Random)","url":"randVertex(com.jgalgo.graph.IntGraph,java.util.Random)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"reachableVertices(Graph<V, E>, Iterator<V>)","url":"reachableVertices(com.jgalgo.graph.Graph,java.util.Iterator)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"reachableVertices(Graph<V, E>, V)","url":"reachableVertices(com.jgalgo.graph.Graph,V)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"reachableVertices(IntGraph, int)","url":"reachableVertices(com.jgalgo.graph.IntGraph,int)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"reachableVertices(IntGraph, IntIterator)","url":"reachableVertices(com.jgalgo.graph.IntGraph,it.unimi.dsi.fastutil.ints.IntIterator)"},{"p":"com.jgalgo.io","c":"GraphReader","l":"readGraph(File)","url":"readGraph(java.io.File)"},{"p":"com.jgalgo.io","c":"GraphReader","l":"readGraph(Reader)","url":"readGraph(java.io.Reader)"},{"p":"com.jgalgo.io","c":"GraphReader","l":"readGraph(String)","url":"readGraph(java.lang.String)"},{"p":"com.jgalgo.io","c":"GraphReader","l":"readIntoBuilder(Reader)","url":"readIntoBuilder(java.io.Reader)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"RecursiveMatrixGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"RecursiveMatrixGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"reIndexAndBuild(boolean, boolean)","url":"reIndexAndBuild(boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"reIndexAndBuildMutable(boolean, boolean)","url":"reIndexAndBuildMutable(boolean,boolean)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"removeAllEdges(V, V)","url":"removeAllEdges(V,V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableNetworkAdapter","l":"removeEdge(E)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeEdge(E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"removeEdge(E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeEdge(E)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeEdge(E)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableGraphAdapter","l":"removeEdge(EndpointPair<V>)","url":"removeEdge(com.google.common.graph.EndpointPair)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableValueGraphAdapter","l":"removeEdge(EndpointPair<V>)","url":"removeEdge(com.google.common.graph.EndpointPair)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeEdge(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeEdge(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeEdge(Integer)","url":"removeEdge(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableGraphAdapter","l":"removeEdge(V, V)","url":"removeEdge(V,V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableValueGraphAdapter","l":"removeEdge(V, V)","url":"removeEdge(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"removeEdge(V, V)","url":"removeEdge(V,V)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeEdgeRemoveListener(IndexRemoveListener)","url":"removeEdgeRemoveListener(com.jgalgo.graph.IndexRemoveListener)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeEdges(Collection<? extends E>)","url":"removeEdges(java.util.Collection)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeEdges(Collection<? extends E>)","url":"removeEdges(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeEdges(Collection<? extends E>)","url":"removeEdges(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeEdgesOf(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeEdgesOf(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeEdgesOf(Integer)","url":"removeEdgesOf(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeEdgesOf(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeEdgesOf(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeEdgesOf(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeEdgesWeights(String)","url":"removeEdgesWeights(java.lang.String)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeEdgesWeights(String)","url":"removeEdgesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeEdgesWeights(String)","url":"removeEdgesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeEdgesWeights(String)","url":"removeEdgesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"removeHint(GraphFactory.Hint)","url":"removeHint(com.jgalgo.graph.GraphFactory.Hint)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"removeHint(GraphFactory.Hint)","url":"removeHint(com.jgalgo.graph.GraphFactory.Hint)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"removeHint(GraphFactory.Hint)","url":"removeHint(com.jgalgo.graph.GraphFactory.Hint)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeInEdgesOf(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeInEdgesOf(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeInEdgesOf(Integer)","url":"removeInEdgesOf(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeInEdgesOf(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeInEdgesOf(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeInEdgesOf(V)"},{"p":"com.jgalgo.graph","c":"IndexRemoveListener","l":"removeLast(int)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableGraphAdapter","l":"removeNode(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableNetworkAdapter","l":"removeNode(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaMutableValueGraphAdapter","l":"removeNode(V)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeOutEdgesOf(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeOutEdgesOf(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeOutEdgesOf(Integer)","url":"removeOutEdgesOf(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeOutEdgesOf(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeOutEdgesOf(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeOutEdgesOf(V)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeVertex(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeVertex(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"removeVertex(Integer)","url":"removeVertex(java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeVertex(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"removeVertex(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeVertex(V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeVertex(V)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeVertexRemoveListener(IndexRemoveListener)","url":"removeVertexRemoveListener(com.jgalgo.graph.IndexRemoveListener)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeVertices(Collection<? extends V>)","url":"removeVertices(java.util.Collection)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeVertices(Collection<? extends V>)","url":"removeVertices(java.util.Collection)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeVertices(Collection<? extends V>)","url":"removeVertices(java.util.Collection)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"removeVerticesWeights(String)","url":"removeVerticesWeights(java.lang.String)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"removeVerticesWeights(String)","url":"removeVerticesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"Graph","l":"removeVerticesWeights(String)","url":"removeVerticesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"removeVerticesWeights(String)","url":"removeVerticesWeights(java.lang.String)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"renameEdge(E, E)","url":"renameEdge(E,E)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"renameEdge(E, E)","url":"renameEdge(E,E)"},{"p":"com.jgalgo.graph","c":"Graph","l":"renameEdge(E, E)","url":"renameEdge(E,E)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"renameEdge(int, int)","url":"renameEdge(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"renameEdge(int, int)","url":"renameEdge(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"renameEdge(Integer, Integer)","url":"renameEdge(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"renameVertex(int, int)","url":"renameVertex(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"renameVertex(int, int)","url":"renameVertex(int,int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"renameVertex(Integer, Integer)","url":"renameVertex(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"renameVertex(V, V)","url":"renameVertex(V,V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"renameVertex(V, V)","url":"renameVertex(V,V)"},{"p":"com.jgalgo.graph","c":"Graph","l":"renameVertex(V, V)","url":"renameVertex(V,V)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"replaceNullWeightFunc(IWeightFunction)","url":"replaceNullWeightFunc(com.jgalgo.graph.IWeightFunction)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"replaceNullWeightFunc(IWeightFunctionInt)","url":"replaceNullWeightFunc(com.jgalgo.graph.IWeightFunctionInt)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"replaceNullWeightFunc(WeightFunction<K>)","url":"replaceNullWeightFunc(com.jgalgo.graph.WeightFunction)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"replaceNullWeightFunc(WeightFunctionInt<K>)","url":"replaceNullWeightFunc(com.jgalgo.graph.WeightFunctionInt)"},{"p":"com.jgalgo.graph","c":"Graph","l":"reverseEdge(E)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"reverseEdge(int)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"reverseEdge(Integer)","url":"reverseEdge(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"Graph","l":"reverseView()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"reverseView()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"reverseView()"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"rightEdges()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"rightEdges()"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"rightVertices()"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"rightVertices()"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"seed(long)"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"seed(long)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"seed(long)"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"seed(long)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"seed(long)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"seed(long)"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"seed(long)"},{"p":"com.jgalgo.gen","c":"ComplementGraphGenerator","l":"selfEdges(boolean)"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"selfEdges(boolean)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"selfEdges(boolean)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"selfEdges(boolean)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"selfEdges(Graph<V, E>)","url":"selfEdges(com.jgalgo.graph.Graph)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"selfEdges(IntGraph)","url":"selfEdges(com.jgalgo.graph.IntGraph)"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"set(int, boolean)","url":"set(int,boolean)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"set(int, byte)","url":"set(int,byte)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"set(int, char)","url":"set(int,char)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"set(int, double)","url":"set(int,double)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"set(int, float)","url":"set(int,float)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"set(int, int)","url":"set(int,int)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"set(int, long)","url":"set(int,long)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"set(int, short)","url":"set(int,short)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"set(int, T)","url":"set(int,T)"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"set(Integer, boolean)","url":"set(java.lang.Integer,boolean)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"set(Integer, byte)","url":"set(java.lang.Integer,byte)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"set(Integer, char)","url":"set(java.lang.Integer,char)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"set(Integer, double)","url":"set(java.lang.Integer,double)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"set(Integer, float)","url":"set(java.lang.Integer,float)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"set(Integer, int)","url":"set(java.lang.Integer,int)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"set(Integer, long)","url":"set(java.lang.Integer,long)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"set(Integer, short)","url":"set(java.lang.Integer,short)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"set(Integer, T)","url":"set(java.lang.Integer,T)"},{"p":"com.jgalgo.graph","c":"WeightsBool","l":"set(K, boolean)","url":"set(K,boolean)"},{"p":"com.jgalgo.graph","c":"WeightsByte","l":"set(K, byte)","url":"set(K,byte)"},{"p":"com.jgalgo.graph","c":"WeightsChar","l":"set(K, char)","url":"set(K,char)"},{"p":"com.jgalgo.graph","c":"WeightsDouble","l":"set(K, double)","url":"set(K,double)"},{"p":"com.jgalgo.graph","c":"WeightsFloat","l":"set(K, float)","url":"set(K,float)"},{"p":"com.jgalgo.graph","c":"WeightsInt","l":"set(K, int)","url":"set(K,int)"},{"p":"com.jgalgo.graph","c":"WeightsLong","l":"set(K, long)","url":"set(K,long)"},{"p":"com.jgalgo.graph","c":"WeightsShort","l":"set(K, short)","url":"set(K,short)"},{"p":"com.jgalgo.graph","c":"WeightsObj","l":"set(K, T)","url":"set(K,T)"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"setAsObj(int, Boolean)","url":"setAsObj(int,java.lang.Boolean)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"setAsObj(int, Byte)","url":"setAsObj(int,java.lang.Byte)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"setAsObj(int, Character)","url":"setAsObj(int,java.lang.Character)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"setAsObj(int, Double)","url":"setAsObj(int,java.lang.Double)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"setAsObj(int, Float)","url":"setAsObj(int,java.lang.Float)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"setAsObj(int, Integer)","url":"setAsObj(int,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"setAsObj(int, Long)","url":"setAsObj(int,java.lang.Long)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"setAsObj(int, Short)","url":"setAsObj(int,java.lang.Short)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"setAsObj(int, T)","url":"setAsObj(int,T)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"setAsObj(int, T)","url":"setAsObj(int,T)"},{"p":"com.jgalgo.graph","c":"IWeightsBool","l":"setAsObj(Integer, Boolean)","url":"setAsObj(java.lang.Integer,java.lang.Boolean)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"setAsObj(Integer, Byte)","url":"setAsObj(java.lang.Integer,java.lang.Byte)"},{"p":"com.jgalgo.graph","c":"IWeightsChar","l":"setAsObj(Integer, Character)","url":"setAsObj(java.lang.Integer,java.lang.Character)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"setAsObj(Integer, Double)","url":"setAsObj(java.lang.Integer,java.lang.Double)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"setAsObj(Integer, Float)","url":"setAsObj(java.lang.Integer,java.lang.Float)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"setAsObj(Integer, Integer)","url":"setAsObj(java.lang.Integer,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"setAsObj(Integer, Long)","url":"setAsObj(java.lang.Integer,java.lang.Long)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"setAsObj(Integer, Short)","url":"setAsObj(java.lang.Integer,java.lang.Short)"},{"p":"com.jgalgo.graph","c":"IWeights","l":"setAsObj(Integer, T)","url":"setAsObj(java.lang.Integer,T)"},{"p":"com.jgalgo.graph","c":"IWeightsObj","l":"setAsObj(Integer, T)","url":"setAsObj(java.lang.Integer,T)"},{"p":"com.jgalgo.graph","c":"WeightsBool","l":"setAsObj(K, Boolean)","url":"setAsObj(K,java.lang.Boolean)"},{"p":"com.jgalgo.graph","c":"WeightsByte","l":"setAsObj(K, Byte)","url":"setAsObj(K,java.lang.Byte)"},{"p":"com.jgalgo.graph","c":"WeightsChar","l":"setAsObj(K, Character)","url":"setAsObj(K,java.lang.Character)"},{"p":"com.jgalgo.graph","c":"WeightsDouble","l":"setAsObj(K, Double)","url":"setAsObj(K,java.lang.Double)"},{"p":"com.jgalgo.graph","c":"WeightsFloat","l":"setAsObj(K, Float)","url":"setAsObj(K,java.lang.Float)"},{"p":"com.jgalgo.graph","c":"WeightsInt","l":"setAsObj(K, Integer)","url":"setAsObj(K,java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"WeightsLong","l":"setAsObj(K, Long)","url":"setAsObj(K,java.lang.Long)"},{"p":"com.jgalgo.graph","c":"WeightsShort","l":"setAsObj(K, Short)","url":"setAsObj(K,java.lang.Short)"},{"p":"com.jgalgo.graph","c":"Weights","l":"setAsObj(K, T)","url":"setAsObj(K,T)"},{"p":"com.jgalgo.graph","c":"WeightsObj","l":"setAsObj(K, T)","url":"setAsObj(K,T)"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaximaHagerup","l":"setBitsLookupTablesEnable(boolean)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic.Vertex","l":"setData(Object)","url":"setData(java.lang.Object)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"setDirected(boolean)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"setDirected(boolean)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"setDirected(boolean)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"setEdgeBuilder(IdBuilder<E>)","url":"setEdgeBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"setEdgeBuilder(IdBuilder<E>)","url":"setEdgeBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"setEdgeBuilder(IdBuilder<E>)","url":"setEdgeBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"setEdgeBuilder(IdBuilder<Integer>)","url":"setEdgeBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"setEdgeBuilder(IdBuilder<Integer>)","url":"setEdgeBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"setEdgeBuilderDefault(Class<E>)","url":"setEdgeBuilderDefault(java.lang.Class)"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"setEdgeBuilderDefault(Class<E>)","url":"setEdgeBuilderDefault(java.lang.Class)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"setEdgeFactory(Supplier<? extends IdBuilder<E>>)","url":"setEdgeFactory(java.util.function.Supplier)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"setEdgeFactory(Supplier<? extends IdBuilder<Integer>>)","url":"setEdgeFactory(java.util.function.Supplier)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"setEdgeFactory(Supplier<? extends IdBuilder<Integer>>)","url":"setEdgeFactory(java.util.function.Supplier)"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"setEdgeParser(Function<String, E>)","url":"setEdgeParser(java.util.function.Function)"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"setEdgeParser(Function<String, E>)","url":"setEdgeParser(java.util.function.Function)"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"setEdgeParserDefault(Class<E>)","url":"setEdgeParserDefault(java.lang.Class)"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"setEdgeParserDefault(Class<E>)","url":"setEdgeParserDefault(java.lang.Class)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"setEdgeSupplier(Supplier<E>)","url":"setEdgeSupplier(java.util.function.Supplier)"},{"p":"com.jgalgo.io","c":"LedaGraphReader","l":"setEdgesWeightsKey(String)","url":"setEdgesWeightsKey(java.lang.String)"},{"p":"com.jgalgo.io","c":"LedaGraphWriter","l":"setEdgesWeightsKey(String)","url":"setEdgesWeightsKey(java.lang.String)"},{"p":"com.jgalgo.io","c":"GmlGraphWriter","l":"setEdgesWeightsKeys(Collection<String>)","url":"setEdgesWeightsKeys(java.util.Collection)"},{"p":"com.jgalgo.io","c":"GmlGraphReader","l":"setEdgeType(Class<E>)","url":"setEdgeType(java.lang.Class)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"setEdgeWeight(E, double)","url":"setEdgeWeight(E,double)"},{"p":"com.jgalgo.io","c":"DimacsGraphWriter","l":"setEdgeWeights(String)","url":"setEdgeWeights(java.lang.String)"},{"p":"com.jgalgo.io","c":"DimacsGraphReader","l":"setEdgeWeightsKey(String)","url":"setEdgeWeightsKey(java.lang.String)"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStHershbergerMaxelSuri","l":"setFastReplacementThreshold(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"KShortestPathsStKatohIbarakiMine","l":"setFastReplacementThreshold(int)"},{"p":"com.jgalgo.alg.common","c":"AlgorithmBuilderBase","l":"setOption(String, Object)","url":"setOption(java.lang.String,java.lang.Object)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"setOption(String, Object)","url":"setOption(java.lang.String,java.lang.Object)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"setOption(String, Object)","url":"setOption(java.lang.String,java.lang.Object)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"setOption(String, Object)","url":"setOption(java.lang.String,java.lang.Object)"},{"p":"com.jgalgo","c":"JGAlgoConfig","l":"setParallelByDefault(boolean)"},{"p":"com.jgalgo.alg.color","c":"ColoringGreedy","l":"setSeed(long)"},{"p":"com.jgalgo.alg.common","c":"RandomizedAlgorithm","l":"setSeed(long)"},{"p":"com.jgalgo.alg.connect","c":"KEdgeConnectedComponentsWang","l":"setSeed(long)"},{"p":"com.jgalgo.alg.cover","c":"DominatingSetAlgoGreedy","l":"setSeed(long)"},{"p":"com.jgalgo.alg.span","c":"MinimumSpanningTreeKargerKleinTarjan","l":"setSeed(long)"},{"p":"com.jgalgo.alg.match","c":"MatchingWeightedBipartiteSssp","l":"setSsspAlgo(ShortestPathSingleSource)","url":"setSsspAlgo(com.jgalgo.alg.shortestpath.ShortestPathSingleSource)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"setVertexBuilder(IdBuilder<Integer>)","url":"setVertexBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"setVertexBuilder(IdBuilder<Integer>)","url":"setVertexBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"setVertexBuilder(IdBuilder<V>)","url":"setVertexBuilder(com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"setVertexFactory(Supplier<? extends IdBuilder<Integer>>)","url":"setVertexFactory(java.util.function.Supplier)"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"setVertexFactory(Supplier<? extends IdBuilder<Integer>>)","url":"setVertexFactory(java.util.function.Supplier)"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"setVertexFactory(Supplier<? extends IdBuilder<V>>)","url":"setVertexFactory(java.util.function.Supplier)"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"setVertexParser(Function<String, V>)","url":"setVertexParser(java.util.function.Function)"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"setVertexParser(Function<String, V>)","url":"setVertexParser(java.util.function.Function)"},{"p":"com.jgalgo.io","c":"GexfGraphReader","l":"setVertexParserDefault(Class<V>)","url":"setVertexParserDefault(java.lang.Class)"},{"p":"com.jgalgo.io","c":"GraphMlGraphReader","l":"setVertexParserDefault(Class<V>)","url":"setVertexParserDefault(java.lang.Class)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"setVertexSupplier(Supplier<V>)","url":"setVertexSupplier(java.util.function.Supplier)"},{"p":"com.jgalgo.io","c":"GmlGraphReader","l":"setVertexType(Class<V>)","url":"setVertexType(java.lang.Class)"},{"p":"com.jgalgo.io","c":"LedaGraphReader","l":"setVerticesWeightsKey(String)","url":"setVerticesWeightsKey(java.lang.String)"},{"p":"com.jgalgo.io","c":"LedaGraphWriter","l":"setVerticesWeightsKey(String)","url":"setVerticesWeightsKey(java.lang.String)"},{"p":"com.jgalgo.io","c":"GmlGraphWriter","l":"setVerticesWeightsKeys(Collection<String>)","url":"setVerticesWeightsKeys(java.util.Collection)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairsAbstract","l":"ShortestPathAllPairsAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairsCardinality","l":"ShortestPathAllPairsCardinality()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairsFloydWarshall","l":"ShortestPathAllPairsFloydWarshall()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAllPairsJohnson","l":"ShortestPathAllPairsJohnson()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathAStar","l":"ShortestPathAStar()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.example","c":"ShortestPathExample","l":"shortestPathExample()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathHeuristicStAbstract","l":"ShortestPathHeuristicStAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceAbstract","l":"ShortestPathSingleSourceAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceBellmanFord","l":"ShortestPathSingleSourceBellmanFord()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceCardinality","l":"ShortestPathSingleSourceCardinality()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceDag","l":"ShortestPathSingleSourceDag()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceDial","l":"ShortestPathSingleSourceDial()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceDijkstra","l":"ShortestPathSingleSourceDijkstra()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSourceGoldberg","l":"ShortestPathSingleSourceGoldberg()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathStAbstract","l":"ShortestPathStAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathStBidirectionalBfs","l":"ShortestPathStBidirectionalBfs()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathStBidirectionalDijkstra","l":"ShortestPathStBidirectionalDijkstra()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"shortestPathTree()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Result","l":"shortestPathTree()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"shortestPathTree(boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Result","l":"shortestPathTree(boolean)"},{"p":"com.jgalgo.alg.shortestpath","c":"SimplePathsEnumeratorAbstract","l":"SimplePathsEnumeratorAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"SimplePathsEnumeratorSedgewick","l":"SimplePathsEnumeratorSedgewick()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"SimplePathsEnumerator","l":"simplePathsIter(Graph<V, E>, V, V)","url":"simplePathsIter(com.jgalgo.graph.Graph,V,V)"},{"p":"com.jgalgo.alg.shortestpath","c":"SimplePathsEnumeratorAbstract","l":"simplePathsIter(Graph<V, E>, V, V)","url":"simplePathsIter(com.jgalgo.graph.Graph,V,V)"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamic","l":"size()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowInts","l":"size()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowLongs","l":"size()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorDynamicGabowSimple","l":"size()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Queries","l":"size()"},{"p":"com.jgalgo.alg.tree","c":"LowestCommonAncestorOffline.Result","l":"size()"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Queries","l":"size()"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima.Result","l":"size()"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"source()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"source()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"source()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.Result","l":"source()"},{"p":"com.jgalgo.graph","c":"EdgeIter","l":"source()"},{"p":"com.jgalgo.graph","c":"IEdgeIter","l":"source()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"sourceGraph()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismMapping","l":"sourceGraph()"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"sourceInt()"},{"p":"com.jgalgo.alg.shortestpath","c":"ShortestPathSingleSource.IResult","l":"sourceInt()"},{"p":"com.jgalgo.graph","c":"IEdgeIter","l":"sourceInt()"},{"p":"com.jgalgo.io","c":"Sparse6GraphReader","l":"Sparse6GraphReader()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.io","c":"Sparse6GraphWriter","l":"Sparse6GraphWriter()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.example","c":"LowestCommonAncestorExample","l":"staticLcaExample()"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeAlgoAbstract","l":"SteinerTreeAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.span","c":"SteinerTreeMehlhorn","l":"SteinerTreeMehlhorn()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsAlgoAbstract","l":"StronglyConnectedComponentsAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsPathBasedDfs","l":"StronglyConnectedComponentsPathBasedDfs()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"StronglyConnectedComponentsTarjan","l":"StronglyConnectedComponentsTarjan()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.graph","c":"Graphs","l":"subGraph(Graph<V, E>, Collection<V>, Collection<E>, boolean, boolean)","url":"subGraph(com.jgalgo.graph.Graph,java.util.Collection,java.util.Collection,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"subGraph(Graph<V, E>, Collection<V>, Collection<E>)","url":"subGraph(com.jgalgo.graph.Graph,java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"subGraph(Graph<V, E>, Collection<V>)","url":"subGraph(com.jgalgo.graph.Graph,java.util.Collection)"},{"p":"com.jgalgo.graph","c":"Graphs","l":"subGraph(IntGraph, IntCollection, IntCollection, boolean, boolean)","url":"subGraph(com.jgalgo.graph.IntGraph,it.unimi.dsi.fastutil.ints.IntCollection,it.unimi.dsi.fastutil.ints.IntCollection,boolean,boolean)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"subGraphCopy(Collection<Integer>, Collection<Integer>)","url":"subGraphCopy(java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.graph","c":"Graph","l":"subGraphCopy(Collection<V>, Collection<E>)","url":"subGraphCopy(java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"subPath(int, int)","url":"subPath(int,int)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"subPath(int, int)","url":"subPath(int,int)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaGraphAdapter","l":"successors(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkAdapter","l":"successors(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaValueGraphAdapter","l":"successors(V)"},{"p":"com.jgalgo.graph","c":"IndexRemoveListener","l":"swapAndRemove(int, int)","url":"swapAndRemove(int,int)"},{"p":"com.jgalgo.gen","c":"SymmetricDifferenceGraphGenerator","l":"SymmetricDifferenceGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"SymmetricDifferenceGraphGenerator","l":"SymmetricDifferenceGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"target()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"target()"},{"p":"com.jgalgo.graph","c":"EdgeIter","l":"target()"},{"p":"com.jgalgo.graph","c":"IEdgeIter","l":"target()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismIMapping","l":"targetGraph()"},{"p":"com.jgalgo.alg.isomorphism","c":"IsomorphismMapping","l":"targetGraph()"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"targetInt()"},{"p":"com.jgalgo.graph","c":"IEdgeIter","l":"targetInt()"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgoAbstract","l":"TopologicalOrderAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgoImpl","l":"TopologicalOrderAlgoImpl()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.graph","c":"AbstractGraph","l":"toString()"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaximaAbstract","l":"TreePathMaximaAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaximaHagerup","l":"TreePathMaximaHagerup()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"TspAbstract","l":"TspAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"TspMetricMatchingAppx","l":"TspMetricMatchingAppx()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"TspMetricMstAppx","l":"TspMetricMstAppx()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"undirected()"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"undirected()"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"undirected()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"undirected()"},{"p":"com.jgalgo.graph","c":"GraphFactory","l":"undirected()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"undirected()"},{"p":"com.jgalgo.graph","c":"IndexGraphFactory","l":"undirected()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"undirected()"},{"p":"com.jgalgo.graph","c":"IntGraphFactory","l":"undirected()"},{"p":"com.jgalgo.graph","c":"Graph","l":"undirectedView()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"undirectedView()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"undirectedView()"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"UniformTreeGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"UniformTreeGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"UnionGraphGenerator()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"UnionGraphGenerator(GraphFactory<V, E>)","url":"%3Cinit%3E(com.jgalgo.graph.GraphFactory)"},{"p":"com.jgalgo.alg.match","c":"IMatching","l":"unmatchedVertices()"},{"p":"com.jgalgo.alg.match","c":"Matching","l":"unmatchedVertices()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"valueOf(Graph<V, E>, V, V, List<E>)","url":"valueOf(com.jgalgo.graph.Graph,V,V,java.util.List)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"valueOf(IntGraph, int, int, IntList)","url":"valueOf(com.jgalgo.graph.IntGraph,int,int,it.unimi.dsi.fastutil.ints.IntList)"},{"p":"com.jgalgo.alg.common","c":"EdgeDirection","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.jgalgo.graph","c":"GraphFactory.Hint","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.jgalgo.alg.common","c":"EdgeDirection","l":"values()"},{"p":"com.jgalgo.graph","c":"GraphFactory.Hint","l":"values()"},{"p":"com.jgalgo.alg.tree","c":"TreePathMaxima","l":"verifyMst(Graph<V, E>, WeightFunction<E>, Collection<E>, TreePathMaxima)","url":"verifyMst(com.jgalgo.graph.Graph,com.jgalgo.graph.WeightFunction,java.util.Collection,com.jgalgo.alg.tree.TreePathMaxima)"},{"p":"com.jgalgo.alg.bipartite","c":"BipartiteGraphs","l":"VertexBiPartitionWeightKey"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"vertexBlock(int)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"vertexBlock(int)"},{"p":"com.jgalgo.alg.common","c":"IVertexBiPartition","l":"vertexBlock(Integer)","url":"vertexBlock(java.lang.Integer)"},{"p":"com.jgalgo.alg.common","c":"IVertexPartition","l":"vertexBlock(Integer)","url":"vertexBlock(java.lang.Integer)"},{"p":"com.jgalgo.alg.common","c":"VertexBiPartition","l":"vertexBlock(V)"},{"p":"com.jgalgo.alg.common","c":"VertexPartition","l":"vertexBlock(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"vertexBuilder()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"vertexBuilder()"},{"p":"com.jgalgo.graph","c":"Graph","l":"vertexBuilder()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"vertexBuilder()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"vertexBuilder()"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder","l":"vertexBuilder()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"vertexBuilder()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"vertexBuilder()"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.IResult","l":"vertexCoreNum(int)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.IResult","l":"vertexCoreNum(Integer)","url":"vertexCoreNum(java.lang.Integer)"},{"p":"com.jgalgo.alg.cores","c":"CoresAlgo.Result","l":"vertexCoreNum(V)"},{"p":"com.jgalgo.alg.cover","c":"VertexCoverAbstract","l":"VertexCoverAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.cover","c":"VertexCoverBarYehuda","l":"VertexCoverBarYehuda()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo.IResult","l":"vertexOrderIndex(int)"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo.IResult","l":"vertexOrderIndex(Integer)","url":"vertexOrderIndex(java.lang.Integer)"},{"p":"com.jgalgo.alg.dag","c":"TopologicalOrderAlgo.Result","l":"vertexOrderIndex(V)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTAdapter","l":"vertexSet()"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"vertexSite(int)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.IResult","l":"vertexSite(Integer)","url":"vertexSite(java.lang.Integer)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgo.Result","l":"vertexSite(V)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"vertices()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"vertices()"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"vertices()"},{"p":"com.jgalgo.alg.common","c":"Path","l":"vertices()"},{"p":"com.jgalgo.graph","c":"Graph","l":"vertices()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"vertices()"},{"p":"com.jgalgo.graph","c":"IndexGraph","l":"vertices()"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"vertices()"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"vertices()"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"vertices(Collection<? extends V>, Collection<? extends V>)","url":"vertices(java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"vertices(Collection<? extends V>, Collection<? extends V>)","url":"vertices(java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"vertices(Collection<? extends V>, Collection<? extends V>)","url":"vertices(java.util.Collection,java.util.Collection)"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"vertices(Collection<? extends V>)","url":"vertices(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"vertices(Collection<? extends V>)","url":"vertices(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"vertices(Collection<? extends V>)","url":"vertices(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"vertices(Collection<? extends V>)","url":"vertices(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"vertices(Collection<? extends V>)","url":"vertices(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"vertices(Collection<? extends V>)","url":"vertices(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"vertices(Collection<? extends V>)","url":"vertices(java.util.Collection)"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"vertices(int, IdBuilder<V>)","url":"vertices(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"vertices(int, IdBuilder<V>)","url":"vertices(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"vertices(int, IdBuilder<V>)","url":"vertices(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"vertices(int, IdBuilder<V>)","url":"vertices(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"vertices(int, IdBuilder<V>)","url":"vertices(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"vertices(int, IdBuilder<V>)","url":"vertices(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"vertices(int, IdBuilder<V>)","url":"vertices(int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"vertices(int, int, IdBuilder<V>)","url":"vertices(int,int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"vertices(int, int, IdBuilder<V>)","url":"vertices(int,int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"vertices(int, int, IdBuilder<V>)","url":"vertices(int,int,com.jgalgo.graph.IdBuilder)"},{"p":"com.jgalgo.gen","c":"CompleteBipartiteGraphGenerator","l":"vertices(int, int)","url":"vertices(int,int)"},{"p":"com.jgalgo.gen","c":"GnmBipartiteGraphGenerator","l":"vertices(int, int)","url":"vertices(int,int)"},{"p":"com.jgalgo.gen","c":"GnpBipartiteGraphGenerator","l":"vertices(int, int)","url":"vertices(int,int)"},{"p":"com.jgalgo.gen","c":"BarabasiAlbertGraphGenerator","l":"vertices(int)"},{"p":"com.jgalgo.gen","c":"CompleteGraphGenerator","l":"vertices(int)"},{"p":"com.jgalgo.gen","c":"EmptyGraphGenerator","l":"vertices(int)"},{"p":"com.jgalgo.gen","c":"GnmGraphGenerator","l":"vertices(int)"},{"p":"com.jgalgo.gen","c":"GnpGraphGenerator","l":"vertices(int)"},{"p":"com.jgalgo.gen","c":"RecursiveMatrixGraphGenerator","l":"vertices(int)"},{"p":"com.jgalgo.gen","c":"UniformTreeGenerator","l":"vertices(int)"},{"p":"com.jgalgo.alg.common","c":"Path","l":"verticesIter(Graph<V, E>, V, List<E>)","url":"verticesIter(com.jgalgo.graph.Graph,V,java.util.List)"},{"p":"com.jgalgo.alg.common","c":"IPath","l":"verticesIter(IntGraph, int, IntList)","url":"verticesIter(com.jgalgo.graph.IntGraph,int,it.unimi.dsi.fastutil.ints.IntList)"},{"p":"com.jgalgo.graph","c":"IndexGraphBuilder.ReIndexedGraph","l":"verticesReIndexing"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"verticesWeights(String)","url":"verticesWeights(java.lang.String)"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"verticesWeights(String)","url":"verticesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"Graph","l":"verticesWeights(String)","url":"verticesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"verticesWeights(String)","url":"verticesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"IntGraph","l":"verticesWeights(String)","url":"verticesWeights(java.lang.String)"},{"p":"com.jgalgo.graph","c":"IntGraphBuilder","l":"verticesWeights(String)","url":"verticesWeights(java.lang.String)"},{"p":"com.jgalgo.adapt.guava","c":"GuavaNetworkWrapper","l":"verticesWeightsKeys()"},{"p":"com.jgalgo.adapt.jgrapht","c":"JGraphTWrapper","l":"verticesWeightsKeys()"},{"p":"com.jgalgo.graph","c":"Graph","l":"verticesWeightsKeys()"},{"p":"com.jgalgo.graph","c":"GraphBuilder","l":"verticesWeightsKeys()"},{"p":"com.jgalgo.gen","c":"UnionGraphGenerator","l":"verticesWeightsKeys(Set<String>)","url":"verticesWeightsKeys(java.util.Set)"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgoAbstract","l":"VoronoiAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.shortestpath","c":"VoronoiAlgoDijkstra","l":"VoronoiAlgoDijkstra()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"WeaklyConnectedComponentsAlgoAbstract","l":"WeaklyConnectedComponentsAlgoAbstract()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.alg.connect","c":"WeaklyConnectedComponentsAlgoImpl","l":"WeaklyConnectedComponentsAlgoImpl()","url":"%3Cinit%3E()"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"weight(int)"},{"p":"com.jgalgo.graph","c":"IWeightFunctionInt","l":"weight(int)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"weight(int)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"weight(int)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"weight(int)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"weight(Integer)","url":"weight(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightFunctionInt","l":"weight(Integer)","url":"weight(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsDouble","l":"weight(Integer)","url":"weight(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsFloat","l":"weight(Integer)","url":"weight(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsLong","l":"weight(Integer)","url":"weight(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"weight(K)"},{"p":"com.jgalgo.graph","c":"WeightFunctionInt","l":"weight(K)"},{"p":"com.jgalgo.graph","c":"WeightsDouble","l":"weight(K)"},{"p":"com.jgalgo.graph","c":"WeightsFloat","l":"weight(K)"},{"p":"com.jgalgo.graph","c":"WeightsLong","l":"weight(K)"},{"p":"com.jgalgo.graph","c":"IWeightFunctionInt","l":"weightInt(int)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"weightInt(int)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"weightInt(int)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"weightInt(int)"},{"p":"com.jgalgo.graph","c":"IWeightFunctionInt","l":"weightInt(Integer)","url":"weightInt(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsByte","l":"weightInt(Integer)","url":"weightInt(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsInt","l":"weightInt(Integer)","url":"weightInt(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"IWeightsShort","l":"weightInt(Integer)","url":"weightInt(java.lang.Integer)"},{"p":"com.jgalgo.graph","c":"WeightFunctionInt","l":"weightInt(K)"},{"p":"com.jgalgo.graph","c":"WeightsByte","l":"weightInt(K)"},{"p":"com.jgalgo.graph","c":"WeightsInt","l":"weightInt(K)"},{"p":"com.jgalgo.graph","c":"WeightsShort","l":"weightInt(K)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"weightSum(Iterable<Integer>)","url":"weightSum(java.lang.Iterable)"},{"p":"com.jgalgo.graph","c":"IWeightFunctionInt","l":"weightSum(Iterable<Integer>)","url":"weightSum(java.lang.Iterable)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"weightSum(Iterable<K>)","url":"weightSum(java.lang.Iterable)"},{"p":"com.jgalgo.graph","c":"WeightFunctionInt","l":"weightSum(Iterable<K>)","url":"weightSum(java.lang.Iterable)"},{"p":"com.jgalgo.graph","c":"IWeightFunction","l":"weightSum(IWeightFunction, IntIterable)","url":"weightSum(com.jgalgo.graph.IWeightFunction,it.unimi.dsi.fastutil.ints.IntIterable)"},{"p":"com.jgalgo.graph","c":"WeightFunction","l":"weightSum(WeightFunction<K>, Iterable<K>)","url":"weightSum(com.jgalgo.graph.WeightFunction,java.lang.Iterable)"},{"p":"com.jgalgo.io","c":"GraphWriter","l":"writeGraph(Graph<V, E>, File)","url":"writeGraph(com.jgalgo.graph.Graph,java.io.File)"},{"p":"com.jgalgo.io","c":"GraphWriter","l":"writeGraph(Graph<V, E>, String)","url":"writeGraph(com.jgalgo.graph.Graph,java.lang.String)"},{"p":"com.jgalgo.io","c":"GraphWriter","l":"writeGraph(Graph<V, E>, Writer)","url":"writeGraph(com.jgalgo.graph.Graph,java.io.Writer)"},{"p":"com.jgalgo.io","c":"DimacsGraphWriter","l":"writeGraphImpl(Graph<Integer, Integer>, Writer)","url":"writeGraphImpl(com.jgalgo.graph.Graph,java.io.Writer)"},{"p":"com.jgalgo.io","c":"LedaGraphWriter","l":"writeGraphImpl(Graph<Integer, Integer>, Writer)","url":"writeGraphImpl(com.jgalgo.graph.Graph,java.io.Writer)"},{"p":"com.jgalgo.io","c":"GmlGraphWriter","l":"writeGraphImpl(Graph<V, E>, Writer)","url":"writeGraphImpl(com.jgalgo.graph.Graph,java.io.Writer)"}]