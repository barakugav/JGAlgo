<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JGAlgo - JGraphT Adapters"><sessioninfo id="fv-az1019-229-2cdc7082" start="1703095314486" dump="1703095318104"/><package name="com/jgalgo/adapt/jgrapht"><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$OutEdges$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$OutEdges;)V" line="1086"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="1090"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="1097"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$InEdges" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/util/Set;Lorg/jgrapht/Graph;)V" line="327"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/EdgeIter;" line="333"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$InEdges$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$InEdges;)V" line="1122"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="1126"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="1135"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$BaseEdgeSet" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/jgrapht/Graph;)V" line="231"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="239"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="244"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="249"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="254"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="259"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$OutEdges$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$OutEdges;)V" line="303"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Ljava/lang/Object;" line="306"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="()Ljava/lang/Object;" line="313"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lorg/jgrapht/Graph;Ljava/lang/String;Lcom/jgalgo/graph/WeightsDouble;Lcom/jgalgo/graph/IndexIdMap;Lcom/jgalgo/graph/IndexIdMap;)V" line="682"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="770"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(I)Lcom/jgalgo/graph/IEdgeSet;" line="777"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(II)I" line="784"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(II)Lcom/jgalgo/graph/IEdgeSet;" line="792"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveEdge" desc="(III)V" line="800"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(I)I" line="805"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(I)I" line="812"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(II)I" line="819"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="832"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="838"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertices" desc="(Ljava/util/Collection;)V" line="845"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdges" desc="(Ljava/util/Collection;)V" line="850"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureVertexCapacity" desc="(I)V" line="854"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureEdgeCapacity" desc="(I)V" line="857"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="861"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="866"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="871"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowSelfEdges" desc="()Z" line="876"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowParallelEdges" desc="()Z" line="881"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="886"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Lit/unimi/dsi/fastutil/ints/IntSet;" line="891"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertexInt" desc="()I" line="896"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertices" desc="(Ljava/util/Collection;)V" line="901"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(I)V" line="906"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(II)I" line="911"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdges" desc="(Lcom/jgalgo/graph/EdgeSet;)V" line="916"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesReassignIds" desc="(Lcom/jgalgo/graph/IEdgeSet;)Lit/unimi/dsi/fastutil/ints/IntSet;" line="921"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(I)V" line="926"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(I)V" line="931"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(I)V" line="936"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(I)V" line="941"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="946"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="951"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="957"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="962"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="968"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="973"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertexRemoveListener" desc="(Lcom/jgalgo/graph/IndexRemoveListener;)V" line="979"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertexRemoveListener" desc="(Lcom/jgalgo/graph/IndexRemoveListener;)V" line="985"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgeRemoveListener" desc="(Lcom/jgalgo/graph/IndexRemoveListener;)V" line="991"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgeRemoveListener" desc="(Lcom/jgalgo/graph/IndexRemoveListener;)V" line="997"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="1002"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIntIdMap;" line="1007"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="391"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="80"/><counter type="COMPLEXITY" missed="0" covered="51"/><counter type="METHOD" missed="0" covered="44"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$InEdges" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl;Ljava/lang/Object;ILjava/util/Set;)V" line="1113"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="1122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$BaseEdgeSet$BaseIter" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$BaseEdgeSet;)V" line="262"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="270"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="next" desc="()Ljava/lang/Object;" line="275"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNext" desc="()Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$InEdges$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$InEdges;)V" line="333"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Ljava/lang/Object;" line="336"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="()Ljava/lang/Object;" line="344"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$EdgeSetBase$IterBase" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$EdgeSetBase;)V" line="1028"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="advance" desc="()V" line="1039"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hasNext" desc="()Z" line="1048"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextInt" desc="()I" line="1053"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="peekNextInt" desc="()I" line="1062"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexIdMapImpl" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Z)V" line="598"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Ljava/lang/Object;)V" line="606"><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)V" line="613"><counter type="INSTRUCTION" missed="7" covered="39"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="626"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToId" desc="(I)Ljava/lang/Object;" line="632"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexToIdIfExist" desc="(I)Ljava/lang/Object;" line="644"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndex" desc="(Ljava/lang/Object;)I" line="651"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="idToIndexIfExist" desc="(Ljava/lang/Object;)I" line="664"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="592"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="145"/><counter type="BRANCH" missed="4" covered="16"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$SourceTargetEdgeSet" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Set;Lorg/jgrapht/Graph;)V" line="358"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/EdgeIter;" line="365"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper;Lorg/jgrapht/Graph;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)D" line="132"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(Ljava/lang/Object;D)V" line="137"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()D" line="142"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$SourceTargetEdgeSet" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl;IILjava/util/Set;)V" line="1148"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="1156"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$OutEdges" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl;Ljava/lang/Object;ILjava/util/Set;)V" line="1077"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/IEdgeIter;" line="1086"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTAdapter" sourcefilename="JGraphTAdapter.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jgalgo/graph/Graph;Ljava/lang/String;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="80"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVertexSupplier" desc="(Ljava/util/function/Supplier;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdgeSupplier" desc="(Ljava/util/function/Supplier;)V" line="130"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAllEdges" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;" line="135"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="147"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexSupplier" desc="()Ljava/util/function/Supplier;" line="159"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeSupplier" desc="()Ljava/util/function/Supplier;" line="164"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexIdxNonNull" desc="(Ljava/lang/Object;)I" line="168"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="173"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="188"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="()Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Ljava/lang/Object;)Z" line="209"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="217"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsEdge" desc="(Ljava/lang/Object;)Z" line="228"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsVertex" desc="(Ljava/lang/Object;)Z" line="233"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSet" desc="()Ljava/util/Set;" line="238"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="degreeOf" desc="(Ljava/lang/Object;)I" line="243"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgesOf" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="258"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inDegreeOf" desc="(Ljava/lang/Object;)I" line="263"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="incomingEdgesOf" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="270"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outDegreeOf" desc="(Ljava/lang/Object;)I" line="275"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outgoingEdgesOf" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="282"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeAllEdges" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;" line="287"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="301"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Object;)Z" line="317"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(Ljava/lang/Object;)Z" line="325"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexSet" desc="()Ljava/util/Set;" line="333"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeSource" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="338"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeTarget" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="343"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lorg/jgrapht/GraphType;" line="348"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeWeight" desc="(Ljava/lang/Object;)D" line="353"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdgeWeight" desc="(Ljava/lang/Object;D)V" line="358"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="563"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="140"/><counter type="COMPLEXITY" missed="0" covered="67"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lorg/jgrapht/Graph;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/jgrapht/Graph;Ljava/lang/String;)V" line="120"><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertices" desc="()Ljava/util/Set;" line="158"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edges" desc="()Ljava/util/Set;" line="163"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Ljava/lang/Object;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertices" desc="(Ljava/util/Collection;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertex" desc="(Ljava/lang/Object;)V" line="182"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVertices" desc="(Ljava/util/Collection;)V" line="190"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renameVertex" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="196"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="201"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="207"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="213"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lcom/jgalgo/graph/EdgeSet;" line="220"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="385"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdges" desc="(Lcom/jgalgo/graph/EdgeSet;)V" line="394"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdge" desc="(Ljava/lang/Object;)V" line="405"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdges" desc="(Ljava/util/Collection;)V" line="412"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesOf" desc="(Ljava/lang/Object;)V" line="418"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeOutEdgesOf" desc="(Ljava/lang/Object;)V" line="426"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeInEdgesOf" desc="(Ljava/lang/Object;)V" line="434"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="renameEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="442"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="moveEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V" line="447"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeSource" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="452"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeTarget" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="458"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeEndpoint" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="464"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="477"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clearEdges" desc="()V" line="484"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertexBuilder" desc="()Lcom/jgalgo/graph/IdBuilder;" line="490"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeBuilder" desc="()Lcom/jgalgo/graph/IdBuilder;" line="495"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureVertexCapacity" desc="(I)V" line="499"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureEdgeCapacity" desc="(I)V" line="502"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="506"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVerticesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="512"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeVerticesWeights" desc="(Ljava/lang/String;)V" line="517"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVerticesWeightsKeys" desc="()Ljava/util/Set;" line="522"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeights" desc="(Ljava/lang/String;)Lcom/jgalgo/graph/Weights;" line="528"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdgesWeights" desc="(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Lcom/jgalgo/graph/Weights;" line="535"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="removeEdgesWeights" desc="(Ljava/lang/String;)V" line="540"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgesWeightsKeys" desc="()Ljava/util/Set;" line="549"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="554"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowSelfEdges" desc="()Z" line="559"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isAllowParallelEdges" desc="()Z" line="564"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraph" desc="()Lcom/jgalgo/graph/IndexGraph;" line="569"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphVerticesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="574"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexGraphEdgesMap" desc="()Lcom/jgalgo/graph/IndexIdMap;" line="579"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkVertex" desc="(Ljava/lang/Object;)V" line="583"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkEdge" desc="(Ljava/lang/Object;)V" line="588"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="589"/><counter type="BRANCH" missed="0" covered="44"/><counter type="LINE" missed="0" covered="132"/><counter type="COMPLEXITY" missed="0" covered="69"/><counter type="METHOD" missed="0" covered="47"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$OutEdges" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/util/Set;Lorg/jgrapht/Graph;)V" line="297"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lcom/jgalgo/graph/EdgeIter;" line="303"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl;Lcom/jgalgo/graph/WeightsDouble;Lcom/jgalgo/graph/IndexIdMap;)V" line="694"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(I)D" line="698"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(ID)V" line="703"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultWeight" desc="()D" line="708"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$IndicesSet" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="718"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="724"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="729"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Lit/unimi/dsi/fastutil/ints/IntCollection;)Z" line="734"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsAll" desc="(Ljava/util/Collection;)Z" line="739"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toIntArray" desc="()[I" line="744"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="([I)[I" line="749"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="754"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toArray" desc="([Ljava/lang/Object;)[Ljava/lang/Object;" line="759"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="iterator" desc="()Lit/unimi/dsi/fastutil/ints/IntIterator;" line="764"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$EdgeSetBase" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl;Ljava/util/Set;)V" line="1014"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="1020"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(I)Z" line="1025"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$SourceTargetEdgeSet$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$SourceTargetEdgeSet;)V" line="365"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="source" desc="()Ljava/lang/Object;" line="368"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="target" desc="()Ljava/lang/Object;" line="375"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$SourceTargetEdgeSet$1" sourcefilename="JGraphTWrapper.java"><method name="&lt;init&gt;" desc="(Lcom/jgalgo/adapt/jgrapht/JGraphTWrapper$IndexGraphImpl$SourceTargetEdgeSet;)V" line="1156"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sourceInt" desc="()I" line="1160"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="targetInt" desc="()I" line="1167"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="JGraphTWrapper.java"><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="2"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="5" mb="0" cb="0"/><line nr="128" mi="0" ci="16" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="6" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="0" ci="10" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="10" mb="0" cb="2"/><line nr="152" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="13" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="2"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="9" mb="0" cb="2"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="190" mi="0" ci="9" mb="0" cb="2"/><line nr="191" mi="0" ci="4" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="3" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="208" mi="0" ci="11" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="214" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="0"/><line nr="221" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="13" mb="0" cb="0"/><line nr="231" mi="0" ci="2" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><line nr="233" mi="0" ci="3" mb="0" cb="0"/><line nr="234" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="1" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="254" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="0"/><line nr="264" mi="0" ci="6" mb="0" cb="0"/><line nr="265" mi="0" ci="11" mb="0" cb="2"/><line nr="266" mi="0" ci="4" mb="0" cb="0"/><line nr="270" mi="0" ci="7" mb="0" cb="2"/><line nr="275" mi="0" ci="3" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="11" mb="0" cb="2"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="3" mb="0" cb="2"/><line nr="285" mi="0" ci="4" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="297" mi="0" ci="4" mb="0" cb="0"/><line nr="298" mi="0" ci="3" mb="0" cb="0"/><line nr="299" mi="0" ci="1" mb="0" cb="0"/><line nr="303" mi="0" ci="12" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="2"/><line nr="307" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="4" mb="0" cb="0"/><line nr="313" mi="0" ci="3" mb="0" cb="2"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="315" mi="0" ci="7" mb="0" cb="0"/><line nr="316" mi="0" ci="19" mb="0" cb="4"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="3" mb="0" cb="0"/><line nr="329" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="12" mb="0" cb="0"/><line nr="336" mi="0" ci="3" mb="0" cb="2"/><line nr="337" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="7" mb="0" cb="0"/><line nr="339" mi="0" ci="19" mb="0" cb="4"/><line nr="344" mi="0" ci="3" mb="0" cb="2"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="0"/><line nr="358" mi="0" ci="4" mb="0" cb="0"/><line nr="359" mi="0" ci="3" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><line nr="365" mi="0" ci="12" mb="0" cb="0"/><line nr="368" mi="0" ci="3" mb="0" cb="2"/><line nr="369" mi="0" ci="4" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="3" mb="0" cb="2"/><line nr="376" mi="0" ci="4" mb="0" cb="0"/><line nr="377" mi="0" ci="4" mb="0" cb="0"/><line nr="385" mi="0" ci="5" mb="0" cb="2"/><line nr="386" mi="0" ci="6" mb="0" cb="0"/><line nr="387" mi="0" ci="7" mb="0" cb="0"/><line nr="388" mi="0" ci="4" mb="0" cb="0"/><line nr="389" mi="0" ci="1" mb="0" cb="0"/><line nr="394" mi="0" ci="2" mb="0" cb="0"/><line nr="395" mi="0" ci="6" mb="0" cb="2"/><line nr="396" mi="0" ci="3" mb="0" cb="0"/><line nr="397" mi="0" ci="3" mb="0" cb="0"/><line nr="398" mi="0" ci="3" mb="0" cb="0"/><line nr="399" mi="0" ci="5" mb="0" cb="0"/><line nr="400" mi="0" ci="1" mb="0" cb="0"/><line nr="401" mi="0" ci="1" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="5" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="408" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="9" mb="0" cb="2"/><line nr="413" mi="0" ci="4" mb="0" cb="0"/><line nr="414" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="8" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="420" mi="0" ci="9" mb="0" cb="2"/><line nr="421" mi="0" ci="5" mb="0" cb="0"/><line nr="422" mi="0" ci="1" mb="0" cb="0"/><line nr="426" mi="0" ci="8" mb="0" cb="0"/><line nr="427" mi="0" ci="5" mb="0" cb="0"/><line nr="428" mi="0" ci="9" mb="0" cb="2"/><line nr="429" mi="0" ci="5" mb="0" cb="0"/><line nr="430" mi="0" ci="1" mb="0" cb="0"/><line nr="434" mi="0" ci="8" mb="0" cb="0"/><line nr="435" mi="0" ci="5" mb="0" cb="0"/><line nr="436" mi="0" ci="9" mb="0" cb="2"/><line nr="437" mi="0" ci="5" mb="0" cb="0"/><line nr="438" mi="0" ci="1" mb="0" cb="0"/><line nr="442" mi="0" ci="5" mb="0" cb="0"/><line nr="447" mi="0" ci="5" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="5" mb="0" cb="0"/><line nr="458" mi="0" ci="3" mb="0" cb="0"/><line nr="459" mi="0" ci="5" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="5" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="2"/><line nr="469" mi="0" ci="2" mb="0" cb="0"/><line nr="470" mi="0" ci="4" mb="0" cb="2"/><line nr="471" mi="0" ci="2" mb="0" cb="0"/><line nr="472" mi="0" ci="7" mb="0" cb="0"/><line nr="477" mi="0" ci="10" mb="0" cb="0"/><line nr="478" mi="0" ci="3" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="480" mi="0" ci="1" mb="0" cb="0"/><line nr="484" mi="0" ci="10" mb="0" cb="0"/><line nr="485" mi="0" ci="3" mb="0" cb="0"/><line nr="486" mi="0" ci="1" mb="0" cb="0"/><line nr="490" mi="0" ci="2" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="499" mi="0" ci="1" mb="0" cb="0"/><line nr="502" mi="0" ci="1" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="512" mi="0" ci="5" mb="0" cb="0"/><line nr="517" mi="0" ci="6" mb="0" cb="0"/><line nr="522" mi="0" ci="2" mb="0" cb="0"/><line nr="528" mi="0" ci="8" mb="0" cb="4"/><line nr="529" mi="0" ci="2" mb="0" cb="0"/><line nr="530" mi="0" ci="3" mb="0" cb="0"/><line nr="535" mi="0" ci="5" mb="0" cb="0"/><line nr="540" mi="0" ci="8" mb="0" cb="4"/><line nr="541" mi="0" ci="5" mb="0" cb="0"/><line nr="543" mi="0" ci="6" mb="0" cb="0"/><line nr="549" mi="0" ci="9" mb="0" cb="2"/><line nr="554" mi="0" ci="5" mb="0" cb="0"/><line nr="559" mi="0" ci="5" mb="0" cb="0"/><line nr="564" mi="0" ci="5" mb="0" cb="0"/><line nr="569" mi="0" ci="3" mb="0" cb="0"/><line nr="574" mi="0" ci="3" mb="0" cb="0"/><line nr="579" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="5" mb="0" cb="2"/><line nr="584" mi="0" ci="3" mb="0" cb="0"/><line nr="585" mi="0" ci="1" mb="0" cb="0"/><line nr="588" mi="0" ci="5" mb="0" cb="2"/><line nr="589" mi="0" ci="3" mb="0" cb="0"/><line nr="590" mi="0" ci="1" mb="0" cb="0"/><line nr="592" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="5" mb="0" cb="0"/><line nr="600" mi="0" ci="4" mb="0" cb="0"/><line nr="601" mi="0" ci="5" mb="0" cb="0"/><line nr="602" mi="0" ci="3" mb="0" cb="0"/><line nr="603" mi="0" ci="1" mb="0" cb="0"/><line nr="606" mi="0" ci="4" mb="0" cb="0"/><line nr="607" mi="0" ci="5" mb="0" cb="0"/><line nr="608" mi="0" ci="6" mb="0" cb="0"/><line nr="609" mi="7" ci="1" mb="2" cb="0"/><line nr="610" mi="0" ci="1" mb="0" cb="0"/><line nr="613" mi="0" ci="5" mb="0" cb="0"/><line nr="614" mi="0" ci="6" mb="0" cb="0"/><line nr="615" mi="0" ci="3" mb="0" cb="2"/><line nr="616" mi="0" ci="6" mb="0" cb="0"/><line nr="618" mi="0" ci="5" mb="0" cb="0"/><line nr="619" mi="0" ci="6" mb="0" cb="0"/><line nr="620" mi="0" ci="6" mb="0" cb="0"/><line nr="621" mi="7" ci="1" mb="2" cb="0"/><line nr="623" mi="0" ci="1" mb="0" cb="0"/><line nr="626" mi="0" ci="3" mb="0" cb="0"/><line nr="627" mi="0" ci="3" mb="0" cb="0"/><line nr="628" mi="0" ci="1" mb="0" cb="0"/><line nr="632" mi="0" ci="8" mb="0" cb="4"/><line nr="633" mi="0" ci="3" mb="0" cb="2"/><line nr="634" mi="0" ci="3" mb="0" cb="0"/><line nr="636" mi="0" ci="3" mb="0" cb="0"/><line nr="639" mi="0" ci="5" mb="0" cb="0"/><line nr="644" mi="0" ci="8" mb="0" cb="4"/><line nr="645" mi="0" ci="2" mb="0" cb="0"/><line nr="646" mi="0" ci="5" mb="0" cb="0"/><line nr="651" mi="0" ci="5" mb="0" cb="0"/><line nr="652" mi="0" ci="3" mb="0" cb="2"/><line nr="653" mi="0" ci="3" mb="0" cb="2"/><line nr="654" mi="0" ci="3" mb="0" cb="0"/><line nr="656" mi="0" ci="3" mb="0" cb="0"/><line nr="659" mi="0" ci="2" mb="0" cb="0"/><line nr="664" mi="0" ci="5" mb="0" cb="0"/><line nr="682" mi="0" ci="2" mb="0" cb="0"/><line nr="683" mi="0" ci="3" mb="0" cb="0"/><line nr="684" mi="0" ci="3" mb="0" cb="0"/><line nr="685" mi="0" ci="3" mb="0" cb="0"/><line nr="686" mi="0" ci="7" mb="0" cb="0"/><line nr="687" mi="0" ci="7" mb="0" cb="0"/><line nr="688" mi="0" ci="5" mb="0" cb="0"/><line nr="689" mi="0" ci="5" mb="0" cb="0"/><line nr="690" mi="0" ci="3" mb="0" cb="0"/><line nr="691" mi="0" ci="2" mb="0" cb="2"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="20" mb="0" cb="0"/><line nr="698" mi="0" ci="8" mb="0" cb="0"/><line nr="703" mi="0" ci="8" mb="0" cb="0"/><line nr="704" mi="0" ci="1" mb="0" cb="0"/><line nr="708" mi="0" ci="4" mb="0" cb="0"/><line nr="712" mi="0" ci="1" mb="0" cb="0"/><line nr="718" mi="0" ci="2" mb="0" cb="0"/><line nr="719" mi="0" ci="3" mb="0" cb="0"/><line nr="720" mi="0" ci="1" mb="0" cb="0"/><line nr="724" mi="0" ci="4" mb="0" cb="0"/><line nr="729" mi="0" ci="12" mb="0" cb="4"/><line nr="734" mi="0" ci="7" mb="0" cb="0"/><line nr="739" mi="0" ci="7" mb="0" cb="0"/><line nr="744" mi="0" ci="6" mb="0" cb="0"/><line nr="749" mi="0" ci="7" mb="0" cb="0"/><line nr="754" mi="0" ci="6" mb="0" cb="0"/><line nr="759" mi="0" ci="7" mb="0" cb="0"/><line nr="764" mi="0" ci="6" mb="0" cb="0"/><line nr="770" mi="0" ci="5" mb="0" cb="0"/><line nr="771" mi="0" ci="5" mb="0" cb="0"/><line nr="772" mi="0" ci="8" mb="0" cb="0"/><line nr="777" mi="0" ci="5" mb="0" cb="0"/><line nr="778" mi="0" ci="5" mb="0" cb="0"/><line nr="779" mi="0" ci="8" mb="0" cb="0"/><line nr="784" mi="0" ci="5" mb="0" cb="0"/><line nr="785" mi="0" ci="5" mb="0" cb="0"/><line nr="786" mi="0" ci="6" mb="0" cb="0"/><line nr="787" mi="0" ci="9" mb="0" cb="2"/><line nr="792" mi="0" ci="5" mb="0" cb="0"/><line nr="793" mi="0" ci="5" mb="0" cb="0"/><line nr="794" mi="0" ci="6" mb="0" cb="0"/><line nr="795" mi="0" ci="8" mb="0" cb="0"/><line nr="800" mi="0" ci="5" mb="0" cb="0"/><line nr="805" mi="0" ci="5" mb="0" cb="0"/><line nr="806" mi="0" ci="5" mb="0" cb="0"/><line nr="807" mi="0" ci="5" mb="0" cb="0"/><line nr="812" mi="0" ci="5" mb="0" cb="0"/><line nr="813" mi="0" ci="5" mb="0" cb="0"/><line nr="814" mi="0" ci="5" mb="0" cb="0"/><line nr="819" mi="0" ci="5" mb="0" cb="0"/><line nr="820" mi="0" ci="5" mb="0" cb="0"/><line nr="821" mi="0" ci="5" mb="0" cb="0"/><line nr="822" mi="0" ci="5" mb="0" cb="0"/><line nr="823" mi="0" ci="4" mb="0" cb="2"/><line nr="824" mi="0" ci="5" mb="0" cb="0"/><line nr="825" mi="0" ci="4" mb="0" cb="2"/><line nr="826" mi="0" ci="5" mb="0" cb="0"/><line nr="827" mi="0" ci="7" mb="0" cb="0"/><line nr="832" mi="0" ci="2" mb="0" cb="0"/><line nr="838" mi="0" ci="8" mb="0" cb="4"/><line nr="839" mi="0" ci="2" mb="0" cb="0"/><line nr="840" mi="0" ci="3" mb="0" cb="0"/><line nr="845" mi="0" ci="5" mb="0" cb="0"/><line nr="850" mi="0" ci="5" mb="0" cb="0"/><line nr="854" mi="0" ci="1" mb="0" cb="0"/><line nr="857" mi="0" ci="1" mb="0" cb="0"/><line nr="861" mi="0" ci="2" mb="0" cb="0"/><line nr="866" mi="0" ci="9" mb="0" cb="2"/><line nr="871" mi="0" ci="5" mb="0" cb="0"/><line nr="876" mi="0" ci="5" mb="0" cb="0"/><line nr="881" mi="0" ci="5" mb="0" cb="0"/><line nr="886" mi="0" ci="3" mb="0" cb="0"/><line nr="891" mi="0" ci="3" mb="0" cb="0"/><line nr="896" mi="0" ci="5" mb="0" cb="0"/><line nr="901" mi="0" ci="5" mb="0" cb="0"/><line nr="906" mi="0" ci="5" mb="0" cb="0"/><line nr="911" mi="0" ci="5" mb="0" cb="0"/><line nr="916" mi="0" ci="5" mb="0" cb="0"/><line nr="921" mi="0" ci="5" mb="0" cb="0"/><line nr="926" mi="0" ci="5" mb="0" cb="0"/><line nr="931" mi="0" ci="5" mb="0" cb="0"/><line nr="936" mi="0" ci="5" mb="0" cb="0"/><line nr="941" mi="0" ci="5" mb="0" cb="0"/><line nr="946" mi="0" ci="5" mb="0" cb="0"/><line nr="951" mi="0" ci="5" mb="0" cb="0"/><line nr="957" mi="0" ci="5" mb="0" cb="0"/><line nr="962" mi="0" ci="5" mb="0" cb="0"/><line nr="968" mi="0" ci="5" mb="0" cb="0"/><line nr="973" mi="0" ci="5" mb="0" cb="0"/><line nr="979" mi="0" ci="7" mb="0" cb="0"/><line nr="985" mi="0" ci="7" mb="0" cb="0"/><line nr="991" mi="0" ci="7" mb="0" cb="0"/><line nr="997" mi="0" ci="7" mb="0" cb="0"/><line nr="1002" mi="0" ci="3" mb="0" cb="0"/><line nr="1007" mi="0" ci="3" mb="0" cb="0"/><line nr="1014" mi="0" ci="5" mb="0" cb="0"/><line nr="1015" mi="0" ci="5" mb="0" cb="0"/><line nr="1016" mi="0" ci="1" mb="0" cb="0"/><line nr="1020" mi="0" ci="4" mb="0" cb="0"/><line nr="1025" mi="0" ci="9" mb="0" cb="0"/><line nr="1028" mi="0" ci="5" mb="0" cb="0"/><line nr="1030" mi="0" ci="6" mb="0" cb="0"/><line nr="1035" mi="0" ci="2" mb="0" cb="0"/><line nr="1036" mi="0" ci="1" mb="0" cb="0"/><line nr="1039" mi="0" ci="4" mb="0" cb="2"/><line nr="1040" mi="0" ci="6" mb="0" cb="0"/><line nr="1042" mi="0" ci="3" mb="0" cb="0"/><line nr="1044" mi="0" ci="1" mb="0" cb="0"/><line nr="1048" mi="0" ci="7" mb="0" cb="2"/><line nr="1053" mi="0" ci="3" mb="0" cb="2"/><line nr="1054" mi="0" ci="4" mb="0" cb="0"/><line nr="1055" mi="0" ci="4" mb="0" cb="0"/><line nr="1056" mi="0" ci="2" mb="0" cb="0"/><line nr="1057" mi="0" ci="8" mb="0" cb="0"/><line nr="1062" mi="0" ci="3" mb="0" cb="2"/><line nr="1063" mi="0" ci="4" mb="0" cb="0"/><line nr="1064" mi="0" ci="8" mb="0" cb="0"/><line nr="1077" mi="0" ci="3" mb="0" cb="0"/><line nr="1078" mi="0" ci="4" mb="0" cb="0"/><line nr="1079" mi="0" ci="3" mb="0" cb="0"/><line nr="1080" mi="0" ci="3" mb="0" cb="0"/><line nr="1081" mi="0" ci="6" mb="0" cb="0"/><line nr="1082" mi="0" ci="1" mb="0" cb="0"/><line nr="1086" mi="0" ci="12" mb="0" cb="0"/><line nr="1090" mi="0" ci="3" mb="0" cb="2"/><line nr="1091" mi="0" ci="4" mb="0" cb="0"/><line nr="1092" mi="0" ci="4" mb="0" cb="0"/><line nr="1097" mi="0" ci="3" mb="0" cb="2"/><line nr="1098" mi="0" ci="4" mb="0" cb="0"/><line nr="1099" mi="0" ci="8" mb="0" cb="0"/><line nr="1100" mi="0" ci="18" mb="0" cb="4"/><line nr="1101" mi="0" ci="12" mb="0" cb="0"/><line nr="1113" mi="0" ci="3" mb="0" cb="0"/><line nr="1114" mi="0" ci="4" mb="0" cb="0"/><line nr="1115" mi="0" ci="3" mb="0" cb="0"/><line nr="1116" mi="0" ci="3" mb="0" cb="0"/><line nr="1117" mi="0" ci="6" mb="0" cb="0"/><line nr="1118" mi="0" ci="1" mb="0" cb="0"/><line nr="1122" mi="0" ci="12" mb="0" cb="0"/><line nr="1126" mi="0" ci="3" mb="0" cb="2"/><line nr="1127" mi="0" ci="4" mb="0" cb="0"/><line nr="1128" mi="0" ci="8" mb="0" cb="0"/><line nr="1129" mi="0" ci="18" mb="0" cb="4"/><line nr="1130" mi="0" ci="12" mb="0" cb="0"/><line nr="1135" mi="0" ci="3" mb="0" cb="2"/><line nr="1136" mi="0" ci="4" mb="0" cb="0"/><line nr="1137" mi="0" ci="4" mb="0" cb="0"/><line nr="1148" mi="0" ci="3" mb="0" cb="0"/><line nr="1149" mi="0" ci="4" mb="0" cb="0"/><line nr="1150" mi="0" ci="3" mb="0" cb="0"/><line nr="1151" mi="0" ci="3" mb="0" cb="0"/><line nr="1152" mi="0" ci="1" mb="0" cb="0"/><line nr="1156" mi="0" ci="12" mb="0" cb="0"/><line nr="1160" mi="0" ci="3" mb="0" cb="2"/><line nr="1161" mi="0" ci="4" mb="0" cb="0"/><line nr="1162" mi="0" ci="4" mb="0" cb="0"/><line nr="1167" mi="0" ci="3" mb="0" cb="2"/><line nr="1168" mi="0" ci="4" mb="0" cb="0"/><line nr="1169" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="1847"/><counter type="BRANCH" missed="4" covered="136"/><counter type="LINE" missed="0" covered="391"/><counter type="COMPLEXITY" missed="2" covered="234"/><counter type="METHOD" missed="0" covered="166"/><counter type="CLASS" missed="0" covered="22"/></sourcefile><sourcefile name="JGraphTAdapter.java"><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="2"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="9" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="2"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="2"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="2"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="2"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="2"/><line nr="176" mi="0" ci="5" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="4" mb="0" cb="2"/><line nr="179" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="4"/><line nr="181" mi="0" ci="2" mb="0" cb="0"/><line nr="182" mi="0" ci="6" mb="0" cb="0"/><line nr="183" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="4" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><line nr="190" mi="0" ci="4" mb="0" cb="2"/><line nr="191" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="0" ci="10" mb="0" cb="4"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="6" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="2"/><line nr="201" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="4" mb="0" cb="0"/><line nr="203" mi="0" ci="4" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="4" mb="0" cb="2"/><line nr="210" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="4" mb="0" cb="0"/><line nr="212" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="5" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="2"/><line nr="219" mi="0" ci="2" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="221" mi="0" ci="2" mb="0" cb="2"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="223" mi="0" ci="6" mb="0" cb="0"/><line nr="228" mi="0" ci="6" mb="0" cb="0"/><line nr="233" mi="0" ci="6" mb="0" cb="0"/><line nr="238" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="4" mb="0" cb="2"/><line nr="245" mi="0" ci="12" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="2"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="250" mi="0" ci="14" mb="0" cb="2"/><line nr="251" mi="0" ci="10" mb="0" cb="2"/><line nr="252" mi="0" ci="1" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="258" mi="0" ci="7" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="2"/><line nr="264" mi="0" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="7" mb="0" cb="0"/><line nr="270" mi="0" ci="5" mb="0" cb="0"/><line nr="275" mi="0" ci="4" mb="0" cb="2"/><line nr="276" mi="0" ci="4" mb="0" cb="0"/><line nr="277" mi="0" ci="7" mb="0" cb="0"/><line nr="282" mi="0" ci="5" mb="0" cb="0"/><line nr="287" mi="0" ci="5" mb="0" cb="0"/><line nr="288" mi="0" ci="2" mb="0" cb="2"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="290" mi="0" ci="5" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="2"/><line nr="292" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="12" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="301" mi="0" ci="5" mb="0" cb="0"/><line nr="302" mi="0" ci="2" mb="0" cb="2"/><line nr="303" mi="0" ci="2" mb="0" cb="0"/><line nr="304" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="2"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="307" mi="0" ci="6" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="2"/><line nr="309" mi="0" ci="2" mb="0" cb="0"/><line nr="310" mi="0" ci="5" mb="0" cb="0"/><line nr="311" mi="0" ci="4" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="317" mi="0" ci="4" mb="0" cb="2"/><line nr="318" mi="0" ci="2" mb="0" cb="0"/><line nr="319" mi="0" ci="4" mb="0" cb="0"/><line nr="320" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="4" mb="0" cb="2"/><line nr="326" mi="0" ci="2" mb="0" cb="0"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="338" mi="0" ci="5" mb="0" cb="0"/><line nr="343" mi="0" ci="5" mb="0" cb="0"/><line nr="348" mi="0" ci="3" mb="0" cb="0"/><line nr="353" mi="0" ci="10" mb="0" cb="2"/><line nr="358" mi="0" ci="3" mb="0" cb="2"/><line nr="359" mi="0" ci="5" mb="0" cb="0"/><line nr="360" mi="0" ci="5" mb="0" cb="0"/><line nr="361" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="563"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="140"/><counter type="COMPLEXITY" missed="0" covered="67"/><counter type="METHOD" missed="0" covered="33"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="14" covered="2410"/><counter type="BRANCH" missed="4" covered="204"/><counter type="LINE" missed="0" covered="531"/><counter type="COMPLEXITY" missed="2" covered="301"/><counter type="METHOD" missed="0" covered="199"/><counter type="CLASS" missed="0" covered="23"/></package><counter type="INSTRUCTION" missed="14" covered="2410"/><counter type="BRANCH" missed="4" covered="204"/><counter type="LINE" missed="0" covered="531"/><counter type="COMPLEXITY" missed="2" covered="301"/><counter type="METHOD" missed="0" covered="199"/><counter type="CLASS" missed="0" covered="23"/></report>